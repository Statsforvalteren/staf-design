// src/scripts/update-design-tokens.ts
import path from "path";

// src/utils.ts
import fs from "fs/promises";
import pc from "picocolors";
var cp = async (src, dest, dry, filter) => {
  if (dry) {
    console.log(`${pc.blue("cp")} ${src} ${dest}`);
    return Promise.resolve();
  }
  return fs.cp(src, dest, { recursive: true, filter });
};

// src/scripts/update-design-tokens.ts
var DIRNAME = import.meta.dirname || __dirname;
var TARGET = path.join(DIRNAME, "../../../../internal/design-tokens");
var INTERNAL = path.join(DIRNAME, "../../temp/digdir/design-tokens");
async function updateDesignTokens() {
  console.log("\n\u{1F4C1} Copying design tokens");
  await cp(path.join(INTERNAL, "primitives/modes/color-scheme"), path.join(TARGET, "primitives/modes/color-scheme"));
  await cp(path.join(INTERNAL, "primitives/modes/size"), path.join(TARGET, "primitives/modes/size"));
  await cp(
    path.join(INTERNAL, "primitives/modes/typography/primary"),
    path.join(TARGET, "primitives/modes/typography/primary")
  );
  await cp(
    path.join(INTERNAL, "primitives/modes/typography/size"),
    path.join(TARGET, "primitives/modes/typography/size")
  );
  await cp(path.join(INTERNAL, "primitives/globals.json"), path.join(TARGET, "primitives/globals.json"));
  await cp(path.join(INTERNAL, "semantic"), path.join(TARGET, "semantic"));
  await cp(path.join(INTERNAL, "themes"), path.join(TARGET, "themes"));
  await cp(path.join(INTERNAL, "$designsystemet.jsonc"), path.join(TARGET, "$designsystemet.jsonc"));
  console.log("\u2705 Finished copying design tokens");
}
await updateDesignTokens();
