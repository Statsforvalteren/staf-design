import type { CopyOptions } from 'node:fs';
/**
 * Creates a directory if it does not already exist.
 *
 * @param dir - The path of the directory to create.
 * @param dry - Optional. If `true`, the function will log the operation
 * without actually creating the directory.
 *
 * @returns A promise that resolves when the operation is complete.
 * If the directory already exists or `dry` is `true`, the promise resolves immediately.
 */
export declare const mkdir: (dir: string, dry?: boolean) => Promise<string | void>;
export declare const writeFile: (path: string, data: string, dry?: boolean) => Promise<void>;
export declare const cp: (src: string, dest: string, dry?: boolean, filter?: CopyOptions["filter"]) => Promise<void>;
export declare const copyFile: (src: string, dest: string, dry?: boolean) => Promise<void>;
export declare const cleanDir: (dir: string, dry?: boolean) => Promise<void>;
export declare const readFile: (path: string, dry?: boolean, allowFileNotFound?: boolean) => Promise<string>;
//# sourceMappingURL=utils.d.ts.map