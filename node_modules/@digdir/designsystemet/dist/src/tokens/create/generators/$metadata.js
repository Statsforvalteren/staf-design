// src/tokens/create/generators/$metadata.ts
function generate$Metadata(schemes, themes, colors) {
  return {
    tokenSetOrder: [
      "primitives/globals",
      "primitives/modes/size/small",
      "primitives/modes/size/medium",
      "primitives/modes/size/large",
      "primitives/modes/size/global",
      "primitives/modes/typography/size/small",
      "primitives/modes/typography/size/medium",
      "primitives/modes/typography/size/large",
      ...themes.map((theme) => `primitives/modes/typography/primary/${theme}`),
      ...themes.map((theme) => `primitives/modes/typography/secondary/${theme}`),
      ...schemes.flatMap((scheme) => [...themes.map((theme) => `primitives/modes/color-scheme/${scheme}/${theme}`)]),
      ...themes.map((theme) => `themes/${theme}`),
      "semantic/color",
      ...Object.entries(colors.main).map(([color]) => `semantic/modes/main-color/${color}`),
      ...Object.entries(colors.support).map(([color]) => `semantic/modes/support-color/${color}`),
      "semantic/style"
    ]
  };
}
export {
  generate$Metadata
};
