import type { TransformedToken } from 'style-dictionary';
import type { Format } from 'style-dictionary/types';
export declare const isInlineTokens: (t: TransformedToken) => boolean;
/**
 * Overrides the default sizing formula with a custom one that supports [round()](https://developer.mozilla.org/en-US/docs/Web/CSS/round) if supported.
 *
 * @param format - Function to format a token into a CSS property string.
 * @param tokens - Array of transformed tokens to format.
 * @returns Object with formatted CSS strings for calc and round.
 */
export declare const overrideSizingFormula: (format: (t: TransformedToken) => string, token: TransformedToken) => {
    name: string;
    round: string;
    calc: string;
};
export declare const sizingTemplate: ({ round, calc }: {
    round: string[];
    calc: string[];
}) => string;
export declare const size: Format;
//# sourceMappingURL=size.d.ts.map