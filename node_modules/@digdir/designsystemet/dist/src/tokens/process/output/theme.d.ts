import type { OutputFile } from '../../types.js';
import type { ProcessReturn } from '../platform.js';
export declare const defaultFileHeader: string;
type CreateThemeCSSFiles = {
    /** The processed build results containing formatted CSS outputs grouped by themes and other permutations. */
    processedBuilds: ProcessReturn;
    /** Optional header to be included in the generated CSS files. */
    fileHeader?: string;
};
/**
 * Generates theme-specific CSS files from Style Dictionary build results.
 *
 * @param processedBuilds - The processed build results containing formatted CSS outputs
 *                          grouped by themes and other permutations.
 * @param fileHeader - Optional header to be included in the generated CSS files.
 * @returns An array of `OutputFile` objects, each representing a theme-specific CSS file
 *          with its destination and content.
 *
 * @remarks
 * - The function groups the build results by theme and ensures a deterministic order
 *   for the sections of the entry CSS file using a predefined sort order.
 * - If a CSS section does not have a defined sort order the section is added to the end of the entry file.
 * - The generated CSS files include a header with metadata and layer definitions.
 */
export declare const createThemeCSSFiles: ({ processedBuilds, fileHeader, }: CreateThemeCSSFiles) => OutputFile[];
export {};
//# sourceMappingURL=theme.d.ts.map