export type ColorScheme = 'light' | 'dark' | 'contrast';
export type ContrastMode = 'aa' | 'aaa';
export type ColorNumber = SemanticColorNumberMap[keyof SemanticColorNumberMap];
export type ColorNames = keyof SemanticColorNumberMap;
export type GlobalColors = 'danger' | 'info' | 'success' | 'warning';
export type ColorError = 'none' | 'decorative' | 'interaction';
type SemanticColorNumberMap = {
    'background-default': 1;
    'background-tinted': 2;
    'surface-default': 3;
    'surface-tinted': 4;
    'surface-hover': 5;
    'surface-active': 6;
    'border-subtle': 7;
    'border-default': 8;
    'border-strong': 9;
    'text-subtle': 10;
    'text-default': 11;
    'base-default': 12;
    'base-hover': 13;
    'base-active': 14;
    'base-contrast-subtle': 15;
    'base-contrast-default': 16;
};
type SemanticColorMapping = {
    [K in keyof SemanticColorNumberMap]: {
        name: K;
        number: SemanticColorNumberMap[K];
    };
};
export type ColorMetadataByName = {
    [P in keyof SemanticColorMapping]: SemanticColorMapping[P] & ColorMetadata;
};
export type ColorMetadata = {
    name: ColorNames;
    number: ColorNumber;
    displayName: string;
    description: {
        short: string;
        long: string;
    };
    group: string;
    luminance: {
        light: number;
        dark: number;
        contrast: number;
    };
};
export type Color = ColorMetadata & {
    hex: CssColor;
};
export type ThemeInfo = {
    light: Color[];
    dark: Color[];
    contrast: Color[];
};
/**
 * Supported CSS colors in `designsystemet/color`
 */
export type CssColor = HexColor;
/**
 * Different color formats.
 */
export type HexColor = `#${string}`;
export {};
//# sourceMappingURL=types.d.ts.map