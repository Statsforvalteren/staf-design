{"version":3,"file":"color-fn.cjs","sources":["../src/multiply-matrices.js","../src/util.js","../src/Type.js","../src/Format.js","../src/hooks.js","../src/adapt.js","../src/defaults.js","../src/parse.js","../src/getColor.js","../src/ColorSpace.js","../src/spaces/xyz-d65.js","../src/RGBColorSpace.js","../src/tryColor.js","../src/getAll.js","../src/get.js","../src/setAll.js","../src/set.js","../src/spaces/xyz-d50.js","../src/spaces/lab.js","../src/angles.js","../src/spaces/lch.js","../src/deltaE/deltaE2000.js","../src/spaces/oklab.js","../src/deltaE/deltaEOK.js","../src/inGamut.js","../src/clone.js","../src/distance.js","../src/deltaE/deltaE76.js","../src/deltaE/deltaECMC.js","../src/spaces/xyz-abs-d65.js","../src/spaces/jzazbz.js","../src/spaces/jzczhz.js","../src/deltaE/deltaEJz.js","../src/spaces/ictcp.js","../src/deltaE/deltaEITP.js","../src/deltaE/deltaEOK2.js","../src/spaces/cam16.js","../src/spaces/hct.js","../src/deltaE/deltaEHCT.js","../src/deltaE/index.js","../src/toGamut.js","../src/to.js","../src/serialize.js","../src/spaces/rec2020-linear.js","../src/spaces/rec2020.js","../src/spaces/p3-linear.js","../src/spaces/srgb-linear.js","../src/keywords.js","../src/spaces/srgb.js","../src/spaces/p3.js","../src/display.js","../src/deltas.js","../src/equals.js","../src/luminance.js","../src/contrast/WCAG21.js","../src/contrast/APCA.js","../src/contrast/Michelson.js","../src/contrast/Weber.js","../src/contrast/Lstar.js","../src/spaces/lab-d65.js","../src/contrast/deltaPhi.js","../src/contrast/index.js","../src/contrast.js","../src/chromaticity.js","../src/deltaE.js","../src/variations.js","../src/interpolation.js","../src/spaces/hsl.js","../src/spaces/hsv.js","../src/spaces/hwb.js","../src/spaces/a98rgb-linear.js","../src/spaces/a98rgb.js","../src/spaces/prophoto-linear.js","../src/spaces/prophoto.js","../src/spaces/rec2020-oetf.js","../src/spaces/oklch.js","../src/spaces/okhsl.js","../src/spaces/oklrab.js","../src/spaces/oklrch.js","../src/spaces/okhsv.js","../src/spaces/luv.js","../src/spaces/lchuv.js","../src/spaces/hsluv.js","../src/spaces/hpluv.js","../src/spaces/rec2100-linear.js","../src/spaces/rec2100-pq.js","../src/spaces/rec2100-hlg.js","../src/CATs.js","../src/spaces/acescg.js","../src/spaces/acescc.js","../src/spaces/index-fn.js"],"sourcesContent":["// Type \"imports\"\n/** @typedef {import(\"./types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"./types.js\").Vector3} Vector3 */\n\n/**\n * A is m x n. B is n x p. product is m x p.\n *\n * Array arguments are treated like vectors:\n * - A becomes 1 x n\n * - B becomes n x 1\n *\n * Returns Matrix m x p or equivalent array or number\n *\n * @overload\n * @param {number[]} A Vector 1 x n\n * @param {number[]} B Vector n x 1\n * @returns {number} Scalar number\n *\n * @overload\n * @param {number[][]} A Matrix m x n\n * @param {number[]} B Vector n x 1\n * @returns {number[]} Array with length m\n *\n * @overload\n * @param {number[]} A Vector 1 x n\n * @param {number[][]} B Matrix n x p\n * @returns {number[]} Array with length p\n *\n * @overload\n * @param {number[][]} A Matrix m x n\n * @param {number[][]} B Matrix n x p\n * @returns {number[][]} Matrix m x p\n *\n * @param {number[] | number[][]} A Matrix m x n or a vector\n * @param {number[] | number[][]} B Matrix n x p or a vector\n * @returns {number | number[] | number[][]} Matrix m x p or equivalent array or number\n */\nexport default function multiplyMatrices (A, B) {\n\tlet m = A.length;\n\t/** @type {number[][]} */\n\tlet AM;\n\t/** @type {number[][]} */\n\tlet BM;\n\tlet aVec = false;\n\tlet bVec = false;\n\n\tif (!Array.isArray(A[0])) {\n\t\t// A is vector, convert to [[a, b, c, ...]]\n\t\tAM = [/** @type {number[]} */ (A)];\n\t\tm = AM.length;\n\t\taVec = true;\n\t}\n\telse {\n\t\tAM = /** @type {number[][]} */ (A);\n\t}\n\n\tif (!Array.isArray(B[0])) {\n\t\t// B is vector, convert to [[a], [b], [c], ...]]\n\t\tBM = B.length > 0 ? B.map(x => [x]) : [[]]; // Avoid mapping empty array\n\t\tbVec = true;\n\t}\n\telse {\n\t\tBM = /** @type {number[][]} */ (B);\n\t}\n\n\tlet p = BM[0].length;\n\tlet BM_cols = BM[0].map((_, i) => BM.map(x => x[i])); // transpose B\n\t/** @type {number[] | number[][]} */\n\tlet product = AM.map(row =>\n\t\tBM_cols.map(col => {\n\t\t\tlet ret = 0;\n\n\t\t\tif (!Array.isArray(row)) {\n\t\t\t\tfor (let c of col) {\n\t\t\t\t\tret += row * c;\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < row.length; i++) {\n\t\t\t\tret += row[i] * (col[i] || 0);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}));\n\n\tif (m === 1 && aVec) {\n\t\tproduct = product[0]; // Avoid [[a, b, c, ...]]\n\t}\n\tif (p === 1 && bVec) {\n\t\tif (m === 1 && aVec) {\n\t\t\treturn product[0]; // Avoid [[a]], return a number\n\t\t}\n\t\telse {\n\t\t\treturn product.map(x => x[0]); // Avoid [[a], [b], [c], ...]]\n\t\t}\n\t}\n\n\treturn product;\n}\n\n// dot3 and transform functions adapted from https://github.com/texel-org/color/blob/9793c7d4d02b51f068e0f3fd37131129a4270396/src/core.js\n//\n// The MIT License (MIT)\n// Copyright (c) 2024 Matt DesLauriers\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\n// OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * Returns the dot product of two vectors each with a length of 3.\n *\n * @param {Vector3} a\n * @param {Vector3} b\n * @returns {number}\n */\nfunction dot3 (a, b) {\n\treturn a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Transforms a vector of length 3 by a 3x3 matrix. Specify the same input and output\n * vector to transform in place.\n *\n * @param {Vector3} input\n * @param {Matrix3x3} matrix\n * @param {Vector3} [out]\n * @returns {Vector3}\n */\nexport function multiply_v3_m3x3 (input, matrix, out = [0, 0, 0]) {\n\tconst x = dot3(input, matrix[0]);\n\tconst y = dot3(input, matrix[1]);\n\tconst z = dot3(input, matrix[2]);\n\tout[0] = x;\n\tout[1] = y;\n\tout[2] = z;\n\treturn out;\n}\n","/**\n * Various utility functions\n */\n\nexport { default as multiplyMatrices, multiply_v3_m3x3 } from \"./multiply-matrices.js\";\n\n/**\n * Check if a value is a string (including a String object)\n * @param {any} str - Value to check\n * @returns {str is string}\n */\nexport function isString (str) {\n\treturn type(str) === \"string\";\n}\n\n/**\n * Determine the internal JavaScript [[Class]] of an object.\n * @param {any} o - Value to check\n * @returns {string}\n */\nexport function type (o) {\n\tlet str = Object.prototype.toString.call(o);\n\n\treturn (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\n\n/**\n * @param {number} n\n * @param {{ precision?: number | undefined, unit?: string | undefined }} options\n * @returns {string}\n */\nexport function serializeNumber (n, { precision = 16, unit }) {\n\tif (isNone(n)) {\n\t\treturn \"none\";\n\t}\n\n\tn = +toPrecision(n, precision);\n\n\treturn n + (unit ?? \"\");\n}\n\n/**\n * Check if a value corresponds to a none argument\n * @param {any} n - Value to check\n * @returns {n is null}\n */\nexport function isNone (n) {\n\treturn n === null;\n}\n\n/**\n * Replace none values with 0\n * @param {number | null} n\n * @returns {number}\n */\nexport function skipNone (n) {\n\treturn isNone(n) ? 0 : n;\n}\n\n/**\n * Round a number to a certain number of significant digits\n * @param {number} n - The number to round\n * @param {number} precision - Number of significant digits\n */\nexport function toPrecision (n, precision) {\n\tif (n === 0) {\n\t\treturn 0;\n\t}\n\tlet integer = ~~n;\n\tlet digits = 0;\n\tif (integer && precision) {\n\t\tdigits = ~~Math.log10(Math.abs(integer)) + 1;\n\t}\n\tconst multiplier = 10.0 ** (precision - digits);\n\treturn Math.floor(n * multiplier + 0.5) / multiplier;\n}\n\n/**\n * @param {number} start\n * @param {number} end\n * @param {number} p\n */\nexport function interpolate (start, end, p) {\n\tif (isNaN(start)) {\n\t\treturn end;\n\t}\n\n\tif (isNaN(end)) {\n\t\treturn start;\n\t}\n\n\treturn start + (end - start) * p;\n}\n\n/**\n * @param {number} start\n * @param {number} end\n * @param {number} value\n */\nexport function interpolateInv (start, end, value) {\n\treturn (value - start) / (end - start);\n}\n\n/**\n * @param {[number, number]} from\n * @param {[number, number]} to\n * @param {number} value\n */\nexport function mapRange (from, to, value) {\n\tif (\n\t\t!from ||\n\t\t!to ||\n\t\tfrom === to ||\n\t\t(from[0] === to[0] && from[1] === to[1]) ||\n\t\tisNaN(value) ||\n\t\tvalue === null\n\t) {\n\t\t// Ranges missing or the same\n\t\treturn value;\n\t}\n\n\treturn interpolate(to[0], to[1], interpolateInv(from[0], from[1], value));\n}\n\n/**\n * Clamp value between the minimum and maximum\n * @param {number} min minimum value to return\n * @param {number} val the value to return if it is between min and max\n * @param {number} max maximum value to return\n */\nexport function clamp (min, val, max) {\n\treturn Math.max(Math.min(max, val), min);\n}\n\n/**\n * Copy sign of one value to another.\n * @param {number} to - Number to copy sign to\n * @param {number} from - Number to copy sign from\n */\nexport function copySign (to, from) {\n\treturn Math.sign(to) === Math.sign(from) ? to : -to;\n}\n\n/**\n * Perform pow on a signed number and copy sign to result\n * @param {number} base The base number\n * @param {number} exp The exponent\n */\nexport function spow (base, exp) {\n\treturn copySign(Math.abs(base) ** exp, base);\n}\n\n/**\n * Perform a divide, but return zero if the denominator is zero\n * @param {number} n The numerator\n * @param {number} d The denominator\n */\nexport function zdiv (n, d) {\n\treturn d === 0 ? 0 : n / d;\n}\n\n/**\n * Perform a bisect on a sorted list and locate the insertion point for\n * a value in arr to maintain sorted order.\n * @param {number[]} arr - array of sorted numbers\n * @param {number} value - value to find insertion point for\n * @param {number} lo - used to specify a the low end of a subset of the list\n * @param {number} hi - used to specify a the high end of a subset of the list\n */\nexport function bisectLeft (arr, value, lo = 0, hi = arr.length) {\n\twhile (lo < hi) {\n\t\tconst mid = (lo + hi) >> 1;\n\t\tif (arr[mid] < value) {\n\t\t\tlo = mid + 1;\n\t\t}\n\t\telse {\n\t\t\thi = mid;\n\t\t}\n\t}\n\treturn lo;\n}\n\n/**\n * Determines whether an argument is an instance of a constructor, including subclasses.\n * This is done by first just checking `instanceof`,\n * and then comparing the string names of the constructors if that fails.\n * @param {any} arg\n * @param {C} constructor\n * @template {new (...args: any) => any} C\n * @returns {arg is InstanceType<C>}\n */\nexport function isInstance (arg, constructor) {\n\tif (arg instanceof constructor) {\n\t\treturn true;\n\t}\n\n\tconst targetName = constructor.name;\n\n\twhile (arg) {\n\t\tconst proto = Object.getPrototypeOf(arg);\n\t\tconst constructorName = proto?.constructor?.name;\n\t\tif (constructorName === targetName) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!constructorName || constructorName === \"Object\") {\n\t\t\treturn false;\n\t\t}\n\t\targ = proto;\n\t}\n\n\treturn false;\n}\n","import { serializeNumber, mapRange, isInstance } from \"./util.js\";\n\nexport default class Type {\n\t// Class properties - declared here so that type inference works\n\ttype;\n\tcoordMeta;\n\tcoordRange;\n\t/** @type {[number, number]} */\n\trange;\n\n\t/**\n\t * @param {any} type\n\t * @param {import(\"./types.js\").CoordMeta} coordMeta\n\t */\n\tconstructor (type, coordMeta) {\n\t\tif (typeof type === \"object\") {\n\t\t\tthis.coordMeta = type;\n\t\t}\n\n\t\tif (coordMeta) {\n\t\t\tthis.coordMeta = coordMeta;\n\t\t\tthis.coordRange = coordMeta.range ?? coordMeta.refRange;\n\t\t}\n\n\t\tif (typeof type === \"string\") {\n\t\t\tlet params = type\n\t\t\t\t.trim()\n\t\t\t\t.match(/^(?<type><[a-z]+>)(\\[(?<min>-?[.\\d]+),\\s*(?<max>-?[.\\d]+)\\])?$/);\n\n\t\t\tif (!params) {\n\t\t\t\tthrow new TypeError(`Cannot parse ${type} as a type definition.`);\n\t\t\t}\n\n\t\t\tthis.type = params.groups.type;\n\t\t\tlet { min, max } = params.groups;\n\n\t\t\tif (min || max) {\n\t\t\t\tthis.range = [+min, +max];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @returns {[number, number]} */\n\tget computedRange () {\n\t\tif (this.range) {\n\t\t\treturn this.range;\n\t\t}\n\t\tif (this.type === \"<percentage>\") {\n\t\t\treturn this.percentageRange();\n\t\t}\n\t\telse if (this.type === \"<angle>\") {\n\t\t\treturn [0, 360];\n\t\t}\n\t\treturn null;\n\t}\n\n\tget unit () {\n\t\tif (this.type === \"<percentage>\") {\n\t\t\treturn \"%\";\n\t\t}\n\t\telse if (this.type === \"<angle>\") {\n\t\t\treturn \"deg\";\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Map a number to the internal representation\n\t * @param {number} number\n\t */\n\tresolve (number) {\n\t\tif (this.type === \"<angle>\") {\n\t\t\treturn number;\n\t\t}\n\n\t\tlet fromRange = this.computedRange;\n\t\tlet toRange = this.coordRange;\n\n\t\tif (this.type === \"<percentage>\") {\n\t\t\ttoRange ??= this.percentageRange();\n\t\t}\n\n\t\treturn mapRange(fromRange, toRange, number);\n\t}\n\n\t/**\n\t * Serialize a number from the internal representation to a string\n\t * @param {number} number\n\t * @param {number} [precision]\n\t */\n\tserialize (number, precision) {\n\t\tlet toRange = this.type === \"<percentage>\" ? this.percentageRange(100) : this.computedRange;\n\n\t\tlet unit = this.unit;\n\n\t\tnumber = mapRange(this.coordRange, toRange, number);\n\t\treturn serializeNumber(number, { unit, precision });\n\t}\n\n\ttoString () {\n\t\tlet ret = this.type;\n\n\t\tif (this.range) {\n\t\t\tlet [min = \"\", max = \"\"] = this.range;\n\t\t\tret += `[${min},${max}]`;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Returns a percentage range for values of this type\n\t * @param {number} scale\n\t * @returns {[number, number]}\n\t */\n\tpercentageRange (scale = 1) {\n\t\tlet range;\n\t\tif (\n\t\t\t(this.coordMeta && this.coordMeta.range) ||\n\t\t\t(this.coordRange && this.coordRange[0] >= 0)\n\t\t) {\n\t\t\trange = [0, 1];\n\t\t}\n\t\telse {\n\t\t\trange = [-1, 1];\n\t\t}\n\t\treturn [range[0] * scale, range[1] * scale];\n\t}\n\n\tstatic get (type, coordMeta) {\n\t\tif (isInstance(type, this)) {\n\t\t\treturn type;\n\t\t}\n\n\t\treturn new this(type, coordMeta);\n\t}\n}\n","import { isInstance, isNone } from \"./util.js\";\nimport Type from \"./Type.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorSpace} ColorSpace */\n/** @typedef {import(\"./types.js\").Coords} Coords */\n/** @typedef {import(\"./types.js\").Format} FormatInterface */\n\n/**\n * @internal\n * Used to index {@link FormatInterface Format} objects and store an instance.\n * Not meant for external use\n */\nexport const instance = Symbol(\"instance\");\n\n/**\n * Remove the first element of an array type\n * @template {any[]} T\n * @typedef {T extends [any, ...infer R] ? R : T[number][]} RemoveFirstElement\n */\n\n/**\n * @class Format\n * @implements {Omit<FormatInterface, \"coords\" | \"serializeCoords\">}\n * Class to hold a color serialization format\n */\nexport default class Format {\n\t// Class properties - declared here so that type inference works\n\ttype;\n\tname;\n\tspaceCoords;\n\t/** @type {Type[][]} */\n\tcoords;\n\t/** @type {string | undefined} */\n\tid;\n\t/** @type {boolean | undefined} */\n\talpha;\n\n\t/**\n\t * @param {FormatInterface} format\n\t * @param {ColorSpace} space\n\t */\n\tconstructor (format, space = format.space) {\n\t\tformat[instance] = this;\n\t\tthis.type = \"function\";\n\t\tthis.name = \"color\";\n\n\t\tObject.assign(this, format);\n\n\t\tthis.space = space;\n\n\t\tif (this.type === \"custom\") {\n\t\t\t// Nothing else to do here\n\t\t\treturn;\n\t\t}\n\n\t\tthis.spaceCoords = Object.values(space.coords);\n\n\t\tif (!this.coords) {\n\t\t\t// @ts-expect-error Strings are converted to the correct type later\n\t\t\tthis.coords = this.spaceCoords.map(coordMeta => {\n\t\t\t\tlet ret = [\"<number>\", \"<percentage>\"];\n\n\t\t\t\tif (coordMeta.type === \"angle\") {\n\t\t\t\t\tret.push(\"<angle>\");\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t}\n\n\t\tthis.coords = this.coords.map(\n\t\t\t/** @param {string | string[] | Type[]} types */ (types, i) => {\n\t\t\t\tlet coordMeta = this.spaceCoords[i];\n\n\t\t\t\tif (typeof types === \"string\") {\n\t\t\t\t\ttypes = types.trim().split(/\\s*\\|\\s*/);\n\t\t\t\t}\n\n\t\t\t\treturn types.map(type => Type.get(type, coordMeta));\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * @param {Coords} coords\n\t * @param {number} precision\n\t * @param {Type[]} types\n\t */\n\tserializeCoords (coords, precision, types) {\n\t\ttypes = coords.map((_, i) =>\n\t\t\tType.get(types?.[i] ?? this.coords[i][0], this.spaceCoords[i]));\n\t\treturn coords.map((c, i) => types[i].serialize(c, precision));\n\t}\n\n\t/**\n\t * Validates the coordinates of a color against a format's coord grammar and\n\t * maps the coordinates to the range or refRange of the coordinates.\n\t * @param {Coords} coords\n\t * @param {[string, string, string]} types\n\t */\n\tcoerceCoords (coords, types) {\n\t\treturn Object.entries(this.space.coords).map(([id, coordMeta], i) => {\n\t\t\tlet arg = coords[i];\n\n\t\t\tif (isNone(arg) || isNaN(arg)) {\n\t\t\t\t// Nothing to do here\n\t\t\t\treturn arg;\n\t\t\t}\n\n\t\t\t// Find grammar alternative that matches the provided type\n\t\t\t// Non-strict equals is intentional because we are comparing w/ string objects\n\t\t\tlet providedType = types[i];\n\t\t\tlet type = this.coords[i].find(c => c.type == providedType);\n\n\t\t\t// Check that each coord conforms to its grammar\n\t\t\tif (!type) {\n\t\t\t\t// Type does not exist in the grammar, throw\n\t\t\t\tlet coordName = coordMeta.name || id;\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t`${providedType ?? /** @type {any} */ (arg)?.raw ?? arg} not allowed for ${coordName} in ${this.name}()`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\targ = type.resolve(arg);\n\n\t\t\tif (type.range) {\n\t\t\t\t// Adjust type to include range\n\t\t\t\ttypes[i] = type.toString();\n\t\t\t}\n\n\t\t\treturn arg;\n\t\t});\n\t}\n\n\t/**\n\t * @returns {boolean | Required<FormatInterface>[\"serialize\"]}\n\t */\n\tcanSerialize () {\n\t\treturn this.type === \"function\" || /** @type {any} */ (this).serialize;\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {(import(\"./types.js\").ColorConstructor) | undefined | null}\n\t */\n\tparse (str) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {Format | FormatInterface} format\n\t * @param {RemoveFirstElement<ConstructorParameters<typeof Format>>} args\n\t * @returns {Format}\n\t */\n\tstatic get (format, ...args) {\n\t\tif (!format || isInstance(format, this)) {\n\t\t\treturn /** @type {Format} */ (format);\n\t\t}\n\n\t\tif (format[instance]) {\n\t\t\treturn format[instance];\n\t\t}\n\n\t\treturn new Format(format, ...args);\n\t}\n}\n","/**\n * A class for adding deep extensibility to any piece of JS code\n */\nexport class Hooks {\n\tadd (name, callback, first) {\n\t\tif (typeof arguments[0] != \"string\") {\n\t\t\t// Multiple hooks\n\t\t\tfor (var name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t(Array.isArray(name) ? name : [name]).forEach(function (name) {\n\t\t\tthis[name] = this[name] || [];\n\n\t\t\tif (callback) {\n\t\t\t\tthis[name][first ? \"unshift\" : \"push\"](callback);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\trun (name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function (callback) {\n\t\t\tcallback.call(env && env.context ? env.context : env, env);\n\t\t});\n\t}\n}\n\n/**\n * The instance of {@link Hooks} used throughout Color.js\n */\nconst hooks = new Hooks();\n\nexport default hooks;\n","import hooks from \"./hooks.js\";\nimport { multiply_v3_m3x3 } from \"./util.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").White} White */\n\n/** @type {Record<string, White>} */\n// prettier-ignore\nexport const WHITES = {\n\t// for compatibility, the four-digit chromaticity-derived ones everyone else uses\n\tD50: [0.3457 / 0.3585, 1.00000, (1.0 - 0.3457 - 0.3585) / 0.3585],\n\tD65: [0.3127 / 0.3290, 1.00000, (1.0 - 0.3127 - 0.3290) / 0.3290],\n};\n\n/**\n *\n * @param {string | White} name\n * @returns {White}\n */\nexport function getWhite (name) {\n\tif (Array.isArray(name)) {\n\t\treturn name;\n\t}\n\n\treturn WHITES[name];\n}\n\n/**\n * Adapt XYZ from white point W1 to W2\n * @param {White | string} W1\n * @param {White | string} W2\n * @param {[number, number, number]} XYZ\n * @param {{ method?: string | undefined }} options\n * @returns {[number, number, number]}\n */\nexport default function adapt (W1, W2, XYZ, options = {}) {\n\tW1 = getWhite(W1);\n\tW2 = getWhite(W2);\n\n\tif (!W1 || !W2) {\n\t\tthrow new TypeError(\n\t\t\t`Missing white point to convert ${!W1 ? \"from\" : \"\"}${!W1 && !W2 ? \"/\" : \"\"}${!W2 ? \"to\" : \"\"}`,\n\t\t);\n\t}\n\n\tif (W1 === W2) {\n\t\t// Same whitepoints, no conversion needed\n\t\treturn XYZ;\n\t}\n\n\tlet env = { W1, W2, XYZ, options };\n\n\thooks.run(\"chromatic-adaptation-start\", env);\n\n\tif (!env.M) {\n\t\tif (env.W1 === WHITES.D65 && env.W2 === WHITES.D50) {\n\t\t\t// prettier-ignore\n\t\t\tenv.M = [\n\t\t\t\t[  1.0479297925449969,   0.022946870601609652, -0.05019226628920524  ],\n\t\t\t\t[  0.02962780877005599,  0.9904344267538799,   -0.017073799063418826 ],\n\t\t\t\t[ -0.009243040646204504, 0.015055191490298152,  0.7518742814281371   ],\n\t\t\t];\n\t\t}\n\t\telse if (env.W1 === WHITES.D50 && env.W2 === WHITES.D65) {\n\t\t\t// prettier-ignore\n\t\t\tenv.M = [\n\t\t\t\t[  0.955473421488075,    -0.02309845494876471,  0.06325924320057072  ],\n\t\t\t\t[ -0.0283697093338637,    1.0099953980813041,   0.021041441191917323 ],\n\t\t\t\t[  0.012314014864481998, -0.020507649298898964, 1.330365926242124    ],\n\t\t\t];\n\t\t}\n\t}\n\n\thooks.run(\"chromatic-adaptation-end\", env);\n\n\tif (env.M) {\n\t\treturn multiply_v3_m3x3(env.XYZ, env.M);\n\t}\n\telse {\n\t\tthrow new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n\t}\n}\n","// Global defaults one may want to configure\nexport default {\n\tgamut_mapping: \"css\",\n\tprecision: 5,\n\tdeltaE: \"76\", // Default deltaE method\n\tverbose: globalThis?.process?.env?.NODE_ENV?.toLowerCase() !== \"test\",\n\twarn: function warn (msg) {\n\t\tif (this.verbose) {\n\t\t\tglobalThis?.console?.warn?.(msg);\n\t\t}\n\t},\n};\n","import { isNone, clamp } from \"./util.js\";\nimport hooks from \"./hooks.js\";\nimport ColorSpace from \"./ColorSpace.js\";\nimport defaults from \"./defaults.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ArgumentMeta} ArgumentMeta */\n/** @typedef {import(\"./types.js\").ColorConstructor} ColorConstructor */\n/** @typedef {import(\"./types.js\").ParseFunctionReturn} ParseFunctionReturn */\n/** @typedef {import(\"./types.js\").ParseOptions} ParseOptions */\n\n/**\n * Convert a CSS Color string to a color object\n * @param {string} str\n * @param {ParseOptions} [options]\n * @returns {ColorConstructor}\n */\nexport default function parse (str, options) {\n\tlet env = {\n\t\tstr: String(str)?.trim(),\n\t\toptions,\n\t};\n\n\thooks.run(\"parse-start\", env);\n\n\tif (env.color) {\n\t\treturn env.color;\n\t}\n\n\tenv.parsed = parseFunction(env.str);\n\tlet ret;\n\tlet meta = env.options ? (env.options.parseMeta ?? env.options.meta) : null;\n\n\tif (env.parsed) {\n\t\t// Is a functional syntax\n\t\tlet name = env.parsed.name;\n\t\tlet format;\n\t\tlet space;\n\t\tlet coords = env.parsed.args;\n\t\tlet types = coords.map((c, i) => env.parsed.argMeta[i]?.type);\n\n\t\tif (name === \"color\") {\n\t\t\t// color() function\n\t\t\tlet id = coords.shift();\n\t\t\ttypes.shift();\n\t\t\t// Check against both <dashed-ident> and <ident> versions\n\t\t\tlet alternateId = id.startsWith(\"--\") ? id.substring(2) : `--${id}`;\n\t\t\tlet ids = [id, alternateId];\n\t\t\tformat = ColorSpace.findFormat({ name, id: ids, type: \"function\" });\n\n\t\t\tif (!format) {\n\t\t\t\t// Not found\n\t\t\t\tlet didYouMean;\n\n\t\t\t\tlet registryId = id in ColorSpace.registry ? id : alternateId;\n\t\t\t\tif (registryId in ColorSpace.registry) {\n\t\t\t\t\t// Used color space id instead of color() id, these are often different\n\t\t\t\t\tlet cssId = ColorSpace.registry[registryId].formats?.color?.id;\n\n\t\t\t\t\tif (cssId) {\n\t\t\t\t\t\tlet altColor = str.replace(\"color(\" + id, \"color(\" + cssId);\n\t\t\t\t\t\tdidYouMean = `Did you mean ${altColor}?`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t`Cannot parse ${env.str}. ` + (didYouMean ?? \"Missing a plugin?\"),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tspace = format.space;\n\n\t\t\tif (format.id.startsWith(\"--\") && !id.startsWith(\"--\")) {\n\t\t\t\tdefaults.warn(\n\t\t\t\t\t`${space.name} is a non-standard space and not currently supported in the CSS spec. ` +\n\t\t\t\t\t\t`Use prefixed color(${format.id}) instead of color(${id}).`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (id.startsWith(\"--\") && !format.id.startsWith(\"--\")) {\n\t\t\t\tdefaults.warn(\n\t\t\t\t\t`${space.name} is a standard space and supported in the CSS spec. ` +\n\t\t\t\t\t\t`Use color(${format.id}) instead of prefixed color(${id}).`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tformat = ColorSpace.findFormat({ name, type: \"function\" });\n\t\t\tspace = format.space;\n\t\t}\n\n\t\tif (meta) {\n\t\t\tObject.assign(meta, {\n\t\t\t\tformat,\n\t\t\t\tformatId: format.name,\n\t\t\t\ttypes,\n\t\t\t\tcommas: env.parsed.commas,\n\t\t\t});\n\t\t}\n\n\t\tlet alpha = 1;\n\n\t\tif (env.parsed.lastAlpha) {\n\t\t\talpha = env.parsed.args.pop();\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.alphaType = types.pop();\n\t\t\t}\n\t\t}\n\n\t\tlet coordCount = format.coords.length;\n\n\t\tif (coords.length !== coordCount) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Expected ${coordCount} coordinates for ${space.id} in ${env.str}), got ${coords.length}`,\n\t\t\t);\n\t\t}\n\n\t\tcoords = format.coerceCoords(coords, types);\n\n\t\tret = { spaceId: space.id, coords, alpha };\n\t}\n\telse {\n\t\t// Custom, colorspace-specific format\n\t\tspaceloop: for (let space of ColorSpace.all) {\n\t\t\tfor (let formatId in space.formats) {\n\t\t\t\tlet format = space.formats[formatId];\n\n\t\t\t\tif (format.type !== \"custom\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (format.test && !format.test(env.str)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Convert to Format object\n\t\t\t\tlet formatObject = space.getFormat(format);\n\n\t\t\t\tlet color = formatObject.parse(env.str);\n\n\t\t\t\tif (color) {\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tObject.assign(meta, { format: formatObject, formatId });\n\t\t\t\t\t}\n\n\t\t\t\t\tret = color;\n\t\t\t\t\tbreak spaceloop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!ret) {\n\t\t// If we're here, we couldn't parse\n\t\tthrow new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\n\t}\n\n\t// Clamp alpha to [0, 1]\n\tret.alpha = isNone(ret.alpha)\n\t\t? ret.alpha\n\t\t: ret.alpha === undefined\n\t\t\t? 1\n\t\t\t: clamp(0, ret.alpha, 1);\n\n\treturn ret;\n}\n\n/**\n * Units and multiplication factors for the internally stored numbers\n */\nexport const units = {\n\t\"%\": 0.01,\n\tdeg: 1,\n\tgrad: 0.9,\n\trad: 180 / Math.PI,\n\tturn: 360,\n};\n\nexport const regex = {\n\t// Need to list calc(NaN) explicitly as otherwise its ending paren would terminate the function call\n\tfunction: /^([a-z]+)\\(((?:calc\\(NaN\\)|.)+?)\\)$/i,\n\tnumber: /^([-+]?(?:[0-9]*\\.)?[0-9]+(e[-+]?[0-9]+)?)$/i,\n\tunitValue: RegExp(`(${Object.keys(units).join(\"|\")})$`),\n\n\t// NOTE The -+ are not just for prefix, but also for idents, and e+N notation!\n\tsingleArgument: /\\/?\\s*(none|NaN|calc\\(NaN\\)|[-+\\w.]+(?:%|deg|g?rad|turn)?)/g,\n};\n\n/**\n * Parse a single function argument\n * @param {string} rawArg\n * @returns {{value: number, meta: ArgumentMeta}}\n */\nexport function parseArgument (rawArg) {\n\t/** @type {Partial<ArgumentMeta>} */\n\tlet meta = {};\n\tlet unit = rawArg.match(regex.unitValue)?.[0];\n\t/** @type {string | number} */\n\tlet value = (meta.raw = rawArg);\n\n\tif (unit) {\n\t\t// It’s a dimension token\n\t\tmeta.type = unit === \"%\" ? \"<percentage>\" : \"<angle>\";\n\t\tmeta.unit = unit;\n\t\tmeta.unitless = Number(value.slice(0, -unit.length)); // unitless number\n\n\t\tvalue = meta.unitless * units[unit];\n\t}\n\telse if (regex.number.test(value)) {\n\t\t// It's a number\n\t\t// Convert numerical args to numbers\n\t\tvalue = Number(value);\n\t\tmeta.type = \"<number>\";\n\t}\n\telse if (value === \"none\") {\n\t\tvalue = null;\n\t}\n\telse if (value === \"NaN\" || value === \"calc(NaN)\") {\n\t\tvalue = NaN;\n\t\tmeta.type = \"<number>\";\n\t}\n\telse {\n\t\tmeta.type = \"<ident>\";\n\t}\n\n\treturn { value: /** @type {number} */ (value), meta: /** @type {ArgumentMeta} */ (meta) };\n}\n\n/**\n * Parse a CSS function, regardless of its name and arguments\n * @param {string} str String to parse\n * @return {ParseFunctionReturn | void}\n */\nexport function parseFunction (str) {\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tstr = str.trim();\n\n\tlet parts = str.match(regex.function);\n\n\tif (parts) {\n\t\t// It is a function, parse args\n\t\tlet args = [];\n\t\tlet argMeta = [];\n\t\tlet lastAlpha = false;\n\t\tlet name = parts[1].toLowerCase();\n\n\t\tlet separators = parts[2].replace(regex.singleArgument, ($0, rawArg) => {\n\t\t\tlet { value, meta } = parseArgument(rawArg);\n\n\t\t\tif (\n\t\t\t\t// If there's a slash here, it's modern syntax\n\t\t\t\t$0.startsWith(\"/\") ||\n\t\t\t\t// If there's still elements to process after there's already 3 in `args` (and the we're not dealing with \"color()\"), it's likely to be a legacy color like \"hsl(0, 0%, 0%, 0.5)\"\n\t\t\t\t(name !== \"color\" && args.length === 3)\n\t\t\t) {\n\t\t\t\t// It's alpha\n\t\t\t\tlastAlpha = true;\n\t\t\t}\n\n\t\t\targs.push(value);\n\t\t\targMeta.push(meta);\n\t\t\treturn \"\";\n\t\t});\n\n\t\treturn {\n\t\t\tname,\n\t\t\targs,\n\t\t\targMeta,\n\t\t\tlastAlpha,\n\t\t\tcommas: separators.includes(\",\"),\n\t\t\trawName: parts[1],\n\t\t\trawArgs: parts[2],\n\t\t};\n\t}\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport { isString, isInstance } from \"./util.js\";\nimport parse from \"./parse.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n\n/** @typedef {import(\"./types.js\").ParseOptions} GetColorOptions */\n\n/**\n * Resolves a color reference (object or string) to a plain color object\n * @overload\n * @param {ColorTypes} color\n * @param {GetColorOptions} [options]\n * @returns {PlainColorObject}\n */\n/**\n * @overload\n * @param {ColorTypes[]} color\n * @param {GetColorOptions} [options]\n * @returns {PlainColorObject[]}\n */\nexport default function getColor (color, options) {\n\tif (Array.isArray(color)) {\n\t\treturn color.map(c => getColor(c, options));\n\t}\n\n\tif (!color) {\n\t\tthrow new TypeError(\"Empty color reference\");\n\t}\n\n\tif (isString(color)) {\n\t\tcolor = parse(color, options);\n\t}\n\n\t// Object fixup\n\tlet space = color.space || color.spaceId;\n\n\tif (typeof space === \"string\") {\n\t\t// Convert string id to color space object\n\t\tcolor.space = ColorSpace.get(space);\n\t}\n\n\tif (color.alpha === undefined) {\n\t\tcolor.alpha = 1;\n\t}\n\n\treturn color;\n}\n","/**\n * @packageDocumentation\n * Defines the class and other types related to creating color spaces.\n * For the builtin color spaces, see the `spaces` module.\n */\nimport { type, isNone, isInstance } from \"./util.js\";\nimport Format from \"./Format.js\";\nimport { getWhite } from \"./adapt.js\";\nimport hooks from \"./hooks.js\";\nimport getColor from \"./getColor.js\";\n\nconst ε = 0.000075;\n\n/**\n * Class to represent a color space\n */\nexport default class ColorSpace {\n\tconstructor (options) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.base = options.base ? ColorSpace.get(options.base) : null;\n\t\tthis.aliases = options.aliases;\n\n\t\tif (this.base) {\n\t\t\tthis.fromBase = options.fromBase;\n\t\t\tthis.toBase = options.toBase;\n\t\t}\n\n\t\t// Coordinate metadata\n\n\t\tlet coords = options.coords ?? this.base.coords;\n\n\t\tfor (let name in coords) {\n\t\t\tif (!(\"name\" in coords[name])) {\n\t\t\t\tcoords[name].name = name;\n\t\t\t}\n\t\t}\n\t\tthis.coords = coords;\n\n\t\t// White point\n\n\t\tlet white = options.white ?? this.base.white ?? \"D65\";\n\t\tthis.white = getWhite(white);\n\n\t\t// Sort out formats\n\n\t\tthis.formats = options.formats ?? {};\n\n\t\tfor (let name in this.formats) {\n\t\t\tlet format = this.formats[name];\n\t\t\tformat.type ||= \"function\";\n\t\t\tformat.name ||= name;\n\t\t}\n\n\t\tif (!this.formats.color?.id) {\n\t\t\tthis.formats.color = {\n\t\t\t\t...(this.formats.color ?? {}),\n\t\t\t\tid: options.cssId || this.id,\n\t\t\t};\n\t\t}\n\n\t\t// Gamut space\n\n\t\tif (options.gamutSpace) {\n\t\t\t// Gamut space explicitly specified\n\t\t\tthis.gamutSpace =\n\t\t\t\toptions.gamutSpace === \"self\" ? this : ColorSpace.get(options.gamutSpace);\n\t\t}\n\t\telse {\n\t\t\t// No gamut space specified, calculate a sensible default\n\t\t\tif (this.isPolar) {\n\t\t\t\t// Do not check gamut through polar coordinates\n\t\t\t\tthis.gamutSpace = this.base;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.gamutSpace = this;\n\t\t\t}\n\t\t}\n\n\t\t// Optimize inGamut for unbounded spaces\n\t\tif (this.gamutSpace.isUnbounded) {\n\t\t\tthis.inGamut = (coords, options) => {\n\t\t\t\treturn true;\n\t\t\t};\n\t\t}\n\n\t\t// Other stuff\n\t\tthis.referred = options.referred;\n\n\t\t// Compute ancestors and store them, since they will never change\n\t\tObject.defineProperty(this, \"path\", {\n\t\t\tvalue: getPath(this).reverse(),\n\t\t\twritable: false,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t});\n\n\t\thooks.run(\"colorspace-init-end\", this);\n\t}\n\n\tinGamut (coords, { epsilon = ε } = {}) {\n\t\tif (!this.equals(this.gamutSpace)) {\n\t\t\tcoords = this.to(this.gamutSpace, coords);\n\t\t\treturn this.gamutSpace.inGamut(coords, { epsilon });\n\t\t}\n\n\t\tlet coordMeta = Object.values(this.coords);\n\n\t\treturn coords.every((c, i) => {\n\t\t\tlet meta = coordMeta[i];\n\n\t\t\tif (meta.type !== \"angle\" && meta.range) {\n\t\t\t\tif (isNone(c)) {\n\t\t\t\t\t// NaN is always in gamut\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet [min, max] = meta.range;\n\t\t\t\treturn (\n\t\t\t\t\t(min === undefined || c >= min - epsilon) &&\n\t\t\t\t\t(max === undefined || c <= max + epsilon)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tget isUnbounded () {\n\t\treturn Object.values(this.coords).every(coord => !(\"range\" in coord));\n\t}\n\n\tget cssId () {\n\t\treturn this.formats?.color?.id || this.id;\n\t}\n\n\tget isPolar () {\n\t\tfor (let id in this.coords) {\n\t\t\tif (this.coords[id].type === \"angle\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Lookup a format in this color space\n\t * @param {string | object | Format} format - Format id if string. If object, it's converted to a `Format` object and returned.\n\t * @returns {Format}\n\t */\n\tgetFormat (format) {\n\t\tif (!format) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (format === \"default\") {\n\t\t\tformat = Object.values(this.formats)[0];\n\t\t}\n\t\telse if (typeof format === \"string\") {\n\t\t\tformat = this.formats[format];\n\t\t}\n\n\t\tlet ret = Format.get(format, this);\n\n\t\tif (ret !== format && format.name in this.formats) {\n\t\t\t// Update the format we have on file so we can find it more quickly next time\n\t\t\tthis.formats[format.name] = ret;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Check if this color space is the same as another color space reference.\n\t * Allows proxying color space objects and comparing color spaces with ids.\n\t * @param {string | ColorSpace} space ColorSpace object or id to compare to\n\t * @returns {boolean}\n\t */\n\tequals (space) {\n\t\tif (!space) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === space || this.id === space || this.id === space.id;\n\t}\n\n\tto (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\tconst color = getColor(space);\n\t\t\t[space, coords] = [color.space, color.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (this.equals(space)) {\n\t\t\t// Same space, no change needed\n\t\t\treturn coords;\n\t\t}\n\n\t\t// Convert NaN to 0, which seems to be valid in every coordinate of every color space\n\t\tcoords = coords.map(c => (isNone(c) ? 0 : c));\n\n\t\t// Find connection space = lowest common ancestor in the base tree\n\t\tlet myPath = this.path;\n\t\tlet otherPath = space.path;\n\n\t\tlet connectionSpace, connectionSpaceIndex;\n\n\t\tfor (let i = 0; i < myPath.length; i++) {\n\t\t\tif (myPath[i].equals(otherPath[i])) {\n\t\t\t\tconnectionSpace = myPath[i];\n\t\t\t\tconnectionSpaceIndex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!connectionSpace) {\n\t\t\t// This should never happen\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot convert between color spaces ${this} and ${space}: no connection space was found`,\n\t\t\t);\n\t\t}\n\n\t\t// Go up from current space to connection space\n\t\tfor (let i = myPath.length - 1; i > connectionSpaceIndex; i--) {\n\t\t\tcoords = myPath[i].toBase(coords);\n\t\t}\n\n\t\t// Go down from connection space to target space\n\t\tfor (let i = connectionSpaceIndex + 1; i < otherPath.length; i++) {\n\t\t\tcoords = otherPath[i].fromBase(coords);\n\t\t}\n\n\t\treturn coords;\n\t}\n\n\tfrom (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\tconst color = getColor(space);\n\t\t\t[space, coords] = [color.space, color.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\treturn space.to(this, coords);\n\t}\n\n\ttoString () {\n\t\treturn `${this.name} (${this.id})`;\n\t}\n\n\tgetMinCoords () {\n\t\tlet ret = [];\n\n\t\tfor (let id in this.coords) {\n\t\t\tlet meta = this.coords[id];\n\t\t\tlet range = meta.range || meta.refRange;\n\t\t\tret.push(range?.min ?? 0);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tstatic registry = {};\n\n\t// Returns array of unique color spaces\n\tstatic get all () {\n\t\treturn [...new Set(Object.values(ColorSpace.registry))];\n\t}\n\n\tstatic register (id, space) {\n\t\tif (arguments.length === 1) {\n\t\t\tspace = arguments[0];\n\t\t\tid = space.id;\n\t\t}\n\n\t\tspace = this.get(space);\n\n\t\tif (this.registry[id] && this.registry[id] !== space) {\n\t\t\tthrow new Error(`Duplicate color space registration: '${id}'`);\n\t\t}\n\t\tthis.registry[id] = space;\n\n\t\t// Register aliases when called without an explicit ID.\n\t\tif (arguments.length === 1 && space.aliases) {\n\t\t\tfor (let alias of space.aliases) {\n\t\t\t\tthis.register(alias, space);\n\t\t\t}\n\t\t}\n\n\t\treturn space;\n\t}\n\n\t/**\n\t * Lookup ColorSpace object by name\n\t * @param {ColorSpace | string} name\n\t */\n\tstatic get (space, ...alternatives) {\n\t\tif (!space || isInstance(space, this)) {\n\t\t\treturn space;\n\t\t}\n\n\t\tlet argType = type(space);\n\n\t\tif (argType === \"string\") {\n\t\t\t// It's a color space id\n\t\t\tlet ret = ColorSpace.registry[space.toLowerCase()];\n\n\t\t\tif (!ret) {\n\t\t\t\tthrow new TypeError(`No color space found with id = \"${space}\"`);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (alternatives.length) {\n\t\t\treturn ColorSpace.get(...alternatives);\n\t\t}\n\n\t\tthrow new TypeError(`${space} is not a valid color space`);\n\t}\n\n\t/**\n\t * Look up all color spaces for a format that matches certain criteria\n\t * @param {object | string} filters\n\t * @param {Array<ColorSpace>} [spaces=ColorSpace.all]\n\t * @returns {Format | null}\n\t */\n\tstatic findFormat (filters, spaces = ColorSpace.all) {\n\t\tif (!filters) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (typeof filters === \"string\") {\n\t\t\tfilters = { name: filters };\n\t\t}\n\n\t\tfor (let space of spaces) {\n\t\t\tfor (let [name, format] of Object.entries(space.formats)) {\n\t\t\t\tformat.name ??= name;\n\t\t\t\tformat.type ??= \"function\";\n\n\t\t\t\tlet matches =\n\t\t\t\t\t(!filters.name || format.name === filters.name) &&\n\t\t\t\t\t(!filters.type || format.type === filters.type);\n\n\t\t\t\tif (filters.id) {\n\t\t\t\t\tlet ids = format.ids || [format.id];\n\t\t\t\t\tlet filterIds = Array.isArray(filters.id) ? filters.id : [filters.id];\n\t\t\t\t\tmatches &&= filterIds.some(id => ids.includes(id));\n\t\t\t\t}\n\n\t\t\t\tif (matches) {\n\t\t\t\t\tlet ret = Format.get(format, space);\n\n\t\t\t\t\tif (ret !== format) {\n\t\t\t\t\t\tspace.formats[format.name] = ret;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get metadata about a coordinate of a color space\n\t *\n\t * @static\n\t * @param {Array | string} ref\n\t * @param {ColorSpace | string} [workingSpace]\n\t * @return {Object}\n\t */\n\tstatic resolveCoord (ref, workingSpace) {\n\t\tlet coordType = type(ref);\n\t\tlet space, coord;\n\n\t\tif (coordType === \"string\") {\n\t\t\tif (ref.includes(\".\")) {\n\t\t\t\t// Absolute coordinate\n\t\t\t\t[space, coord] = ref.split(\".\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Relative coordinate\n\t\t\t\t[space, coord] = [, ref];\n\t\t\t}\n\t\t}\n\t\telse if (Array.isArray(ref)) {\n\t\t\t[space, coord] = ref;\n\t\t}\n\t\telse {\n\t\t\t// Object\n\t\t\tspace = ref.space;\n\t\t\tcoord = ref.coordId;\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (!space) {\n\t\t\tspace = workingSpace;\n\t\t}\n\n\t\tif (!space) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`,\n\t\t\t);\n\t\t}\n\n\t\tcoordType = type(coord);\n\n\t\tif (coordType === \"number\" || (coordType === \"string\" && coord >= 0)) {\n\t\t\t// Resolve numerical coord\n\t\t\tlet meta = Object.entries(space.coords)[coord];\n\n\t\t\tif (meta) {\n\t\t\t\treturn { space, id: meta[0], index: coord, ...meta[1] };\n\t\t\t}\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tlet normalizedCoord = coord.toLowerCase();\n\n\t\tlet i = 0;\n\t\tfor (let id in space.coords) {\n\t\t\tlet meta = space.coords[id];\n\n\t\t\tif (\n\t\t\t\tid.toLowerCase() === normalizedCoord ||\n\t\t\t\tmeta.name?.toLowerCase() === normalizedCoord\n\t\t\t) {\n\t\t\t\treturn { space, id, index: i, ...meta };\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\tthrow new TypeError(\n\t\t\t`No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(\", \")}`,\n\t\t);\n\t}\n\n\tstatic DEFAULT_FORMAT = {\n\t\ttype: \"functions\",\n\t\tname: \"color\",\n\t};\n}\n\nfunction getPath (space) {\n\tlet ret = [space];\n\n\tfor (let s = space; (s = s.base); ) {\n\t\tret.push(s);\n\t}\n\n\treturn ret;\n}\n","import ColorSpace from \"../ColorSpace.js\";\n\nexport default new ColorSpace({\n\tid: \"xyz-d65\",\n\tname: \"XYZ D65\",\n\tcoords: {\n\t\tx: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"X\",\n\t\t},\n\t\ty: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Y\",\n\t\t},\n\t\tz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Z\",\n\t\t},\n\t},\n\twhite: \"D65\",\n\tformats: {\n\t\tcolor: {\n\t\t\tids: [\"xyz-d65\", \"xyz\"],\n\t\t},\n\t},\n\taliases: [\"xyz\"],\n});\n","import ColorSpace from \"./ColorSpace.js\";\nimport { multiply_v3_m3x3 } from \"./util.js\";\nimport adapt from \"./adapt.js\";\nimport XYZ_D65 from \"./spaces/xyz-d65.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").RGBOptions} RGBOptions */\n\n/** Convenience class for RGB color spaces */\nexport default class RGBColorSpace extends ColorSpace {\n\t/**\n\t * Creates a new RGB ColorSpace.\n\t * If coords are not specified, they will use the default RGB coords.\n\t * Instead of `fromBase()` and `toBase()` functions,\n\t * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\n\t * @param {RGBOptions} options\n\t */\n\tconstructor (options) {\n\t\tif (!options.coords) {\n\t\t\toptions.coords = {\n\t\t\t\tr: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Red\",\n\t\t\t\t},\n\t\t\t\tg: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Green\",\n\t\t\t\t},\n\t\t\t\tb: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Blue\",\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tif (!options.base) {\n\t\t\toptions.base = XYZ_D65;\n\t\t}\n\n\t\tif (options.toXYZ_M && options.fromXYZ_M) {\n\t\t\toptions.toBase ??= rgb => {\n\t\t\t\tlet xyz = multiply_v3_m3x3(rgb, options.toXYZ_M);\n\n\t\t\t\tif (this.white !== this.base.white) {\n\t\t\t\t\t// Perform chromatic adaptation\n\t\t\t\t\txyz = adapt(this.white, this.base.white, xyz);\n\t\t\t\t}\n\n\t\t\t\treturn xyz;\n\t\t\t};\n\n\t\t\toptions.fromBase ??= xyz => {\n\t\t\t\txyz = adapt(this.base.white, this.white, xyz);\n\t\t\t\treturn multiply_v3_m3x3(xyz, options.fromXYZ_M);\n\t\t\t};\n\t\t}\n\n\t\toptions.referred ??= \"display\";\n\n\t\tsuper(options);\n\t}\n}\n","import { isString } from \"./util.js\";\nimport getColor from \"./getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").TryColorOptions} TryColorOptions */\n\n/**\n * Resolves a color reference (object or string) to a plain color object, or `null` if resolution fails.\n * Can resolve more complex CSS colors (e.g. relative colors, `calc()`, CSS variables, `color-mix()`, etc.) through the DOM.\n *\n * @overload\n * @param {ColorTypes} color\n * @param {TryColorOptions} [options]\n * @returns {PlainColorObject | null}\n */\n/**\n * @overload\n * @param {ColorTypes[]} color\n * @param {TryColorOptions} [options]\n * @returns {(PlainColorObject | null)[]}\n */\nexport default function tryColor (color, options = {}) {\n\tif (Array.isArray(color)) {\n\t\treturn color.map(c => tryColor(c, options));\n\t}\n\n\tlet { cssProperty = \"background-color\", element, ...getColorOptions } = options;\n\tlet error = null;\n\ttry {\n\t\treturn getColor(color, getColorOptions);\n\t}\n\tcatch (e) {\n\t\terror = e;\n\t}\n\n\tlet { CSS, getComputedStyle } = globalThis;\n\tif (isString(color) && element && CSS && getComputedStyle) {\n\t\t// Try resolving the color using the DOM, if supported in CSS\n\t\tif (CSS.supports(cssProperty, color)) {\n\t\t\tlet previousValue = element.style[cssProperty];\n\n\t\t\tif (color !== previousValue) {\n\t\t\t\telement.style[cssProperty] = color;\n\t\t\t}\n\n\t\t\tlet computedColor = getComputedStyle(element).getPropertyValue(cssProperty);\n\n\t\t\tif (color !== previousValue) {\n\t\t\t\telement.style[cssProperty] = previousValue;\n\t\t\t}\n\n\t\t\tif (computedColor !== color) {\n\t\t\t\t// getComputedStyle() changed the color, try again\n\t\t\t\ttry {\n\t\t\t\t\treturn getColor(computedColor, getColorOptions);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Still not resolved\n\t\t\t\terror = {\n\t\t\t\t\tmessage: \"Color value is a valid CSS color, but it could not be resolved :(\",\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we're here, we failed to resolve the color\n\tif (options.errorMeta) {\n\t\toptions.errorMeta.error = error;\n\t}\n\n\treturn null;\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport getColor from \"./getColor.js\";\nimport { toPrecision } from \"./util.js\";\n\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").Coords} Coords */\n\n/**\n * Options for {@link getAll}\n * @typedef GetAllOptions\n * @property {string | ColorSpace | undefined} [space]\n * The color space to convert to. Defaults to the color's current space\n * @property {number | undefined} [precision]\n * The number of significant digits to round the coordinates to\n */\n\n/**\n * Get the coordinates of a color in any color space\n * @overload\n * @param {ColorTypes} color\n * @param {string | ColorSpace} [options=color.space] The color space to convert to. Defaults to the color's current space\n * @returns {Coords} The color coordinates in the given color space\n */\n/**\n * @overload\n * @param {ColorTypes} color\n * @param {GetAllOptions} [options]\n * @returns {Coords} The color coordinates in the given color space\n */\nexport default function getAll (color, options) {\n\tcolor = getColor(color);\n\n\tlet space = ColorSpace.get(options, options?.space);\n\tlet precision = options?.precision;\n\n\tlet coords;\n\tif (!space || color.space.equals(space)) {\n\t\t// No conversion needed\n\t\tcoords = color.coords.slice();\n\t}\n\telse {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn precision === undefined ? coords : coords.map(coord => toPrecision(coord, precision));\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport getAll from \"./getAll.js\";\nimport getColor from \"./getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").Ref} Ref */\n\n/**\n * @param {ColorTypes} color\n * @param {Ref} prop\n * @returns {number}\n */\nexport default function get (color, prop) {\n\tcolor = getColor(color);\n\n\tif (prop === \"alpha\") {\n\t\treturn color.alpha ?? 1;\n\t}\n\n\tlet { space, index } = ColorSpace.resolveCoord(prop, color.space);\n\tlet coords = getAll(color, space);\n\treturn coords[index];\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport getColor from \"./getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").Coords} Coords */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n\n/**\n * Set all coordinates of a color at once, in its own color space or another.\n * Modifies the color in place.\n * @overload\n * @param {ColorTypes} color\n * @param {Coords} coords Array of coordinates\n * @param {number} [alpha]\n * @returns {PlainColorObject}\n */\n/**\n * @overload\n * @param {ColorTypes} color\n * @param {string | ColorSpace} space The color space of the provided coordinates.\n * @param {Coords} coords Array of coordinates\n * @param {number} [alpha]\n * @returns {PlainColorObject}\n */\nexport default function setAll (color, space, coords, alpha) {\n\tcolor = getColor(color);\n\n\tif (Array.isArray(space)) {\n\t\t// Space is omitted\n\t\t[space, coords, alpha] = [color.space, space, coords];\n\t}\n\n\tspace = ColorSpace.get(space); // Make sure we have a ColorSpace object\n\tcolor.coords = space === color.space ? coords.slice() : space.to(color.space, coords);\n\n\tif (alpha !== undefined) {\n\t\tcolor.alpha = alpha;\n\t}\n\n\treturn color;\n}\n\n/** @type {\"color\"} */\nsetAll.returns = \"color\";\n","import ColorSpace from \"./ColorSpace.js\";\nimport getColor from \"./getColor.js\";\nimport get from \"./get.js\";\nimport getAll from \"./getAll.js\";\nimport setAll from \"./setAll.js\";\nimport { type } from \"./util.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").Ref} Ref */\n\n/**\n * Set properties and return current instance\n * @overload\n * @param {ColorTypes} color\n * @param {Ref} prop\n * @param {number | ((coord: number) => number)} value\n * @returns {PlainColorObject}\n */\n/**\n * @overload\n * @param {ColorTypes} color\n * @param {Record<string, number | ((coord: number) => number)>} props\n * @returns {PlainColorObject}\n */\nexport default function set (color, prop, value) {\n\tcolor = getColor(color);\n\n\tif (arguments.length === 2 && type(arguments[1]) === \"object\") {\n\t\t// Argument is an object literal\n\t\tlet object = arguments[1];\n\t\tfor (let p in object) {\n\t\t\tset(color, p, object[p]);\n\t\t}\n\t}\n\telse {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value(get(color, prop));\n\t\t}\n\n\t\tif (prop === \"alpha\") {\n\t\t\tcolor.alpha = value;\n\t\t}\n\t\telse {\n\t\t\tlet { space, index } = ColorSpace.resolveCoord(prop, color.space);\n\t\t\tlet coords = getAll(color, space);\n\t\t\tcoords[index] = value;\n\t\t\tsetAll(color, space, coords);\n\t\t}\n\t}\n\n\treturn color;\n}\n\n/** @type {\"color\"} */\nset.returns = \"color\";\n","import ColorSpace from \"../ColorSpace.js\";\nimport adapt from \"../adapt.js\";\nimport XYZ_D65 from \"./xyz-d65.js\";\n\nexport default new ColorSpace({\n\tid: \"xyz-d50\",\n\tname: \"XYZ D50\",\n\twhite: \"D50\",\n\tbase: XYZ_D65,\n\tfromBase: coords => adapt(XYZ_D65.white, \"D50\", coords),\n\ttoBase: coords => adapt(\"D50\", XYZ_D65.white, coords),\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport { WHITES } from \"../adapt.js\";\nimport xyz_d50 from \"./xyz-d50.js\";\n\n// κ * ε  = 2^3 = 8\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst ε3 = 24 / 116;\nconst κ = 24389 / 27; // 29^3/3^3\n\nlet white = WHITES.D50;\n\nexport default new ColorSpace({\n\tid: \"lab\",\n\tname: \"Lab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125],\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125],\n\t\t},\n\t},\n\n\t// Assuming XYZ is relative to D50, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite,\n\n\tbase: xyz_d50,\n\t// Convert D50-adapted XYX to Lab\n\t// CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\t\tlet f = xyz.map(value => (value > ε ? Math.cbrt(value) : (κ * value + 16) / 116));\n\n\t\tlet L = 116 * f[1] - 16;\n\t\tlet a = 500 * (f[0] - f[1]);\n\t\tlet b = 200 * (f[1] - f[2]);\n\n\t\treturn [L, a, b];\n\t},\n\t// Convert Lab to D50-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet [L, a, b] = Lab;\n\t\tlet f = [];\n\t\tf[1] = (L + 16) / 116;\n\t\tf[0] = a / 500 + f[1];\n\t\tf[2] = f[1] - b / 200;\n\n\t\t// compute xyz\n\t\t// prettier-ignore\n\t\tlet xyz = [\n\t\t\tf[0]   > ε3 ? Math.pow(f[0], 3)                : (116 * f[0] - 16) / κ,\n\t\t\tLab[0] > 8  ? Math.pow((Lab[0] + 16) / 116, 3) : Lab[0] / κ,\n\t\t\tf[2]   > ε3 ? Math.pow(f[2], 3)                : (116 * f[2] - 16) / κ,\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\n\tformats: {\n\t\tlab: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","import * as util from \"./util.js\";\n\n/**\n * Constrain an angle to 360 degrees\n * @param {number} angle\n * @returns {number}\n */\nexport function constrain (angle) {\n\tif (typeof angle !== \"number\") {\n\t\treturn angle;\n\t}\n\n\treturn ((angle % 360) + 360) % 360;\n}\n\n/**\n * @param {\"raw\" | \"increasing\" | \"decreasing\" | \"longer\" | \"shorter\"} arc\n * @param {[number, number]} angles\n * @returns {[number, number]}\n */\nexport function adjust (arc, angles) {\n\tlet [a1, a2] = angles;\n\n\tlet none1 = util.isNone(a1);\n\tlet none2 = util.isNone(a2);\n\n\tif (none1 && none2) {\n\t\treturn [a1, a2];\n\t}\n\telse if (none1) {\n\t\ta1 = a2;\n\t}\n\telse if (none2) {\n\t\ta2 = a1;\n\t}\n\n\tif (arc === \"raw\") {\n\t\treturn angles;\n\t}\n\n\ta1 = constrain(a1);\n\ta2 = constrain(a2);\n\n\tlet angleDiff = a2 - a1;\n\n\tif (arc === \"increasing\") {\n\t\tif (angleDiff < 0) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\telse if (arc === \"decreasing\") {\n\t\tif (angleDiff > 0) {\n\t\t\ta1 += 360;\n\t\t}\n\t}\n\telse if (arc === \"longer\") {\n\t\tif (-180 < angleDiff && angleDiff < 180) {\n\t\t\tif (angleDiff > 0) {\n\t\t\t\ta1 += 360;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta2 += 360;\n\t\t\t}\n\t\t}\n\t}\n\telse if (arc === \"shorter\") {\n\t\tif (angleDiff > 180) {\n\t\t\ta1 += 360;\n\t\t}\n\t\telse if (angleDiff < -180) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\n\treturn [a1, a2];\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport Lab from \"./lab.js\";\nimport { constrain as constrainAngle } from \"../angles.js\";\nimport { isNone } from \"../util.js\";\n\nexport default new ColorSpace({\n\tid: \"lch\",\n\tname: \"LCH\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 150],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\n\tbase: Lab,\n\tfromBase (Lab) {\n\t\t// These methods are used for other polar forms as well, so we can't hardcode the ε\n\t\tif (this.ε === undefined) {\n\t\t\t// @ts-expect-error Property 'coords' does not exist on type 'string | ColorSpace'\n\t\t\tlet range = Object.values(this.base.coords)[1].refRange;\n\t\t\tlet extent = range[1] - range[0];\n\t\t\tthis.ε = extent / 100000;\n\t\t}\n\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = Lab;\n\t\tlet isAchromatic = Math.abs(a) < this.ε && Math.abs(b) < this.ε;\n\t\tlet h = isAchromatic ? null : constrainAngle((Math.atan2(b, a) * 180) / Math.PI);\n\t\tlet C = isAchromatic ? 0 : Math.sqrt(a ** 2 + b ** 2);\n\n\t\treturn [L, C, h];\n\t},\n\ttoBase (lch) {\n\t\t// Convert from polar form\n\t\tlet [L, C, h] = lch;\n\t\tlet a = null,\n\t\t\tb = null;\n\n\t\tif (!isNone(h)) {\n\t\t\tC = C < 0 ? 0 : C; // Clamp negative Chroma\n\t\t\ta = C * Math.cos((h * Math.PI) / 180);\n\t\t\tb = C * Math.sin((h * Math.PI) / 180);\n\t\t}\n\n\t\treturn [L, a, b];\n\t},\n\n\tformats: {\n\t\tlch: {\n\t\t\tcoords: [\"<percentage> | <number>\", \"<number> | <percentage>\", \"<number> | <angle>\"],\n\t\t},\n\t},\n});\n","import defaults from \"../defaults.js\";\nimport lab from \"../spaces/lab.js\";\nimport lch from \"../spaces/lch.js\";\nimport getColor from \"../getColor.js\";\n\n// deltaE2000 is a statistically significant improvement\n// and is recommended by the CIE and Idealliance\n// especially for color differences less than 10 deltaE76\n// but is wicked complicated\n// and many implementations have small errors!\n// DeltaE2000 is also discontinuous; in case this\n// matters to you, use deltaECMC instead.\n\nconst Gfactor = 25 ** 7;\nconst π = Math.PI;\nconst r2d = 180 / π;\nconst d2r = π / 180;\n\nfunction pow7 (x) {\n\t// Faster than x ** 7 or Math.pow(x, 7)\n\n\tconst x2 = x * x;\n\tconst x7 = x2 * x2 * x2 * x;\n\n\treturn x7;\n}\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @param {{ kL?: number | undefined; kC?: number | undefined; kH?: number | undefined }} options\n * @returns {number}\n */\nexport default function (color, sample, { kL = 1, kC = 1, kH = 1 } = {}) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and the function parameter as the sample,\n\t// calculate deltaE 2000.\n\n\t// This implementation assumes the parametric\n\t// weighting factors kL, kC and kH\n\t// for the influence of viewing conditions\n\t// are all 1, as sadly seems typical.\n\t// kL should be increased for lightness texture or noise\n\t// and kC increased for chroma noise\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet C1 = lch.from(lab, [L1, a1, b1])[1];\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\tlet Cbar = (C1 + C2) / 2; // mean Chroma\n\n\t// calculate a-axis asymmetry factor from mean Chroma\n\t// this turns JND ellipses for near-neutral colors back into circles\n\tlet C7 = pow7(Cbar);\n\n\tlet G = 0.5 * (1 - Math.sqrt(C7 / (C7 + Gfactor)));\n\n\t// scale a axes by asymmetry factor\n\t// this by the way is why there is no Lab2000 colorspace\n\tlet adash1 = (1 + G) * a1;\n\tlet adash2 = (1 + G) * a2;\n\n\t// calculate new Chroma from scaled a and original b axes\n\tlet Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\n\tlet Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\n\n\t// calculate new hues, with zero hue for true neutrals\n\t// and in degrees, not radians\n\n\tlet h1 = adash1 === 0 && b1 === 0 ? 0 : Math.atan2(b1, adash1);\n\tlet h2 = adash2 === 0 && b2 === 0 ? 0 : Math.atan2(b2, adash2);\n\n\tif (h1 < 0) {\n\t\th1 += 2 * π;\n\t}\n\tif (h2 < 0) {\n\t\th2 += 2 * π;\n\t}\n\n\th1 *= r2d;\n\th2 *= r2d;\n\n\t// Lightness and Chroma differences; sign matters\n\tlet ΔL = L2 - L1;\n\tlet ΔC = Cdash2 - Cdash1;\n\n\t// Hue difference, getting the sign correct\n\tlet hdiff = h2 - h1;\n\tlet hsum = h1 + h2;\n\tlet habs = Math.abs(hdiff);\n\tlet Δh;\n\n\tif (Cdash1 * Cdash2 === 0) {\n\t\tΔh = 0;\n\t}\n\telse if (habs <= 180) {\n\t\tΔh = hdiff;\n\t}\n\telse if (hdiff > 180) {\n\t\tΔh = hdiff - 360;\n\t}\n\telse if (hdiff < -180) {\n\t\tΔh = hdiff + 360;\n\t}\n\telse {\n\t\tdefaults.warn(\"the unthinkable has happened\");\n\t}\n\n\t// weighted Hue difference, more for larger Chroma\n\tlet ΔH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin((Δh * d2r) / 2);\n\n\t// calculate mean Lightness and Chroma\n\tlet Ldash = (L1 + L2) / 2;\n\tlet Cdash = (Cdash1 + Cdash2) / 2;\n\tlet Cdash7 = pow7(Cdash);\n\n\t// Compensate for non-linearity in the blue region of Lab.\n\t// Four possibilities for hue weighting factor,\n\t// depending on the angles, to get the correct sign\n\tlet hdash;\n\tif (Cdash1 * Cdash2 === 0) {\n\t\thdash = hsum; // which should be zero\n\t}\n\telse if (habs <= 180) {\n\t\thdash = hsum / 2;\n\t}\n\telse if (hsum < 360) {\n\t\thdash = (hsum + 360) / 2;\n\t}\n\telse {\n\t\thdash = (hsum - 360) / 2;\n\t}\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor\n\t// a background with L=50 is assumed\n\tlet lsq = (Ldash - 50) ** 2;\n\tlet SL = 1 + (0.015 * lsq) / Math.sqrt(20 + lsq);\n\n\t// SC Chroma factor, similar to those in CMC and deltaE 94 formulae\n\tlet SC = 1 + 0.045 * Cdash;\n\n\t// Cross term T for blue non-linearity\n\tlet T = 1;\n\tT -= 0.17 * Math.cos((hdash - 30) * d2r);\n\tT += 0.24 * Math.cos(2 * hdash * d2r);\n\tT += 0.32 * Math.cos((3 * hdash + 6) * d2r);\n\tT -= 0.2 * Math.cos((4 * hdash - 63) * d2r);\n\n\t// SH Hue factor depends on Chroma,\n\t// as well as adjusted hue angle like deltaE94.\n\tlet SH = 1 + 0.015 * Cdash * T;\n\n\t// RT Hue rotation term compensates for rotation of JND ellipses\n\t// and Munsell constant hue lines\n\t// in the medium-high Chroma blue region\n\t// (Hue 225 to 315)\n\tlet Δθ = 30 * Math.exp(-1 * ((hdash - 275) / 25) ** 2);\n\tlet RC = 2 * Math.sqrt(Cdash7 / (Cdash7 + Gfactor));\n\tlet RT = -1 * Math.sin(2 * Δθ * d2r) * RC;\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (kL * SL)) ** 2;\n\tdE += (ΔC / (kC * SC)) ** 2;\n\tdE += (ΔH / (kH * SH)) ** 2;\n\tdE += RT * (ΔC / (kC * SC)) * (ΔH / (kH * SH));\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport { multiply_v3_m3x3 } from \"../util.js\";\nimport XYZ_D65 from \"./xyz-d65.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// Recalculated for consistent reference white\n// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst XYZtoLMS_M = [\n\t[ 0.8190224379967030, 0.3619062600528904, -0.1288737815209879 ],\n\t[ 0.0329836539323885, 0.9292868615863434,  0.0361446663506424 ],\n\t[ 0.0481771893596242, 0.2642395317527308,  0.6335478284694309 ],\n];\n// inverse of XYZtoLMS_M\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst LMStoXYZ_M = [\n\t[  1.2268798758459243, -0.5578149944602171,  0.2813910456659647 ],\n\t[ -0.0405757452148008,  1.1122868032803170, -0.0717110580655164 ],\n\t[ -0.0763729366746601, -0.4214933324022432,  1.5869240198367816 ],\n];\n/** @type {Matrix3x3} */\n// prettier-ignore\nexport const LMStoLab_M = [\n\t[ 0.2104542683093140,  0.7936177747023054, -0.0040720430116193 ],\n\t[ 1.9779985324311684, -2.4285922420485799,  0.4505937096174110 ],\n\t[ 0.0259040424655478,  0.7827717124575296, -0.8086757549230774 ],\n];\n// LMStoIab_M inverted\n/** @type {Matrix3x3} */\n// prettier-ignore\nexport const LabtoLMS_M = [\n\t[ 1.0000000000000000,  0.3963377773761749,  0.2158037573099136 ],\n\t[ 1.0000000000000000, -0.1055613458156586, -0.0638541728258133 ],\n\t[ 1.0000000000000000, -0.0894841775298119, -1.2914855480194092 ],\n];\n\nexport default new ColorSpace({\n\tid: \"oklab\",\n\tname: \"Oklab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-0.4, 0.4],\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-0.4, 0.4],\n\t\t},\n\t},\n\n\t// Note that XYZ is relative to D65\n\twhite: \"D65\",\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiply_v3_m3x3(XYZ, XYZtoLMS_M);\n\n\t\t// non-linearity\n\t\tLMS[0] = Math.cbrt(LMS[0]);\n\t\tLMS[1] = Math.cbrt(LMS[1]);\n\t\tLMS[2] = Math.cbrt(LMS[2]);\n\n\t\treturn multiply_v3_m3x3(LMS, LMStoLab_M, LMS);\n\t},\n\ttoBase (OKLab) {\n\t\t// move to LMS cone domain\n\t\tlet LMSg = multiply_v3_m3x3(OKLab, LabtoLMS_M);\n\n\t\t// restore linearity\n\t\tLMSg[0] = LMSg[0] ** 3;\n\t\tLMSg[1] = LMSg[1] ** 3;\n\t\tLMSg[2] = LMSg[2] ** 3;\n\n\t\treturn multiply_v3_m3x3(LMSg, LMStoXYZ_M, LMSg);\n\t},\n\n\tformats: {\n\t\toklab: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","import oklab from \"../spaces/oklab.js\";\nimport getColor from \"../getColor.js\";\n\n/**\n * More accurate color-difference formulae\n * than the simple 1976 Euclidean distance in CIE Lab\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK, term by term as root sum of squares\n\tlet [L1, a1, b1] = oklab.from(color);\n\tlet [L2, a2, b2] = oklab.from(sample);\n\tlet ΔL = L1 - L2;\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\treturn Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport getColor from \"./getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n\nconst ε = 0.000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @param {ColorTypes} color\n * @param {string | ColorSpace} [space]\n * @param {{ epsilon?: number | undefined }} [param2]\n * @returns {boolean}\n */\nexport default function inGamut (color, space, { epsilon = ε } = {}) {\n\tcolor = getColor(color);\n\n\tif (!space) {\n\t\tspace = color.space;\n\t}\n\n\tspace = ColorSpace.get(space);\n\tlet coords = color.coords;\n\n\tif (space !== color.space) {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn space.inGamut(coords, { epsilon });\n}\n","// Type \"imports\"\n/** @typedef {import(\"./color.js\").default} Color */\n/** @typedef {import(\"./types.js\").Coords} Coords */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n\n/**\n * @param {PlainColorObject} color\n * @returns {PlainColorObject}\n */\nexport default function clone (color) {\n\treturn {\n\t\tspace: color.space,\n\t\tcoords: /** @type {Coords} */ (color.coords.slice()),\n\t\talpha: color.alpha,\n\t};\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport { isNone } from \"./util.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n\n/**\n * Euclidean distance of colors in an arbitrary color space\n * @param {ColorTypes} color1\n * @param {ColorTypes} color2\n * @param {string | ColorSpace} space\n * @returns {number}\n */\nexport default function distance (color1, color2, space = \"lab\") {\n\tspace = ColorSpace.get(space);\n\n\t// Assume getColor() is called on color in space.from()\n\tlet coords1 = space.from(color1);\n\tlet coords2 = space.from(color2);\n\n\treturn Math.sqrt(\n\t\tcoords1.reduce((acc, c1, i) => {\n\t\t\tlet c2 = coords2[i];\n\t\t\tif (isNone(c1) || isNone(c2)) {\n\t\t\t\treturn acc;\n\t\t\t}\n\n\t\t\treturn acc + (c2 - c1) ** 2;\n\t\t}, 0),\n\t);\n}\n","import distance from \"../distance.js\";\nimport getColor from \"../getColor.js\";\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function deltaE76 (color, sample) {\n\t// Assume getColor() is called in the distance function\n\treturn distance(color, sample, \"lab\");\n}\n","import lab from \"../spaces/lab.js\";\nimport lch from \"../spaces/lch.js\";\nimport getColor from \"../getColor.js\";\nimport { isNone } from \"../util.js\";\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// CMC by the Color Measurement Committee of the\n// Bradford Society of Dyeists and Colorsts, 1994.\n// Uses LCH rather than Lab,\n// with different weights for L, C and H differences\n// A nice increase in accuracy for modest increase in complexity\nconst π = Math.PI;\nconst d2r = π / 180;\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @param {{ l?: number | undefined; c?: number | undefined }} options\n * @returns {number}\n */\nexport default function (color, sample, { l = 2, c = 1 } = {}) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE CMC.\n\n\t// This implementation assumes the parametric\n\t// weighting factors l:c are 2:1\n\t// which is typical for non-textile uses.\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet [, C1, H1] = lch.from(lab, [L1, a1, b1]);\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// let [L1, a1, b1] = color.getAll(lab);\n\t// let C1 = color.get(\"lch.c\");\n\t// let H1 = color.get(\"lch.h\");\n\t// let [L2, a2, b2] = sample.getAll(lab);\n\t// let C2 = sample.get(\"lch.c\");\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\t// we don't need H2 as ΔH is calculated from Δa, Δb and ΔC\n\n\t// Lightness and Chroma differences\n\t// These are (color - sample), unlike deltaE2000\n\tlet ΔL = L1 - L2;\n\tlet ΔC = C1 - C2;\n\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\n\t// weighted Hue difference, less for larger Chroma difference\n\n\tlet H2 = Δa ** 2 + Δb ** 2 - ΔC ** 2;\n\t// due to roundoff error it is possible that, for zero a and b,\n\t// ΔC > Δa + Δb is 0, resulting in attempting\n\t// to take the square root of a negative number\n\n\t// trying instead the equation from Industrial Color Physics\n\t// By Georg A. Klein\n\n\t// let ΔH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\n\t// console.log({ΔH});\n\t// This gives the same result to 12 decimal places\n\t// except it sometimes NaNs when trying to root a negative number\n\n\t// let ΔH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor, depends entirely on L1 not L2\n\tlet SL = 0.511; // linear portion of the Y to L transfer function\n\tif (L1 >= 16) {\n\t\t// cubic portion\n\t\tSL = (0.040975 * L1) / (1 + 0.01765 * L1);\n\t}\n\n\t// SC Chroma factor\n\tlet SC = (0.0638 * C1) / (1 + 0.0131 * C1) + 0.638;\n\n\t// Cross term T for blue non-linearity\n\tlet T;\n\tif (isNone(H1)) {\n\t\tH1 = 0;\n\t}\n\n\tif (H1 >= 164 && H1 <= 345) {\n\t\tT = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\n\t}\n\telse {\n\t\tT = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\n\t}\n\t// console.log({T});\n\n\t// SH Hue factor also depends on C1,\n\tlet C4 = Math.pow(C1, 4);\n\tlet F = Math.sqrt(C4 / (C4 + 1900));\n\tlet SH = SC * (F * T + 1 - F);\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (l * SL)) ** 2;\n\tdE += (ΔC / (c * SC)) ** 2;\n\tdE += H2 / SH ** 2;\n\t// dE += (ΔH / SH)  ** 2;\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport XYZ_D65 from \"./xyz-d65.js\";\n\nconst Yw = 203; // absolute luminance of media white\n\nexport default new ColorSpace({\n\t// Absolute CIE XYZ, with a D65 whitepoint,\n\t// as used in most HDR colorspaces as a starting point.\n\t// SDR spaces are converted per BT.2048\n\t// so that diffuse, media white is 203 cd/m²\n\tid: \"xyz-abs-d65\",\n\tcssId: \"--xyz-abs-d65\",\n\tname: \"Absolute XYZ D65\",\n\tcoords: {\n\t\tx: {\n\t\t\trefRange: [0, 9504.7],\n\t\t\tname: \"Xa\",\n\t\t},\n\t\ty: {\n\t\t\trefRange: [0, 10000],\n\t\t\tname: \"Ya\",\n\t\t},\n\t\tz: {\n\t\t\trefRange: [0, 10888.3],\n\t\t\tname: \"Za\",\n\t\t},\n\t},\n\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\treturn XYZ.map(v => v * Yw);\n\t},\n\ttoBase (AbsXYZ) {\n\t\t// Convert to media-white relative XYZ\n\t\treturn AbsXYZ.map(v => v / Yw);\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport { multiply_v3_m3x3 } from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\nimport { spow } from \"../util.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"../types.js\").Vector3} Vector3 */\n\nconst b = 1.15;\nconst g = 0.66;\nconst n = 2610 / 2 ** 14;\nconst ninv = 2 ** 14 / 2610;\nconst c1 = 3424 / 2 ** 12;\nconst c2 = 2413 / 2 ** 7;\nconst c3 = 2392 / 2 ** 7;\nconst p = (1.7 * 2523) / 2 ** 5;\nconst pinv = 2 ** 5 / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566e-11;\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst XYZtoCone_M = [\n\t[  0.41478972, 0.579999,  0.0146480 ],\n\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t[ -0.0166008,  0.264800,  0.6684799 ],\n];\n// XYZtoCone_M inverted\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst ConetoXYZ_M = [\n\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ],\n];\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst ConetoIab_M = [\n\t[  0.5,       0.5,       0        ],\n\t[  3.524000, -4.066708,  0.542708 ],\n\t[  0.199076,  1.096799, -1.295875 ],\n];\n// ConetoIab_M inverted\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst IabtoCone_M = [\n\t[ 1,                   0.13860504327153927,   0.05804731615611883 ],\n\t[ 1,                  -0.1386050432715393,   -0.058047316156118904 ],\n\t[ 1,                  -0.09601924202631895,  -0.81189189605603900  ],\n];\n\nexport default new ColorSpace({\n\tid: \"jzazbz\",\n\tname: \"Jzazbz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\taz: {\n\t\t\trefRange: [-0.21, 0.21],\n\t\t},\n\t\tbz: {\n\t\t\trefRange: [-0.21, 0.21],\n\t\t},\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\tlet [Xa, Ya, Za] = XYZ;\n\n\t\t// modify X and Y to minimize blue curvature\n\t\tlet Xm = b * Xa - (b - 1) * Za;\n\t\tlet Ym = g * Ya - (g - 1) * Xa;\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiply_v3_m3x3([Xm, Ym, Za], XYZtoCone_M);\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = /** @type {Vector3} } */ (\n\t\t\tLMS.map(function (val) {\n\t\t\t\tlet num = c1 + c2 * spow(val / 10000, n);\n\t\t\t\tlet denom = 1 + c3 * spow(val / 10000, n);\n\n\t\t\t\treturn spow(num / denom, p);\n\t\t\t})\n\t\t);\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [Iz, az, bz] = multiply_v3_m3x3(PQLMS, ConetoIab_M);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + d * Iz) - d0;\n\t\treturn [Jz, az, bz];\n\t},\n\ttoBase (Jzazbz) {\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = multiply_v3_m3x3([Iz, az, bz], IabtoCone_M);\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = /** @type {Vector3} } */ (\n\t\t\tPQLMS.map(function (val) {\n\t\t\t\tlet num = c1 - spow(val, pinv);\n\t\t\t\tlet denom = c3 * spow(val, pinv) - c2;\n\t\t\t\tlet x = 10000 * spow(num / denom, ninv);\n\n\t\t\t\treturn x; // luminance relative to diffuse white, [0, 70 or so].\n\t\t\t})\n\t\t);\n\n\t\t// modified abs XYZ\n\t\tlet [Xm, Ym, Za] = multiply_v3_m3x3(LMS, ConetoXYZ_M);\n\n\t\t// un-modify X and Y to get D65 XYZ, relative to media white\n\t\tlet Xa = (Xm + (b - 1) * Za) / b;\n\t\tlet Ya = (Ym + (g - 1) * Xa) / g;\n\t\treturn [Xa, Ya, Za];\n\t},\n\n\tformats: {\n\t\t// https://drafts.csswg.org/css-color-hdr/#Jzazbz\n\t\tjzazbz: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport Jzazbz from \"./jzazbz.js\";\nimport lch from \"./lch.js\";\n\nexport default new ColorSpace({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\tcz: {\n\t\t\trefRange: [0, 0.26],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\thz: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\n\tbase: Jzazbz,\n\tfromBase: lch.fromBase,\n\ttoBase: lch.toBase,\n\n\tformats: {\n\t\t// https://drafts.csswg.org/css-color-hdr/#JzCzhz\n\t\tjzczhz: {\n\t\t\tcoords: [\"<percentage> | <number>\", \"<number> | <percentage>\", \"<number> | <angle>\"],\n\t\t},\n\t},\n});\n","import jzczhz from \"../spaces/jzczhz.js\";\nimport getColor from \"../getColor.js\";\nimport { isNone } from \"../util.js\";\n\n/**\n * More accurate color-difference formulae\n * than the simple 1976 Euclidean distance in Lab\n *\n * Uses JzCzHz, which has improved perceptual uniformity\n * and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n * gives good results.\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\tlet [Jz1, Cz1, Hz1] = jzczhz.from(color);\n\tlet [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ΔJ = Jz1 - Jz2;\n\tlet ΔC = Cz1 - Cz2;\n\n\t// length of chord for ΔH\n\tif (isNone(Hz1) && isNone(Hz2)) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t}\n\telse if (isNone(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t}\n\telse if (isNone(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Δh = Hz1 - Hz2;\n\tlet ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport { multiply_v3_m3x3 } from \"../util.js\";\nimport XYZ_Abs_D65 from \"./xyz-abs-d65.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"../types.js\").Vector3} Vector3 */\n\nconst c1 = 3424 / 4096;\nconst c2 = 2413 / 128;\nconst c3 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst XYZtoLMS_M = [\n\t[  0.3592832590121217,  0.6976051147779502, -0.0358915932320290 ],\n\t[ -0.1920808463704993,  1.1004767970374321,  0.0753748658519118 ],\n\t[  0.0070797844607479,  0.0748396662186362,  0.8433265453898765 ],\n];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan Fröhlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from Fröhlich p.97\n// and ITU-R BT.2124-0 pp.2-3\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst LMStoIPT_M = [\n\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ],\n];\n\n// inverted matrices, calculated from the above\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst IPTtoLMS_M = [\n\t[ 0.9999999999999998,  0.0086090370379328,  0.1110296250030260 ],\n\t[ 0.9999999999999998, -0.0086090370379328, -0.1110296250030259 ],\n\t[ 0.9999999999999998,  0.5600313357106791, -0.3206271749873188 ],\n];\n/*\n// prettier-ignore\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst LMStoXYZ_M = [\n\t[  2.0701522183894223, -1.3263473389671563,  0.2066510476294053 ],\n\t[  0.3647385209748072,  0.6805660249472273, -0.0453045459220347 ],\n\t[ -0.0497472075358123, -0.0492609666966131,  1.1880659249923042 ],\n];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nexport default new ColorSpace({\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of E′,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent “negative” light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as “PLUGE”\n\tcoords: {\n\t\ti: {\n\t\t\trefRange: [0, 1], // Constant luminance,\n\t\t\tname: \"I\",\n\t\t},\n\t\tct: {\n\t\t\trefRange: [-0.5, 0.5], // Full BT.2020 gamut in range [-0.5, 0.5]\n\t\t\tname: \"CT\",\n\t\t},\n\t\tcp: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t\tname: \"CP\",\n\t\t},\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiply_v3_m3x3(XYZ, XYZtoLMS_M);\n\n\t\treturn LMStoICtCp(LMS);\n\t},\n\ttoBase (ICtCp) {\n\t\tlet LMS = ICtCptoLMS(ICtCp);\n\n\t\treturn multiply_v3_m3x3(LMS, LMStoXYZ_M);\n\t},\n\n\tformats: {\n\t\tictcp: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n\n/**\n *\n * @param {Vector3} LMS\n * @returns {Vector3}\n */\nfunction LMStoICtCp (LMS) {\n\t// apply the PQ EOTF\n\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\tlet PQLMS = /** @type {Vector3} */ (\n\t\tLMS.map(function (val) {\n\t\t\tlet num = c1 + c2 * (val / 10000) ** m1;\n\t\t\tlet denom = 1 + c3 * (val / 10000) ** m1;\n\n\t\t\treturn (num / denom) ** m2;\n\t\t})\n\t);\n\n\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\treturn multiply_v3_m3x3(PQLMS, LMStoIPT_M);\n}\n\n/**\n *\n * @param {Vector3} ICtCp\n * @returns {Vector3}\n */\nfunction ICtCptoLMS (ICtCp) {\n\tlet PQLMS = multiply_v3_m3x3(ICtCp, IPTtoLMS_M);\n\n\t// From BT.2124-0 Annex 2 Conversion 3\n\tlet LMS = /** @type {Vector3} */ (\n\t\tPQLMS.map(function (val) {\n\t\t\tlet num = Math.max(val ** im2 - c1, 0);\n\t\t\tlet denom = c2 - c3 * val ** im2;\n\t\t\treturn 10000 * (num / denom) ** im1;\n\t\t})\n\t);\n\n\treturn LMS;\n}\n","import ictcp from \"../spaces/ictcp.js\";\nimport getColor from \"../getColor.js\";\n\n/**\n * Delta E in ICtCp space,\n * which the ITU calls Delta E ITP, which is shorter.\n * Formulae from ITU Rec. ITU-R BT.2124-0\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in ICtCp\n\t// which is simply the Euclidean distance\n\n\tlet [I1, T1, P1] = ictcp.from(color);\n\tlet [I2, T2, P2] = ictcp.from(sample);\n\n\t// the 0.25 factor is to undo the encoding scaling in Ct\n\t// the 720 is so that 1 deltaE = 1 JND\n\t// per  ITU-R BT.2124-0 p.3\n\n\treturn 720 * Math.sqrt((I1 - I2) ** 2 + 0.25 * (T1 - T2) ** 2 + (P1 - P2) ** 2);\n}\n","import oklab from \"../spaces/oklab.js\";\nimport getColor from \"../getColor.js\";\n\n/**\n * More accurate color-difference formulae\n * than the simple 1976 Euclidean distance in CIE Lab\n * The Oklab a and b axes are scaled relative to the L axis, for better uniformity\n * Björn Ottosson said:\n * \"I've recently done some tests with color distance datasets as implemented\n * in Colorio and on both the Combvd dataset and the OSA-UCS dataset a\n * scale factor of slightly more than 2 for a and b would give the best results\n * (2.016 works best for Combvd and 2.045 for the OSA-UCS dataset).\"\n * @see {@link <https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-945714988>}\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK2, term by term as root sum of squares\n\tlet abscale = 2;\n\tlet [L1, a1, b1] = oklab.from(color);\n\tlet [L2, a2, b2] = oklab.from(sample);\n\tlet ΔL = L1 - L2;\n\tlet Δa = abscale * (a1 - a2);\n\tlet Δb = abscale * (b1 - b2);\n\treturn Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport { multiply_v3_m3x3, interpolate, copySign, spow, zdiv, bisectLeft } from \"../util.js\";\nimport { constrain } from \"../angles.js\";\nimport xyz_d65 from \"./xyz-d65.js\";\nimport { WHITES } from \"../adapt.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Coords} Coords */\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"../types.js\").Vector3} Vector3 */\n/** @typedef {import(\"../types.js\").Cam16Object} Cam16Object */\n/** @typedef {import(\"../types.js\").Cam16Input} Cam16Input */\n/** @typedef {import(\"../types.js\").Cam16Environment} Cam16Environment */\n\nconst white = WHITES.D65;\nconst adaptedCoef = 0.42;\nconst adaptedCoefInv = 1 / adaptedCoef;\nconst tau = 2 * Math.PI;\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst cat16 = [\n\t[  0.401288,  0.650173, -0.051461 ],\n\t[ -0.250268,  1.204414,  0.045854 ],\n\t[ -0.002079,  0.048952,  0.953127 ],\n];\n\n/** @type {Matrix3x3} */\nconst cat16Inv = [\n\t[1.8620678550872327, -1.0112546305316843, 0.14918677544445175],\n\t[0.38752654323613717, 0.6214474419314753, -0.008973985167612518],\n\t[-0.015841498849333856, -0.03412293802851557, 1.0499644368778496],\n];\n\n/** @type {Matrix3x3} */\nconst m1 = [\n\t[460.0, 451.0, 288.0],\n\t[460.0, -891.0, -261.0],\n\t[460.0, -220.0, -6300.0],\n];\n\nconst surroundMap = {\n\tdark: [0.8, 0.525, 0.8],\n\tdim: [0.9, 0.59, 0.9],\n\taverage: [1, 0.69, 1],\n};\n\nconst hueQuadMap = {\n\t// Red, Yellow, Green, Blue, Red\n\th: [20.14, 90.0, 164.25, 237.53, 380.14],\n\te: [0.8, 0.7, 1.0, 1.2, 0.8],\n\tH: [0.0, 100.0, 200.0, 300.0, 400.0],\n};\n\nconst rad2deg = 180 / Math.PI;\nconst deg2rad = Math.PI / 180;\n\n/**\n * @param {Coords} coords\n * @param {number} fl\n * @returns {[number, number, number]}\n */\nexport function adapt (coords, fl) {\n\tconst temp = /** @type {[number, number, number]} */ (\n\t\tcoords.map(c => {\n\t\t\tconst x = spow(fl * Math.abs(c) * 0.01, adaptedCoef);\n\t\t\treturn (400 * copySign(x, c)) / (x + 27.13);\n\t\t})\n\t);\n\treturn temp;\n}\n\n/**\n * @param {Coords} adapted\n * @param {number} fl\n * @returns {[number, number, number]}\n */\nexport function unadapt (adapted, fl) {\n\tconst constant = (100 / fl) * 27.13 ** adaptedCoefInv;\n\treturn /** @type {[number, number, number]} */ (\n\t\tadapted.map(c => {\n\t\t\tconst cabs = Math.abs(c);\n\t\t\treturn copySign(constant * spow(cabs / (400 - cabs), adaptedCoefInv), c);\n\t\t})\n\t);\n}\n\n/**\n * @param {number} h\n */\nexport function hueQuadrature (h) {\n\tlet hp = constrain(h);\n\tif (hp <= hueQuadMap.h[0]) {\n\t\thp += 360;\n\t}\n\n\tconst i = bisectLeft(hueQuadMap.h, hp) - 1;\n\tconst [hi, hii] = hueQuadMap.h.slice(i, i + 2);\n\tconst [ei, eii] = hueQuadMap.e.slice(i, i + 2);\n\tconst Hi = hueQuadMap.H[i];\n\n\tconst t = (hp - hi) / ei;\n\treturn Hi + (100 * t) / (t + (hii - hp) / eii);\n}\n\n/**\n * @param {number} H\n */\nexport function invHueQuadrature (H) {\n\tlet Hp = ((H % 400) + 400) % 400;\n\tconst i = Math.floor(0.01 * Hp);\n\tHp = Hp % 100;\n\tconst [hi, hii] = hueQuadMap.h.slice(i, i + 2);\n\tconst [ei, eii] = hueQuadMap.e.slice(i, i + 2);\n\n\treturn constrain((Hp * (eii * hi - ei * hii) - 100 * hi * eii) / (Hp * (eii - ei) - 100 * eii));\n}\n\n/**\n * @param {[number, number, number]} refWhite\n * @param {number} adaptingLuminance\n * @param {number} backgroundLuminance\n * @param {keyof typeof surroundMap} surround\n * @param {boolean} discounting\n * @returns {Cam16Environment}\n */\nexport function environment (\n\trefWhite,\n\tadaptingLuminance,\n\tbackgroundLuminance,\n\tsurround,\n\tdiscounting,\n) {\n\tconst env = {};\n\n\tenv.discounting = discounting;\n\tenv.refWhite = refWhite;\n\tenv.surround = surround;\n\tconst xyzW = /** @type {Vector3} */ (\n\t\trefWhite.map(c => {\n\t\t\treturn c * 100;\n\t\t})\n\t);\n\n\t// The average luminance of the environment in `cd/m^2cd/m` (a.k.a. nits)\n\tenv.la = adaptingLuminance;\n\t// The relative luminance of the nearby background\n\tenv.yb = backgroundLuminance;\n\t// Absolute luminance of the reference white.\n\tconst yw = xyzW[1];\n\n\t// Cone response for reference white\n\tconst rgbW = multiply_v3_m3x3(xyzW, cat16);\n\n\t// Surround: dark, dim, and average\n\tlet values = surroundMap[env.surround];\n\tconst f = values[0];\n\tenv.c = values[1];\n\tenv.nc = values[2];\n\n\tconst k = 1 / (5 * env.la + 1);\n\tconst k4 = k ** 4;\n\n\t// Factor of luminance level adaptation\n\tenv.fl = k4 * env.la + 0.1 * (1 - k4) * (1 - k4) * Math.cbrt(5 * env.la);\n\tenv.flRoot = env.fl ** 0.25;\n\n\tenv.n = env.yb / yw;\n\tenv.z = 1.48 + Math.sqrt(env.n);\n\tenv.nbb = 0.725 * env.n ** -0.2;\n\tenv.ncb = env.nbb;\n\n\t// Degree of adaptation calculating if not discounting\n\t// illuminant (assumed eye is fully adapted)\n\tconst d = discounting\n\t\t? 1\n\t\t: Math.max(Math.min(f * (1 - (1 / 3.6) * Math.exp((-env.la - 42) / 92)), 1), 0);\n\tenv.dRgb = /** @type {[number, number, number]} */ (\n\t\trgbW.map(c => {\n\t\t\treturn interpolate(1, yw / c, d);\n\t\t})\n\t);\n\tenv.dRgbInv = /** @type {[number, number, number]} */ (\n\t\tenv.dRgb.map(c => {\n\t\t\treturn 1 / c;\n\t\t})\n\t);\n\n\t// Achromatic response\n\tconst rgbCW = /** @type {[number, number, number]} */ (\n\t\trgbW.map((c, i) => {\n\t\t\treturn c * env.dRgb[i];\n\t\t})\n\t);\n\tconst rgbAW = adapt(rgbCW, env.fl);\n\tenv.aW = env.nbb * (2 * rgbAW[0] + rgbAW[1] + 0.05 * rgbAW[2]);\n\n\t// console.log(env);\n\n\treturn env;\n}\n\n// Pre-calculate everything we can with the viewing conditions\nconst viewingConditions = environment(white, (64 / Math.PI) * 0.2, 20, \"average\", false);\n\n/**\n * @param {Cam16Input} cam16\n * @param {Cam16Environment} env\n * @returns {[number, number, number]}\n */\nexport function fromCam16 (cam16, env) {\n\t// These check ensure one, and only one attribute for a\n\t// given category is provided.\n\t// @ts-expect-error The '^` operator is not allowed for boolean types\n\tif (!((cam16.J !== undefined) ^ (cam16.Q !== undefined))) {\n\t\tthrow new Error(\"Conversion requires one and only one: 'J' or 'Q'\");\n\t}\n\n\t// @ts-expect-error - The '^` operator is not allowed for boolean types\n\tif (!((cam16.C !== undefined) ^ (cam16.M !== undefined) ^ (cam16.s !== undefined))) {\n\t\tthrow new Error(\"Conversion requires one and only one: 'C', 'M' or 's'\");\n\t}\n\n\t// Hue is absolutely required\n\t// @ts-expect-error - The '^` operator is not allowed for boolean types\n\tif (!((cam16.h !== undefined) ^ (cam16.H !== undefined))) {\n\t\tthrow new Error(\"Conversion requires one and only one: 'h' or 'H'\");\n\t}\n\n\t// Black\n\tif (cam16.J === 0.0 || cam16.Q === 0.0) {\n\t\treturn [0.0, 0.0, 0.0];\n\t}\n\n\t// Break hue into Cartesian components\n\tlet hRad = 0.0;\n\tif (cam16.h !== undefined) {\n\t\thRad = constrain(cam16.h) * deg2rad;\n\t}\n\telse {\n\t\thRad = invHueQuadrature(cam16.H) * deg2rad;\n\t}\n\n\tconst cosh = Math.cos(hRad);\n\tconst sinh = Math.sin(hRad);\n\n\t// Calculate `Jroot` from one of the lightness derived coordinates.\n\tlet Jroot = 0.0;\n\tif (cam16.J !== undefined) {\n\t\tJroot = spow(cam16.J, 1 / 2) * 0.1;\n\t}\n\telse if (cam16.Q !== undefined) {\n\t\tJroot = (0.25 * env.c * cam16.Q) / ((env.aW + 4) * env.flRoot);\n\t}\n\n\t// Calculate the `t` value from one of the chroma derived coordinates\n\tlet alpha = 0.0;\n\tif (cam16.C !== undefined) {\n\t\talpha = cam16.C / Jroot;\n\t}\n\telse if (cam16.M !== undefined) {\n\t\talpha = cam16.M / env.flRoot / Jroot;\n\t}\n\telse if (cam16.s !== undefined) {\n\t\talpha = (0.0004 * cam16.s ** 2 * (env.aW + 4)) / env.c;\n\t}\n\tconst t = spow(alpha * Math.pow(1.64 - Math.pow(0.29, env.n), -0.73), 10 / 9);\n\n\t// Eccentricity\n\tconst et = 0.25 * (Math.cos(hRad + 2) + 3.8);\n\n\t// Achromatic response\n\tconst A = env.aW * spow(Jroot, 2 / env.c / env.z);\n\n\t// Calculate red-green and yellow-blue components\n\tconst p1 = (5e4 / 13) * env.nc * env.ncb * et;\n\tconst p2 = A / env.nbb;\n\tconst r = 23 * (p2 + 0.305) * zdiv(t, 23 * p1 + t * (11 * cosh + 108 * sinh));\n\tconst a = r * cosh;\n\tconst b = r * sinh;\n\n\t// Calculate back from cone response to XYZ\n\tconst rgb_c = unadapt(\n\t\t/** @type {Vector3} */\n\t\t(\n\t\t\tmultiply_v3_m3x3([p2, a, b], m1).map(c => {\n\t\t\t\treturn (c * 1) / 1403;\n\t\t\t})\n\t\t),\n\t\tenv.fl,\n\t);\n\treturn /** @type {Vector3} */ (\n\t\tmultiply_v3_m3x3(\n\t\t\t/** @type {Vector3} */ (\n\t\t\t\trgb_c.map((c, i) => {\n\t\t\t\t\treturn c * env.dRgbInv[i];\n\t\t\t\t})\n\t\t\t),\n\t\t\tcat16Inv,\n\t\t).map(c => {\n\t\t\treturn c / 100;\n\t\t})\n\t);\n}\n\n/**\n * @param {[number, number, number]} xyzd65\n * @param {Cam16Environment} env\n * @returns {Cam16Object}\n */\nexport function toCam16 (xyzd65, env) {\n\t// Cone response\n\tconst xyz100 = /** @type {Vector3} */ (\n\t\txyzd65.map(c => {\n\t\t\treturn c * 100;\n\t\t})\n\t);\n\tconst rgbA = adapt(\n\t\t/** @type {[number, number, number]} */\n\t\t(\n\t\t\tmultiply_v3_m3x3(xyz100, cat16).map((c, i) => {\n\t\t\t\treturn c * env.dRgb[i];\n\t\t\t})\n\t\t),\n\t\tenv.fl,\n\t);\n\n\t// Calculate hue from red-green and yellow-blue components\n\tconst a = rgbA[0] + (-12 * rgbA[1] + rgbA[2]) / 11;\n\tconst b = (rgbA[0] + rgbA[1] - 2 * rgbA[2]) / 9;\n\tconst hRad = ((Math.atan2(b, a) % tau) + tau) % tau;\n\n\t// Eccentricity\n\tconst et = 0.25 * (Math.cos(hRad + 2) + 3.8);\n\n\tconst t =\n\t\t(5e4 / 13) *\n\t\tenv.nc *\n\t\tenv.ncb *\n\t\tzdiv(et * Math.sqrt(a ** 2 + b ** 2), rgbA[0] + rgbA[1] + 1.05 * rgbA[2] + 0.305);\n\tconst alpha = spow(t, 0.9) * Math.pow(1.64 - Math.pow(0.29, env.n), 0.73);\n\n\t// Achromatic response\n\tconst A = env.nbb * (2 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]);\n\n\tconst Jroot = spow(A / env.aW, 0.5 * env.c * env.z);\n\n\t// Lightness\n\tconst J = 100 * spow(Jroot, 2);\n\n\t// Brightness\n\tconst Q = (4 / env.c) * Jroot * (env.aW + 4) * env.flRoot;\n\n\t// Chroma\n\tconst C = alpha * Jroot;\n\n\t// Colorfulness\n\tconst M = C * env.flRoot;\n\n\t// Hue\n\tconst h = constrain(hRad * rad2deg);\n\n\t// Hue quadrature\n\tconst H = hueQuadrature(h);\n\n\t// Saturation\n\tconst s = 50 * spow((env.c * alpha) / (env.aW + 4), 1 / 2);\n\n\t// console.log({J: J, C: C, h: h, s: s, Q: Q, M: M, H: H});\n\n\treturn { J: J, C: C, h: h, s: s, Q: Q, M: M, H: H };\n}\n\n// Provided as a way to directly evaluate the CAM16 model\n// https://observablehq.com/@jrus/cam16: reference implementation\n// https://arxiv.org/pdf/1802.06067.pdf: Nico Schlömer\n// https://onlinelibrary.wiley.com/doi/pdf/10.1002/col.22324: hue quadrature\n// https://www.researchgate.net/publication/318152296_Comprehensive_color_solutions_CAM16_CAT16_and_CAM16-UCS\n// Results compared against: https://github.com/colour-science/colour\nexport default new ColorSpace({\n\tid: \"cam16-jmh\",\n\tcssId: \"--cam16-jmh\",\n\tname: \"CAM16-JMh\",\n\tcoords: {\n\t\tj: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"J\",\n\t\t},\n\t\tm: {\n\t\t\trefRange: [0, 105.0],\n\t\t\tname: \"Colorfulness\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\n\tbase: xyz_d65,\n\n\tfromBase (xyz) {\n\t\t// If another derivation is created, ε could vary, so we can't hardcode\n\t\tif (this.ε === undefined) {\n\t\t\tthis.ε = Object.values(this.coords)[1].refRange[1] / 100000;\n\t\t}\n\t\tconst cam16 = toCam16(xyz, viewingConditions);\n\t\tconst isAchromatic = Math.abs(cam16.M) < this.ε;\n\t\treturn [cam16.J, isAchromatic ? 0 : cam16.M, isAchromatic ? null : cam16.h];\n\t},\n\ttoBase (cam16) {\n\t\treturn fromCam16({ J: cam16[0], M: cam16[1], h: cam16[2] }, viewingConditions);\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport { constrain } from \"../angles.js\";\nimport xyz_d65 from \"./xyz-d65.js\";\nimport { fromCam16, toCam16, environment } from \"./cam16.js\";\nimport { WHITES } from \"../adapt.js\";\n\nconst white = WHITES.D65;\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27; // 29^3/3^3\n\nfunction toLstar (y) {\n\t// Convert XYZ Y to L*\n\n\tconst fy = y > ε ? Math.cbrt(y) : (κ * y + 16) / 116;\n\treturn 116.0 * fy - 16.0;\n}\n\nfunction fromLstar (lstar) {\n\t// Convert L* back to XYZ Y\n\n\treturn lstar > 8 ? Math.pow((lstar + 16) / 116, 3) : lstar / κ;\n}\n\nfunction fromHct (coords, env) {\n\t// Use Newton's method to try and converge as quick as possible or\n\t// converge as close as we can. While the requested precision is achieved\n\t// most of the time, it may not always be achievable. Especially past the\n\t// visible spectrum, the algorithm will likely struggle to get the same\n\t// precision. If, for whatever reason, we cannot achieve the accuracy we\n\t// seek in the allotted iterations, just return the closest we were able to\n\t// get.\n\n\tlet [h, c, t] = coords;\n\tlet xyz = [];\n\tlet j = 0;\n\n\t// Shortcut out for black\n\tif (t === 0) {\n\t\treturn [0.0, 0.0, 0.0];\n\t}\n\n\t// Calculate the Y we need to target\n\tlet y = fromLstar(t);\n\n\t// A better initial guess yields better results. Polynomials come from\n\t// curve fitting the T vs J response.\n\tif (t > 0) {\n\t\tj = 0.00379058511492914 * t ** 2 + 0.608983189401032 * t + 0.9155088574762233;\n\t}\n\telse {\n\t\tj = 9.514440756550361e-6 * t ** 2 + 0.08693057439788597 * t - 21.928975842194614;\n\t}\n\n\t// Threshold of how close is close enough, and max number of attempts.\n\t// More precision and more attempts means more time spent iterating. Higher\n\t// required precision gives more accuracy but also increases the chance of\n\t// not hitting the goal. 2e-12 allows us to convert round trip with\n\t// reasonable accuracy of six decimal places or more.\n\tconst threshold = 2e-12;\n\tconst max_attempts = 15;\n\n\tlet attempt = 0;\n\tlet last = Infinity;\n\tlet best = j;\n\n\t// Try to find a J such that the returned y matches the returned y of the L*\n\twhile (attempt <= max_attempts) {\n\t\txyz = fromCam16({ J: j, C: c, h: h }, env);\n\n\t\t// If we are within range, return XYZ\n\t\t// If we are closer than last time, save the values\n\t\tconst delta = Math.abs(xyz[1] - y);\n\t\tif (delta < last) {\n\t\t\tif (delta <= threshold) {\n\t\t\t\treturn xyz;\n\t\t\t}\n\t\t\tbest = j;\n\t\t\tlast = delta;\n\t\t}\n\n\t\t// f(j_root) = (j ** (1 / 2)) * 0.1\n\t\t// f(j) = ((f(j_root) * 100) ** 2) / j - 1 = 0\n\t\t// f(j_root) = Y = y / 100\n\t\t// f(j) = (y ** 2) / j - 1\n\t\t// f'(j) = (2 * y) / j\n\t\tj = j - ((xyz[1] - y) * j) / (2 * xyz[1]);\n\n\t\tattempt += 1;\n\t}\n\n\t// We could not acquire the precision we desired,\n\t// return our closest attempt.\n\treturn fromCam16({ J: j, C: c, h: h }, env);\n}\n\nfunction toHct (xyz, env) {\n\t// Calculate HCT by taking the L* of CIE LCh D65 and CAM16 chroma and hue.\n\n\tconst t = toLstar(xyz[1]);\n\tif (t === 0.0) {\n\t\treturn [0.0, 0.0, 0.0];\n\t}\n\tconst cam16 = toCam16(xyz, viewingConditions);\n\treturn [constrain(cam16.h), cam16.C, t];\n}\n\n// Pre-calculate everything we can with the viewing conditions\nexport const viewingConditions = environment(\n\twhite,\n\t(200 / Math.PI) * fromLstar(50.0),\n\tfromLstar(50.0) * 100,\n\t\"average\",\n\tfalse,\n);\n\n// https://material.io/blog/science-of-color-design\n// This is not a port of the material-color-utilities,\n// but instead implements the full color space as described,\n// combining CAM16 JCh and Lab D65. This does not clamp conversion\n// to HCT to specific chroma bands and provides support for wider\n// gamuts than Google currently supports and does so at a greater\n// precision (> 8 bits back to sRGB).\n// This implementation comes from https://github.com/facelessuser/coloraide\n// which is licensed under MIT.\nexport default new ColorSpace({\n\tid: \"hct\",\n\tname: \"HCT\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 145],\n\t\t\tname: \"Colorfulness\",\n\t\t},\n\t\tt: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Tone\",\n\t\t},\n\t},\n\n\tbase: xyz_d65,\n\n\tfromBase (xyz) {\n\t\tif (this.ε === undefined) {\n\t\t\tthis.ε = Object.values(this.coords)[1].refRange[1] / 100000;\n\t\t}\n\t\tlet hct = toHct(xyz, viewingConditions);\n\t\tif (hct[1] < this.ε) {\n\t\t\thct[1] = 0.0;\n\t\t\thct[0] = null;\n\t\t}\n\t\treturn hct;\n\t},\n\ttoBase (hct) {\n\t\treturn fromHct(hct, viewingConditions);\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--hct\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import hct from \"../spaces/hct.js\";\nimport { viewingConditions } from \"../spaces/hct.js\";\nimport getColor from \"../getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Coords} Coords */\n\nconst rad2deg = 180 / Math.PI;\nconst deg2rad = Math.PI / 180;\nconst ucsCoeff = [1.0, 0.007, 0.0228];\n\n/**\n * Convert HCT chroma and hue (CAM16 JMh colorfulness and hue) using UCS logic for a and b.\n * @param {Coords} coords - HCT coordinates.\n * @return {number[]}\n */\nfunction convertUcsAb (coords) {\n\t// We want the distance between the actual color.\n\t// If chroma is negative, it will throw off our calculations.\n\t// Normally, converting back to the base and forward will correct it.\n\t// If we have a negative chroma after this, then we have a color that\n\t// cannot resolve to positive chroma.\n\tif (coords[1] < 0) {\n\t\tcoords = hct.fromBase(hct.toBase(coords));\n\t}\n\n\t// Only in extreme cases (usually outside the visible spectrum)\n\t// can the input value for log become negative.\n\t// Avoid domain error by forcing a zero result via \"max\" if necessary.\n\tconst M =\n\t\tMath.log(Math.max(1 + ucsCoeff[2] * coords[1] * viewingConditions.flRoot, 1.0)) /\n\t\tucsCoeff[2];\n\tconst hrad = coords[0] * deg2rad;\n\tconst a = M * Math.cos(hrad);\n\tconst b = M * Math.sin(hrad);\n\n\treturn [coords[2], a, b];\n}\n\n/**\n * Color distance using HCT.\n * @param {import(\"../types.js\").ColorTypes} color\n * @param {import(\"../types.js\").ColorTypes} sample\n * @returns {number}\n */\nexport default function (color, sample) {\n\t[color, sample] = getColor([color, sample]);\n\n\tlet [t1, a1, b1] = convertUcsAb(hct.from(color));\n\tlet [t2, a2, b2] = convertUcsAb(hct.from(sample));\n\n\t// Use simple euclidean distance with a and b using UCS conversion\n\t// and LCh lightness (HCT tone).\n\treturn Math.sqrt((t1 - t2) ** 2 + (a1 - a2) ** 2 + (b1 - b2) ** 2);\n}\n","/**\n * @packageDocumentation\n * This module defines all the builtin deltaE methods.\n */\nimport deltaE76 from \"./deltaE76.js\";\nimport deltaECMC from \"./deltaECMC.js\";\nimport deltaE2000 from \"./deltaE2000.js\";\nimport deltaEJz from \"./deltaEJz.js\";\nimport deltaEITP from \"./deltaEITP.js\";\nimport deltaEOK from \"./deltaEOK.js\";\nimport deltaEOK2 from \"./deltaEOK2.js\";\nimport deltaEHCT from \"./deltaEHCT.js\";\n\nexport { deltaE76, deltaECMC, deltaE2000, deltaEJz, deltaEITP, deltaEOK, deltaEOK2, deltaEHCT };\n\nexport default {\n\tdeltaE76,\n\tdeltaECMC,\n\tdeltaE2000,\n\tdeltaEJz,\n\tdeltaEITP,\n\tdeltaEOK,\n\tdeltaEOK2,\n\tdeltaEHCT,\n};\n\n/** @typedef {keyof typeof import(\"./index.js\").default extends `deltaE${infer Method}` ? Method : string} Methods */\n","import * as util from \"./util.js\";\nimport ColorSpace from \"./ColorSpace.js\";\nimport defaults from \"./defaults.js\";\nimport deltaE2000 from \"./deltaE/deltaE2000.js\";\nimport deltaEOK from \"./deltaE/deltaEOK.js\";\nimport inGamut from \"./inGamut.js\";\nimport to from \"./to.js\";\nimport get from \"./get.js\";\nimport oklab from \"./spaces/oklab.js\";\nimport set from \"./set.js\";\nimport clone from \"./clone.js\";\nimport getColor from \"./getColor.js\";\nimport deltaEMethods from \"./deltaE/index.js\";\nimport { WHITES } from \"./adapt.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").ToGamutOptions} ToGamutOptions */\n\n/**\n * Calculate the epsilon to 2 degrees smaller than the specified JND.\n * @param {number} jnd The target \"just noticeable difference\".\n * @returns {number}\n */\nfunction calcEpsilon (jnd) {\n\t// Calculate the epsilon to 2 degrees smaller than the specified JND.\n\n\tconst order = !jnd ? 0 : Math.floor(Math.log10(Math.abs(jnd)));\n\t// Limit to an arbitrary value to ensure value is never too small and causes infinite loops.\n\treturn Math.max(parseFloat(`1e${order - 2}`), 1e-6);\n}\n\nconst GMAPPRESET = {\n\thct: {\n\t\tmethod: \"hct.c\",\n\t\tjnd: 2,\n\t\tdeltaEMethod: \"hct\",\n\t\tblackWhiteClamp: {},\n\t},\n\t\"hct-tonal\": {\n\t\tmethod: \"hct.c\",\n\t\tjnd: 0,\n\t\tdeltaEMethod: \"hct\",\n\t\tblackWhiteClamp: { channel: \"hct.t\", min: 0, max: 100 },\n\t},\n};\n\n/**\n * Force coordinates to be in gamut of a certain color space.\n * Mutates the color it is passed.\n * @overload\n * @param {ColorTypes} color\n * @param {ToGamutOptions} [options]\n * @returns {PlainColorObject}\n */\n/**\n * @overload\n * @param {ColorTypes} color\n * @param {string} [space]\n * @returns {PlainColorObject}\n */\n/**\n * @param {ColorTypes} color\n * @param {string & Partial<ToGamutOptions> | ToGamutOptions} [space]\n * @returns {PlainColorObject}\n */\nexport default function toGamut (\n\tcolor,\n\t{\n\t\tmethod = defaults.gamut_mapping,\n\t\tspace = undefined,\n\t\tdeltaEMethod = \"\",\n\t\tjnd = 2,\n\t\tblackWhiteClamp = undefined,\n\t} = {},\n) {\n\tcolor = getColor(color);\n\n\tif (util.isString(arguments[1])) {\n\t\tspace = arguments[1];\n\t}\n\telse if (!space) {\n\t\tspace = color.space;\n\t}\n\n\tspace = ColorSpace.get(space);\n\n\t// 3 spaces:\n\t// color.space: current color space\n\t// space: space whose gamut we are mapping to\n\t// mapSpace: space with the coord we're reducing\n\n\tif (inGamut(color, space, { epsilon: 0 })) {\n\t\treturn /** @type {PlainColorObject} */ (color);\n\t}\n\n\tlet spaceColor;\n\tif (method === \"css\") {\n\t\tspaceColor = toGamutCSS(color, { space });\n\t}\n\telse {\n\t\tif (method !== \"clip\" && !inGamut(color, space)) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(GMAPPRESET, method)) {\n\t\t\t\t({ method, jnd, deltaEMethod, blackWhiteClamp } = GMAPPRESET[method]);\n\t\t\t}\n\n\t\t\t// Get the correct delta E method\n\t\t\tlet de = deltaE2000;\n\t\t\tif (deltaEMethod !== \"\") {\n\t\t\t\tfor (let m in deltaEMethods) {\n\t\t\t\t\tif (\"deltae\" + deltaEMethod.toLowerCase() === m.toLowerCase()) {\n\t\t\t\t\t\tde = deltaEMethods[m];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (jnd === 0) {\n\t\t\t\tjnd = 1e-16;\n\t\t\t}\n\n\t\t\tlet clipped = toGamut(to(color, space), { method: \"clip\", space });\n\t\t\tif (de(color, clipped) > jnd) {\n\t\t\t\t// Clamp to SDR white and black if required\n\t\t\t\tif (blackWhiteClamp && Object.keys(blackWhiteClamp).length === 3) {\n\t\t\t\t\tlet channelMeta = ColorSpace.resolveCoord(blackWhiteClamp.channel);\n\t\t\t\t\tlet channel = get(to(color, channelMeta.space), channelMeta.id);\n\t\t\t\t\tif (util.isNone(channel)) {\n\t\t\t\t\t\tchannel = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (channel >= blackWhiteClamp.max) {\n\t\t\t\t\t\treturn to({ space: \"xyz-d65\", coords: WHITES[\"D65\"] }, color.space);\n\t\t\t\t\t}\n\t\t\t\t\telse if (channel <= blackWhiteClamp.min) {\n\t\t\t\t\t\treturn to({ space: \"xyz-d65\", coords: [0, 0, 0] }, color.space);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\t\t\tlet coordMeta = ColorSpace.resolveCoord(method);\n\t\t\t\tlet mapSpace = coordMeta.space;\n\t\t\t\tlet coordId = coordMeta.id;\n\n\t\t\t\tlet mappedColor = to(color, mapSpace);\n\t\t\t\t// If we were already in the mapped color space, we need to resolve undefined channels\n\t\t\t\tmappedColor.coords.forEach((c, i) => {\n\t\t\t\t\tif (util.isNone(c)) {\n\t\t\t\t\t\tmappedColor.coords[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet bounds = coordMeta.range || coordMeta.refRange;\n\t\t\t\tlet min = bounds[0];\n\t\t\t\tlet ε = calcEpsilon(jnd);\n\t\t\t\tlet low = min;\n\t\t\t\tlet high = get(mappedColor, coordId);\n\n\t\t\t\twhile (high - low > ε) {\n\t\t\t\t\tlet clipped = clone(mappedColor);\n\t\t\t\t\tclipped = toGamut(clipped, { space, method: \"clip\" });\n\t\t\t\t\tlet deltaE = de(mappedColor, clipped);\n\n\t\t\t\t\tif (deltaE - jnd < ε) {\n\t\t\t\t\t\tlow = get(mappedColor, coordId);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thigh = get(mappedColor, coordId);\n\t\t\t\t\t}\n\n\t\t\t\t\tset(mappedColor, coordId, (low + high) / 2);\n\t\t\t\t}\n\n\t\t\t\tspaceColor = to(mappedColor, space);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tspaceColor = clipped;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tspaceColor = to(color, space);\n\t\t}\n\n\t\tif (\n\t\t\tmethod === \"clip\" || // Dumb coord clipping\n\t\t\t// finish off smarter gamut mapping with clip to get rid of ε, see #17\n\t\t\t!inGamut(spaceColor, space, { epsilon: 0 })\n\t\t) {\n\t\t\tlet bounds = Object.values(space.coords).map(c => c.range || []);\n\n\t\t\tspaceColor.coords = /** @type {[number, number, number]} */ (\n\t\t\t\tspaceColor.coords.map((c, i) => {\n\t\t\t\t\tlet [min, max] = bounds[i];\n\n\t\t\t\t\tif (min !== undefined) {\n\t\t\t\t\t\tc = Math.max(min, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (max !== undefined) {\n\t\t\t\t\t\tc = Math.min(c, max);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn c;\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\tif (space !== color.space) {\n\t\tspaceColor = to(spaceColor, color.space);\n\t}\n\n\tcolor.coords = spaceColor.coords;\n\treturn /** @type {PlainColorObject} */ (color);\n}\n\n/** @type {\"color\"} */\ntoGamut.returns = \"color\";\n\n/**\n * The reference colors to be used if lightness is out of the range 0-1 in the\n * `Oklch` space. These are created in the `Oklab` space, as it is used by the\n * DeltaEOK calculation, so it is guaranteed to be imported.\n * @satisfies {Record<string, ColorTypes>}\n */\nconst COLORS = {\n\tWHITE: { space: oklab, coords: [1, 0, 0], alpha: 1 },\n\tBLACK: { space: oklab, coords: [0, 0, 0], alpha: 1 },\n};\n\n/**\n * Given a color `origin`, returns a new color that is in gamut using\n * the CSS Gamut Mapping Algorithm. If `space` is specified, it will be in gamut\n * in `space`, and returned in `space`. Otherwise, it will be in gamut and\n * returned in the color space of `origin`.\n * @param {ColorTypes} origin\n * @param {{ space?: string | ColorSpace | undefined }} param1\n * @returns {PlainColorObject}\n */\nexport function toGamutCSS (origin, { space } = {}) {\n\tconst JND = 0.02;\n\tconst ε = 0.0001;\n\n\torigin = getColor(origin);\n\n\tif (!space) {\n\t\tspace = origin.space;\n\t}\n\n\tspace = ColorSpace.get(space);\n\tconst oklchSpace = ColorSpace.get(\"oklch\");\n\n\tif (space.isUnbounded) {\n\t\treturn to(origin, space);\n\t}\n\n\tconst origin_OKLCH = to(origin, oklchSpace);\n\tlet L = origin_OKLCH.coords[0];\n\n\t// return media white or black, if lightness is out of range\n\tif (L >= 1) {\n\t\tconst white = to(COLORS.WHITE, space);\n\t\twhite.alpha = origin.alpha;\n\t\treturn to(white, space);\n\t}\n\tif (L <= 0) {\n\t\tconst black = to(COLORS.BLACK, space);\n\t\tblack.alpha = origin.alpha;\n\t\treturn to(black, space);\n\t}\n\n\tif (inGamut(origin_OKLCH, space, { epsilon: 0 })) {\n\t\treturn to(origin_OKLCH, space);\n\t}\n\n\tfunction clip (_color) {\n\t\tconst destColor = to(_color, space);\n\t\tconst spaceCoords = Object.values(/** @type {ColorSpace} */ (space).coords);\n\t\tdestColor.coords = /** @type {[number, number, number]} */ (\n\t\t\tdestColor.coords.map((coord, index) => {\n\t\t\t\tif (\"range\" in spaceCoords[index]) {\n\t\t\t\t\tconst [min, max] = spaceCoords[index].range;\n\t\t\t\t\treturn util.clamp(min, coord, max);\n\t\t\t\t}\n\t\t\t\treturn coord;\n\t\t\t})\n\t\t);\n\t\treturn destColor;\n\t}\n\tlet min = 0;\n\tlet max = origin_OKLCH.coords[1];\n\tlet min_inGamut = true;\n\tlet current = clone(origin_OKLCH);\n\tlet clipped = clip(current);\n\n\tlet E = deltaEOK(clipped, current);\n\tif (E < JND) {\n\t\treturn clipped;\n\t}\n\n\twhile (max - min > ε) {\n\t\tconst chroma = (min + max) / 2;\n\t\tcurrent.coords[1] = chroma;\n\t\tif (min_inGamut && inGamut(current, space, { epsilon: 0 })) {\n\t\t\tmin = chroma;\n\t\t}\n\t\telse {\n\t\t\tclipped = clip(current);\n\t\t\tE = deltaEOK(clipped, current);\n\t\t\tif (E < JND) {\n\t\t\t\tif (JND - E < ε) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmin_inGamut = false;\n\t\t\t\t\tmin = chroma;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = chroma;\n\t\t\t}\n\t\t}\n\t}\n\treturn clipped;\n}\n","import getColor from \"./getColor.js\";\nimport ColorSpace from \"./ColorSpace.js\";\nimport toGamut from \"./toGamut.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").ToGamutOptions} ToGamutOptions */\n\n/**\n * Convert to color space and return a new color\n * @param {ColorTypes} color\n * @param {string | ColorSpace} space\n * @param {{ inGamut?: boolean | ToGamutOptions | undefined }} options\n * @returns {PlainColorObject}\n */\nexport default function to (color, space, { inGamut } = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\n\tlet coords = space.from(color);\n\tlet ret = { space, coords, alpha: color.alpha };\n\n\tif (inGamut) {\n\t\tret = toGamut(ret, inGamut === true ? undefined : inGamut);\n\t}\n\n\treturn ret;\n}\n\n/** @type {\"color\"} */\nto.returns = \"color\";\n","// @ts-nocheck\n\nimport * as util from \"./util.js\";\nimport ColorSpace from \"./ColorSpace.js\";\nimport defaults from \"./defaults.js\";\nimport getColor from \"./getColor.js\";\nimport to from \"./to.js\";\nimport checkInGamut from \"./inGamut.js\";\nimport toGamut from \"./toGamut.js\";\nimport clone from \"./clone.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").SerializeOptions} SerializeOptions */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").ParseOptions} ParseOptions */\n\n/**\n * Generic toString() method, outputs a color(spaceId ...coords) function, a functional syntax, or custom formats defined by the color space\n * @param {ColorTypes} color\n * @param {SerializeOptions & Record<string, any>} options\n * @returns {string}\n */\nexport default function serialize (color, options = {}) {\n\tlet {\n\t\tprecision = defaults.precision,\n\t\tformat,\n\t\tinGamut = true,\n\t\tcoords: coordFormat,\n\t\talpha: alphaFormat,\n\t\tcommas,\n\t} = options;\n\tlet ret;\n\n\tlet colorWithMeta = /** @type {PlainColorObject & ParseOptions} */ (getColor(color));\n\n\tlet formatId = format;\n\tlet parseMeta = colorWithMeta.parseMeta;\n\n\tif (parseMeta && !format) {\n\t\tif (parseMeta.format.canSerialize()) {\n\t\t\tformat = parseMeta.format;\n\t\t\tformatId = parseMeta.formatId;\n\t\t}\n\n\t\tcoordFormat ??= parseMeta.types;\n\t\talphaFormat ??= parseMeta.alphaType;\n\t\tcommas ??= parseMeta.commas;\n\t}\n\n\tif (formatId) {\n\t\t// A format is explicitly specified\n\t\tformat = colorWithMeta.space.getFormat(format) ?? ColorSpace.findFormat(formatId);\n\t}\n\n\tif (!format) {\n\t\t// No format specified, or format not found\n\t\tformat = colorWithMeta.space.getFormat(\"default\") ?? ColorSpace.DEFAULT_FORMAT;\n\t\tformatId = format.name;\n\t}\n\n\tif (format && format.space && format.space !== colorWithMeta.space) {\n\t\t// Format specified belongs to a different color space,\n\t\t// need to convert to it first\n\t\tcolorWithMeta = to(colorWithMeta, format.space);\n\t}\n\n\t// The assignment to coords and inGamut needs to stay in the order they are now\n\t// The order of the assignment was changed as a workaround for a bug in Next.js\n\t// See this issue for details: https://github.com/color-js/color.js/issues/260\n\n\tlet coords = colorWithMeta.coords.slice(); // clone so we can manipulate it\n\n\tinGamut ||= format.toGamut;\n\n\tif (inGamut && !checkInGamut(colorWithMeta)) {\n\t\t// FIXME what happens if the color contains none values?\n\t\tcoords = toGamut(clone(colorWithMeta), inGamut === true ? undefined : inGamut).coords;\n\t}\n\n\tif (format.type === \"custom\") {\n\t\tif (format.serialize) {\n\t\t\tret = format.serialize(coords, colorWithMeta.alpha, options);\n\t\t}\n\t\telse {\n\t\t\tthrow new TypeError(\n\t\t\t\t`format ${formatId} can only be used to parse colors, not for serialization`,\n\t\t\t);\n\t\t}\n\t}\n\telse {\n\t\t// Functional syntax\n\t\tlet name = format.name || \"color\";\n\n\t\tlet args = format.serializeCoords(coords, precision, coordFormat);\n\n\t\tif (name === \"color\") {\n\t\t\t// If output is a color() function, add colorspace id as first argument\n\t\t\tlet cssId =\n\t\t\t\tformat.id || format.ids?.[0] || colorWithMeta.space.cssId || colorWithMeta.space.id;\n\t\t\targs.unshift(cssId);\n\t\t}\n\n\t\t// Serialize alpha?\n\t\t/** @type {string | number} */\n\t\tlet alpha = colorWithMeta.alpha;\n\n\t\tif (alphaFormat !== undefined && !(typeof alphaFormat === \"object\")) {\n\t\t\talphaFormat =\n\t\t\t\ttypeof alphaFormat === \"string\" ? { type: alphaFormat } : { include: alphaFormat };\n\t\t}\n\n\t\tlet alphaType = alphaFormat?.type ?? \"<number>\";\n\t\tlet serializeAlpha =\n\t\t\talphaFormat?.include === true ||\n\t\t\tformat.alpha === true ||\n\t\t\t(alphaFormat?.include !== false && format.alpha !== false && alpha < 1);\n\t\tlet strAlpha = \"\";\n\n\t\tcommas ??= format.commas;\n\n\t\tif (serializeAlpha) {\n\t\t\tif (precision !== null) {\n\t\t\t\tlet unit;\n\n\t\t\t\tif (alphaType === \"<percentage>\") {\n\t\t\t\t\tunit = \"%\";\n\t\t\t\t\talpha *= 100;\n\t\t\t\t}\n\n\t\t\t\talpha = util.serializeNumber(alpha, { precision, unit });\n\t\t\t}\n\n\t\t\tstrAlpha = `${commas ? \",\" : \" /\"} ${alpha}`;\n\t\t}\n\n\t\tret = `${name}(${args.join(commas ? \", \" : \" \")}${strAlpha})`;\n\t}\n\n\treturn ret;\n}\n","import RGBColorSpace from \"../RGBColorSpace.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// convert an array of linear-light rec2020 values to CIE XYZ\n// using  D65 (no chromatic adaptation)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// 0 is actually calculated as  4.994106574466076e-17\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[ 0.6369580483012914, 0.14461690358620832,  0.1688809751641721  ],\n\t[ 0.2627002120112671, 0.6779980715188708,   0.05930171646986196 ],\n\t[ 0.000000000000000,  0.028072693049087428, 1.060985057710791   ],\n];\n\n// from ITU-R BT.2124-0 Annex 2 p.3\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst fromXYZ_M = [\n\t[  1.716651187971268,  -0.355670783776392, -0.253366281373660  ],\n\t[ -0.666684351832489,   1.616481236634939,  0.0157685458139111 ],\n\t[  0.017639857445311,  -0.042770613257809,  0.942103121235474  ],\n];\n\nexport default new RGBColorSpace({\n\tid: \"rec2020-linear\",\n\tcssId: \"--rec2020-linear\",\n\tname: \"Linear REC.2020\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n// import sRGB from \"./srgb.js\";\n\nexport default new RGBColorSpace({\n\tid: \"rec2020\",\n\tname: \"REC.2020\",\n\tbase: REC2020Linear,\n\t//  Reference electro-optical transfer function from Rec. ITU-R BT.1886 Annex 1\n\t//  with b (black lift) = 0 and a (user gain) = 1\n\t//  defined over the extended range, not clamped\n\ttoBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\t\t\treturn sign * Math.pow(abs, 2.4);\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\t\t\treturn sign * Math.pow(abs, 1 / 2.4);\n\t\t});\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n\t[0.2289745640697488, 0.6917385218365064,  0.079286914093745],\n\t[0.0000000000000000, 0.04511338185890264, 1.043944368900976],\n];\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst fromXYZ_M = [\n\t[ 2.493496911941425,   -0.9313836179191239, -0.40271078445071684],\n\t[-0.8294889695615747,   1.7626640603183463,  0.023624685841943577],\n\t[ 0.03584583024378447, -0.07617238926804182, 0.9568845240076872],\n];\n\nexport default new RGBColorSpace({\n\tid: \"p3-linear\",\n\tcssId: \"display-p3-linear\",\n\tname: \"Linear P3\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// This is the linear-light version of sRGB\n// as used for example in SVG filters\n// or in Canvas\n\n// This matrix was calculated directly from the RGB and white chromaticities\n// when rounded to 8 decimal places, it agrees completely with the official matrix\n// see https://github.com/w3c/csswg-drafts/issues/5922\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[ 0.41239079926595934, 0.357584339383878,   0.1804807884018343  ],\n\t[ 0.21263900587151027, 0.715168678767756,   0.07219231536073371 ],\n\t[ 0.01933081871559182, 0.11919477979462598, 0.9505321522496607  ],\n];\n\n// This matrix is the inverse of the above;\n// again it agrees with the official definition when rounded to 8 decimal places\n/** @type {Matrix3x3} */\n// prettier-ignore\nexport const fromXYZ_M = [\n\t[  3.2409699419045226,  -1.537383177570094,   -0.4986107602930034  ],\n\t[ -0.9692436362808796,   1.8759675015077202,   0.04155505740717559 ],\n\t[  0.05563007969699366, -0.20397695888897652,  1.0569715142428786  ],\n];\n\nexport default new RGBColorSpace({\n\tid: \"srgb-linear\",\n\tname: \"Linear sRGB\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n","// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\n// and run in the console:\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\n\n/** List of CSS color keywords\n *  Note that this does not include currentColor, transparent,\n *  or system colors\n *\n *  @type {Record<string, [number, number, number]>}\n */\nexport default {\n\taliceblue: [240 / 255, 248 / 255, 1],\n\tantiquewhite: [250 / 255, 235 / 255, 215 / 255],\n\taqua: [0, 1, 1],\n\taquamarine: [127 / 255, 1, 212 / 255],\n\tazure: [240 / 255, 1, 1],\n\tbeige: [245 / 255, 245 / 255, 220 / 255],\n\tbisque: [1, 228 / 255, 196 / 255],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [1, 235 / 255, 205 / 255],\n\tblue: [0, 0, 1],\n\tblueviolet: [138 / 255, 43 / 255, 226 / 255],\n\tbrown: [165 / 255, 42 / 255, 42 / 255],\n\tburlywood: [222 / 255, 184 / 255, 135 / 255],\n\tcadetblue: [95 / 255, 158 / 255, 160 / 255],\n\tchartreuse: [127 / 255, 1, 0],\n\tchocolate: [210 / 255, 105 / 255, 30 / 255],\n\tcoral: [1, 127 / 255, 80 / 255],\n\tcornflowerblue: [100 / 255, 149 / 255, 237 / 255],\n\tcornsilk: [1, 248 / 255, 220 / 255],\n\tcrimson: [220 / 255, 20 / 255, 60 / 255],\n\tcyan: [0, 1, 1],\n\tdarkblue: [0, 0, 139 / 255],\n\tdarkcyan: [0, 139 / 255, 139 / 255],\n\tdarkgoldenrod: [184 / 255, 134 / 255, 11 / 255],\n\tdarkgray: [169 / 255, 169 / 255, 169 / 255],\n\tdarkgreen: [0, 100 / 255, 0],\n\tdarkgrey: [169 / 255, 169 / 255, 169 / 255],\n\tdarkkhaki: [189 / 255, 183 / 255, 107 / 255],\n\tdarkmagenta: [139 / 255, 0, 139 / 255],\n\tdarkolivegreen: [85 / 255, 107 / 255, 47 / 255],\n\tdarkorange: [1, 140 / 255, 0],\n\tdarkorchid: [153 / 255, 50 / 255, 204 / 255],\n\tdarkred: [139 / 255, 0, 0],\n\tdarksalmon: [233 / 255, 150 / 255, 122 / 255],\n\tdarkseagreen: [143 / 255, 188 / 255, 143 / 255],\n\tdarkslateblue: [72 / 255, 61 / 255, 139 / 255],\n\tdarkslategray: [47 / 255, 79 / 255, 79 / 255],\n\tdarkslategrey: [47 / 255, 79 / 255, 79 / 255],\n\tdarkturquoise: [0, 206 / 255, 209 / 255],\n\tdarkviolet: [148 / 255, 0, 211 / 255],\n\tdeeppink: [1, 20 / 255, 147 / 255],\n\tdeepskyblue: [0, 191 / 255, 1],\n\tdimgray: [105 / 255, 105 / 255, 105 / 255],\n\tdimgrey: [105 / 255, 105 / 255, 105 / 255],\n\tdodgerblue: [30 / 255, 144 / 255, 1],\n\tfirebrick: [178 / 255, 34 / 255, 34 / 255],\n\tfloralwhite: [1, 250 / 255, 240 / 255],\n\tforestgreen: [34 / 255, 139 / 255, 34 / 255],\n\tfuchsia: [1, 0, 1],\n\tgainsboro: [220 / 255, 220 / 255, 220 / 255],\n\tghostwhite: [248 / 255, 248 / 255, 1],\n\tgold: [1, 215 / 255, 0],\n\tgoldenrod: [218 / 255, 165 / 255, 32 / 255],\n\tgray: [128 / 255, 128 / 255, 128 / 255],\n\tgreen: [0, 128 / 255, 0],\n\tgreenyellow: [173 / 255, 1, 47 / 255],\n\tgrey: [128 / 255, 128 / 255, 128 / 255],\n\thoneydew: [240 / 255, 1, 240 / 255],\n\thotpink: [1, 105 / 255, 180 / 255],\n\tindianred: [205 / 255, 92 / 255, 92 / 255],\n\tindigo: [75 / 255, 0, 130 / 255],\n\tivory: [1, 1, 240 / 255],\n\tkhaki: [240 / 255, 230 / 255, 140 / 255],\n\tlavender: [230 / 255, 230 / 255, 250 / 255],\n\tlavenderblush: [1, 240 / 255, 245 / 255],\n\tlawngreen: [124 / 255, 252 / 255, 0],\n\tlemonchiffon: [1, 250 / 255, 205 / 255],\n\tlightblue: [173 / 255, 216 / 255, 230 / 255],\n\tlightcoral: [240 / 255, 128 / 255, 128 / 255],\n\tlightcyan: [224 / 255, 1, 1],\n\tlightgoldenrodyellow: [250 / 255, 250 / 255, 210 / 255],\n\tlightgray: [211 / 255, 211 / 255, 211 / 255],\n\tlightgreen: [144 / 255, 238 / 255, 144 / 255],\n\tlightgrey: [211 / 255, 211 / 255, 211 / 255],\n\tlightpink: [1, 182 / 255, 193 / 255],\n\tlightsalmon: [1, 160 / 255, 122 / 255],\n\tlightseagreen: [32 / 255, 178 / 255, 170 / 255],\n\tlightskyblue: [135 / 255, 206 / 255, 250 / 255],\n\tlightslategray: [119 / 255, 136 / 255, 153 / 255],\n\tlightslategrey: [119 / 255, 136 / 255, 153 / 255],\n\tlightsteelblue: [176 / 255, 196 / 255, 222 / 255],\n\tlightyellow: [1, 1, 224 / 255],\n\tlime: [0, 1, 0],\n\tlimegreen: [50 / 255, 205 / 255, 50 / 255],\n\tlinen: [250 / 255, 240 / 255, 230 / 255],\n\tmagenta: [1, 0, 1],\n\tmaroon: [128 / 255, 0, 0],\n\tmediumaquamarine: [102 / 255, 205 / 255, 170 / 255],\n\tmediumblue: [0, 0, 205 / 255],\n\tmediumorchid: [186 / 255, 85 / 255, 211 / 255],\n\tmediumpurple: [147 / 255, 112 / 255, 219 / 255],\n\tmediumseagreen: [60 / 255, 179 / 255, 113 / 255],\n\tmediumslateblue: [123 / 255, 104 / 255, 238 / 255],\n\tmediumspringgreen: [0, 250 / 255, 154 / 255],\n\tmediumturquoise: [72 / 255, 209 / 255, 204 / 255],\n\tmediumvioletred: [199 / 255, 21 / 255, 133 / 255],\n\tmidnightblue: [25 / 255, 25 / 255, 112 / 255],\n\tmintcream: [245 / 255, 1, 250 / 255],\n\tmistyrose: [1, 228 / 255, 225 / 255],\n\tmoccasin: [1, 228 / 255, 181 / 255],\n\tnavajowhite: [1, 222 / 255, 173 / 255],\n\tnavy: [0, 0, 128 / 255],\n\toldlace: [253 / 255, 245 / 255, 230 / 255],\n\tolive: [128 / 255, 128 / 255, 0],\n\tolivedrab: [107 / 255, 142 / 255, 35 / 255],\n\torange: [1, 165 / 255, 0],\n\torangered: [1, 69 / 255, 0],\n\torchid: [218 / 255, 112 / 255, 214 / 255],\n\tpalegoldenrod: [238 / 255, 232 / 255, 170 / 255],\n\tpalegreen: [152 / 255, 251 / 255, 152 / 255],\n\tpaleturquoise: [175 / 255, 238 / 255, 238 / 255],\n\tpalevioletred: [219 / 255, 112 / 255, 147 / 255],\n\tpapayawhip: [1, 239 / 255, 213 / 255],\n\tpeachpuff: [1, 218 / 255, 185 / 255],\n\tperu: [205 / 255, 133 / 255, 63 / 255],\n\tpink: [1, 192 / 255, 203 / 255],\n\tplum: [221 / 255, 160 / 255, 221 / 255],\n\tpowderblue: [176 / 255, 224 / 255, 230 / 255],\n\tpurple: [128 / 255, 0, 128 / 255],\n\trebeccapurple: [102 / 255, 51 / 255, 153 / 255],\n\tred: [1, 0, 0],\n\trosybrown: [188 / 255, 143 / 255, 143 / 255],\n\troyalblue: [65 / 255, 105 / 255, 225 / 255],\n\tsaddlebrown: [139 / 255, 69 / 255, 19 / 255],\n\tsalmon: [250 / 255, 128 / 255, 114 / 255],\n\tsandybrown: [244 / 255, 164 / 255, 96 / 255],\n\tseagreen: [46 / 255, 139 / 255, 87 / 255],\n\tseashell: [1, 245 / 255, 238 / 255],\n\tsienna: [160 / 255, 82 / 255, 45 / 255],\n\tsilver: [192 / 255, 192 / 255, 192 / 255],\n\tskyblue: [135 / 255, 206 / 255, 235 / 255],\n\tslateblue: [106 / 255, 90 / 255, 205 / 255],\n\tslategray: [112 / 255, 128 / 255, 144 / 255],\n\tslategrey: [112 / 255, 128 / 255, 144 / 255],\n\tsnow: [1, 250 / 255, 250 / 255],\n\tspringgreen: [0, 1, 127 / 255],\n\tsteelblue: [70 / 255, 130 / 255, 180 / 255],\n\ttan: [210 / 255, 180 / 255, 140 / 255],\n\tteal: [0, 128 / 255, 128 / 255],\n\tthistle: [216 / 255, 191 / 255, 216 / 255],\n\ttomato: [1, 99 / 255, 71 / 255],\n\tturquoise: [64 / 255, 224 / 255, 208 / 255],\n\tviolet: [238 / 255, 130 / 255, 238 / 255],\n\twheat: [245 / 255, 222 / 255, 179 / 255],\n\twhite: [1, 1, 1],\n\twhitesmoke: [245 / 255, 245 / 255, 245 / 255],\n\tyellow: [1, 1, 0],\n\tyellowgreen: [154 / 255, 205 / 255, 50 / 255],\n};\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport sRGBLinear from \"./srgb-linear.js\";\nimport KEYWORDS from \"../keywords.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Coords} Coords */\n\nlet coordGrammar = Array(3).fill(\"<percentage> | <number>[0, 255]\");\nlet coordGrammarNumber = Array(3).fill(\"<number>[0, 255]\");\n\nexport default new RGBColorSpace({\n\tid: \"srgb\",\n\tname: \"sRGB\",\n\tbase: sRGBLinear,\n\tfromBase: rgb => {\n\t\t// convert an array of linear-light sRGB values in the range 0.0-1.0\n\t\t// to gamma corrected form\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs > 0.0031308) {\n\t\t\t\treturn sign * (1.055 * abs ** (1 / 2.4) - 0.055);\n\t\t\t}\n\n\t\t\treturn 12.92 * val;\n\t\t});\n\t},\n\ttoBase: rgb => {\n\t\t// convert an array of sRGB values in the range 0.0 - 1.0\n\t\t// to linear light (un-companded) form.\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs <= 0.04045) {\n\t\t\t\treturn val / 12.92;\n\t\t\t}\n\n\t\t\treturn sign * ((abs + 0.055) / 1.055) ** 2.4;\n\t\t});\n\t},\n\tformats: {\n\t\trgb: {\n\t\t\tcoords: coordGrammar,\n\t\t},\n\t\trgb_number: {\n\t\t\tname: \"rgb\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber,\n\t\t\talpha: false,\n\t\t},\n\t\tcolor: {\n\t\t\t/* use defaults */\n\t\t},\n\t\trgba: {\n\t\t\tcoords: coordGrammar,\n\t\t\tcommas: true,\n\t\t\talpha: true,\n\t\t},\n\t\trgba_number: {\n\t\t\tname: \"rgba\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber,\n\t\t},\n\t\thex: {\n\t\t\ttype: \"custom\",\n\t\t\ttoGamut: true,\n\t\t\ttest: str => /^#(([a-f0-9]{2}){3,4}|[a-f0-9]{3,4})$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tif (str.length <= 5) {\n\t\t\t\t\t// #rgb or #rgba, duplicate digits\n\t\t\t\t\tstr = str.replace(/[a-f0-9]/gi, \"$&$&\");\n\t\t\t\t}\n\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tlet rgba = [];\n\t\t\t\t// @ts-expect-error Type 'void' is not assignable to type 'string'\n\t\t\t\tstr.replace(/[a-f0-9]{2}/gi, component => {\n\t\t\t\t\trgba.push(parseInt(component, 16) / 255);\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tspaceId: \"srgb\",\n\t\t\t\t\tcoords: /** @type {Coords} */ (rgba.slice(0, 3)),\n\t\t\t\t\talpha: /** @type {number} */ (rgba.slice(3)[0]),\n\t\t\t\t};\n\t\t\t},\n\t\t\tserialize: (\n\t\t\t\tcoords,\n\t\t\t\talpha,\n\t\t\t\t{\n\t\t\t\t\tcollapse = true, // collapse to 3-4 digit hex when possible?\n\t\t\t\t\talpha: alphaFormat,\n\t\t\t\t} = {},\n\t\t\t) => {\n\t\t\t\tif ((alphaFormat !== false && alpha < 1) || alphaFormat === true) {\n\t\t\t\t\tcoords.push(alpha);\n\t\t\t\t}\n\n\t\t\t\tcoords = /** @type {[number, number, number]} */ (\n\t\t\t\t\tcoords.map(c => Math.round(c * 255))\n\t\t\t\t);\n\n\t\t\t\tlet collapsible = collapse && coords.every(c => c % 17 === 0);\n\n\t\t\t\tlet hex = coords\n\t\t\t\t\t.map(c => {\n\t\t\t\t\t\tif (collapsible) {\n\t\t\t\t\t\t\treturn (c / 17).toString(16);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn c.toString(16).padStart(2, \"0\");\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\n\t\t\t\treturn \"#\" + hex;\n\t\t\t},\n\t\t},\n\t\tkeyword: {\n\t\t\ttype: \"custom\",\n\t\t\ttest: str => /^[a-z]+$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tstr = str.toLowerCase();\n\t\t\t\tlet ret = { spaceId: \"srgb\", coords: null, alpha: 1 };\n\n\t\t\t\tif (str === \"transparent\") {\n\t\t\t\t\tret.coords = KEYWORDS.black;\n\t\t\t\t\tret.alpha = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.coords = KEYWORDS[str];\n\t\t\t\t}\n\n\t\t\t\tif (ret.coords) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport P3Linear from \"./p3-linear.js\";\nimport sRGB from \"./srgb.js\";\n\nexport default new RGBColorSpace({\n\tid: \"p3\",\n\tcssId: \"display-p3\",\n\tname: \"P3\",\n\tbase: P3Linear,\n\t// Gamma encoding/decoding is the same as sRGB\n\tfromBase: sRGB.fromBase,\n\ttoBase: sRGB.toBase,\n});\n","import { isNone, skipNone } from \"./util.js\";\nimport defaults from \"./defaults.js\";\nimport to from \"./to.js\";\nimport serialize from \"./serialize.js\";\nimport clone from \"./clone.js\";\nimport getColor from \"./getColor.js\";\nimport REC2020 from \"./spaces/rec2020.js\";\nimport P3 from \"./spaces/p3.js\";\nimport Lab from \"./spaces/lab.js\";\nimport sRGB from \"./spaces/srgb.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").Display} Display */\n/** @typedef {import(\"./ColorSpace.js\").default} ColorSpace */\n\n// Default space for CSS output. Code in Color.js makes this wider if there's a DOM available\ndefaults.display_space = sRGB;\n\nlet supportsNone;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n\t// Find widest supported color space for CSS\n\tfor (let space of [Lab, REC2020, P3]) {\n\t\tlet coords = space.getMinCoords();\n\t\tlet color = { space, coords, alpha: 1 };\n\t\tlet str = serialize(color);\n\n\t\tif (CSS.supports(\"color\", str)) {\n\t\t\tdefaults.display_space = space;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * Returns a serialization of the color that can actually be displayed in the browser.\n * If the default serialization can be displayed, it is returned.\n * Otherwise, the color is converted to Lab, REC2020, or P3, whichever is the widest supported.\n * In Node.js, this is basically equivalent to `serialize()` but returns a `String` object instead.\n * @param {ColorTypes} color\n * @param {{ space?: string | ColorSpace | undefined } & Record<string, any>} param1\n * Options to be passed to `serialize()`\n * @returns {Display} String object containing the serialized color\n * with a color property containing the converted color (or the original, if no conversion was necessary)\n */\nexport default function display (color, { space = defaults.display_space, ...options } = {}) {\n\tcolor = getColor(color);\n\n\tlet ret = /** @type {Display} */ (serialize(color, options));\n\n\tif (\n\t\ttypeof CSS === \"undefined\" ||\n\t\tCSS.supports(\"color\", /** @type {string} */ (ret)) ||\n\t\t!defaults.display_space\n\t) {\n\t\tret = /** @type {Display} */ (new String(ret));\n\t\tret.color = /** @type {PlainColorObject} */ (color);\n\t}\n\telse {\n\t\t// If we're here, what we were about to output is not supported\n\t\tlet fallbackColor = /** @type {PlainColorObject} */ (color);\n\n\t\t// First, check if the culprit is none values\n\t\tlet hasNone = color.coords.some(isNone) || isNone(color.alpha);\n\n\t\tif (hasNone) {\n\t\t\t// Does the browser support none values?\n\t\t\tif (!(supportsNone ??= CSS.supports(\"color\", \"hsl(none 50% 50%)\"))) {\n\t\t\t\t// Nope, try again without none\n\t\t\t\tfallbackColor = clone(/** @type {PlainColorObject} */ (color));\n\t\t\t\tfallbackColor.coords = /** @type {[number, number, number]} */ (\n\t\t\t\t\tfallbackColor.coords.map(skipNone)\n\t\t\t\t);\n\t\t\t\tfallbackColor.alpha = skipNone(fallbackColor.alpha);\n\n\t\t\t\t// @ts-expect-error This is set to the correct type later\n\t\t\t\tret = serialize(fallbackColor, options);\n\n\t\t\t\tif (CSS.supports(\"color\", /** @type {string} */ (ret))) {\n\t\t\t\t\t// We're done, now it's supported\n\t\t\t\t\tret = /** @type {Display} */ (new String(ret));\n\t\t\t\t\tret.color = fallbackColor;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're here, the color function is not supported\n\t\t// Fall back to fallback space\n\t\tfallbackColor = to(fallbackColor, space);\n\t\tret = /** @type {Display} */ (new String(serialize(fallbackColor, options)));\n\t\tret.color = fallbackColor;\n\t}\n\n\treturn ret;\n}\n","import getColor from \"./getColor.js\";\nimport ColorSpace from \"./ColorSpace.js\";\nimport to from \"./to.js\";\nimport { adjust } from \"./angles.js\";\nimport { isNone } from \"./util.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").DeltasReturn} DeltasReturn */\n\n/**\n * Get color differences per-component, on any color space\n * @param {ColorTypes} c1\n * @param {ColorTypes} c2\n * @param {object} options\n * @param {string | ColorSpace} [options.space=c1.space] - The color space to use for the delta calculation. Defaults to the color space of the first color.\n * @param {Parameters<typeof adjust>[0]} [options.hue=\"shorter\"] - How to handle hue differences. Same as hue interpolation option.\n * @returns {DeltasReturn}\n */\nexport default function deltas (c1, c2, { space, hue = \"shorter\" } = {}) {\n\tc1 = getColor(c1);\n\tspace ||= c1.space;\n\tspace = ColorSpace.get(space);\n\tlet spaceCoords = Object.values(space.coords);\n\n\t[c1, c2] = [c1, c2].map(c => to(c, space));\n\tlet [coords1, coords2] = [c1, c2].map(c => c.coords);\n\n\tlet coords = /** @type {[number, number, number]} */ (\n\t\tcoords1.map((coord1, i) => {\n\t\t\tlet coordMeta = spaceCoords[i];\n\t\t\tlet coord2 = coords2[i];\n\n\t\t\tif (coordMeta.type === \"angle\") {\n\t\t\t\t[coord1, coord2] = adjust(hue, [coord1, coord2]);\n\t\t\t}\n\n\t\t\treturn subtractCoords(coord1, coord2);\n\t\t})\n\t);\n\n\tlet alpha = subtractCoords(c1.alpha, c2.alpha);\n\n\treturn { space: /** @type {ColorSpace} */ (space), coords, alpha };\n}\n\nfunction subtractCoords (c1, c2) {\n\tif (isNone(c1) || isNone(c2)) {\n\t\treturn c1 === c2 ? null : 0;\n\t}\n\n\treturn c1 - c2;\n}\n","import getColor from \"./getColor.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n\n/**\n * @param {ColorTypes} color1\n * @param {ColorTypes} color2\n * @returns {boolean}\n */\nexport default function equals (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\treturn (\n\t\tcolor1.space === color2.space &&\n\t\tcolor1.alpha === color2.alpha &&\n\t\tcolor1.coords.every((c, i) => c === color2.coords[i])\n\t);\n}\n","/**\n * Relative luminance\n */\nimport get from \"./get.js\";\nimport set from \"./set.js\";\nimport xyz_d65 from \"./spaces/xyz-d65.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n\n/**\n *\n * @param {ColorTypes} color\n * @returns {number}\n */\nexport function getLuminance (color) {\n\t// Assume getColor() is called on color in get()\n\treturn get(color, [xyz_d65, \"y\"]);\n}\n\n/**\n * @param {ColorTypes} color\n * @param {number | ((coord: number) => number)} value\n */\nexport function setLuminance (color, value) {\n\t// Assume getColor() is called on color in set()\n\tset(color, [xyz_d65, \"y\"], value);\n}\n\n/**\n * @param {typeof import(\"./color.js\").default} Color\n */\nexport function register (Color) {\n\tObject.defineProperty(Color.prototype, \"luminance\", {\n\t\tget () {\n\t\t\treturn getLuminance(this);\n\t\t},\n\t\tset (value) {\n\t\t\tsetLuminance(this, value);\n\t\t},\n\t});\n}\n","// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\n// Simple contrast, with fixed 5% viewing flare contribution\n// Symmetric, does not matter which is foreground and which is background\n\nimport getColor from \"../getColor.js\";\nimport { getLuminance } from \"../luminance.js\";\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color1\n * @param {import(\"../types.js\").ColorTypes} color2\n * @returns {number}\n */\nexport default function contrastWCAG21 (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn (Y1 + 0.05) / (Y2 + 0.05);\n}\n","// APCA 0.0.98G\n// https://github.com/Myndex/apca-w3\n// see also https://github.com/w3c/silver/issues/643\n\nimport getColor from \"../getColor.js\";\nimport to from \"../to.js\";\nimport { isNone } from \"../util.js\";\n\n// exponents\nconst normBG = 0.56;\nconst normTXT = 0.57;\nconst revTXT = 0.62;\nconst revBG = 0.65;\n\n// clamps\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst loClip = 0.1;\nconst deltaYmin = 0.0005;\n\n// scalers\n// see https://github.com/w3c/silver/issues/645\nconst scaleBoW = 1.14;\nconst loBoWoffset = 0.027;\nconst scaleWoB = 1.14;\nconst loWoBoffset = 0.027;\n\nfunction fclamp (Y) {\n\tif (Y >= blkThrs) {\n\t\treturn Y;\n\t}\n\treturn Y + (blkThrs - Y) ** blkClmp;\n}\n\nfunction linearize (val) {\n\tlet sign = val < 0 ? -1 : 1;\n\tlet abs = Math.abs(val);\n\treturn sign * Math.pow(abs, 2.4);\n}\n\n/**\n * Not symmetric, requires a foreground (text) color, and a background color\n * @param {import(\"../types.js\").ColorTypes} background\n * @param {import(\"../types.js\").ColorTypes} foreground\n * @returns {number}\n */\nexport default function contrastAPCA (background, foreground) {\n\tforeground = getColor(foreground);\n\tbackground = getColor(background);\n\n\tlet S;\n\tlet C;\n\tlet Sapc;\n\n\t// Myndex as-published, assumes sRGB inputs\n\tlet R, G, B;\n\n\tforeground = to(foreground, \"srgb\");\n\t// Should these be clamped to in-gamut values?\n\n\t// Calculates \"screen luminance\" with non-standard simple gamma EOTF\n\t// weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\n\t[R, G, B] = foreground.coords.map(c => {\n\t\treturn isNone(c) ? 0 : c;\n\t});\n\tlet lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.072175;\n\n\tbackground = to(background, \"srgb\");\n\t[R, G, B] = background.coords.map(c => {\n\t\treturn isNone(c) ? 0 : c;\n\t});\n\tlet lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.072175;\n\n\t// toe clamping of very dark values to account for flare\n\tlet Ytxt = fclamp(lumTxt);\n\tlet Ybg = fclamp(lumBg);\n\n\t// are we \"Black on White\" (dark on light), or light on dark?\n\tlet BoW = Ybg > Ytxt;\n\n\t// why is this a delta, when Y is not perceptually uniform?\n\t// Answer: it is a noise gate, see\n\t// https://github.com/LeaVerou/color.js/issues/208\n\tif (Math.abs(Ybg - Ytxt) < deltaYmin) {\n\t\tC = 0;\n\t}\n\telse {\n\t\tif (BoW) {\n\t\t\t// dark text on light background\n\t\t\tS = Ybg ** normBG - Ytxt ** normTXT;\n\t\t\tC = S * scaleBoW;\n\t\t}\n\t\telse {\n\t\t\t// light text on dark background\n\t\t\tS = Ybg ** revBG - Ytxt ** revTXT;\n\t\t\tC = S * scaleWoB;\n\t\t}\n\t}\n\tif (Math.abs(C) < loClip) {\n\t\tSapc = 0;\n\t}\n\telse if (C > 0) {\n\t\t// not clear whether Woffset is loBoWoffset or loWoBoffset\n\t\t// but they have the same value\n\t\tSapc = C - loBoWoffset;\n\t}\n\telse {\n\t\tSapc = C + loBoWoffset;\n\t}\n\n\treturn Sapc * 100;\n}\n","// Michelson  luminance contrast\n// the relation between the spread and the sum of the two luminances\n// Symmetric, does not matter which is foreground and which is background\n// No black level compensation for flare.\n\nimport getColor from \"../getColor.js\";\nimport { getLuminance } from \"../luminance.js\";\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color1\n * @param {import(\"../types.js\").ColorTypes} color2\n * @returns {number}\n */\nexport default function contrastMichelson (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\tlet denom = Y1 + Y2;\n\treturn denom === 0 ? 0 : (Y1 - Y2) / denom;\n}\n","// Weber luminance contrast\n// The difference between the two luminances divided by the lower luminance\n// Symmetric, does not matter which is foreground and which is background\n// No black level compensation for flare.\n\nimport getColor from \"../getColor.js\";\nimport { getLuminance } from \"../luminance.js\";\n\n// the darkest sRGB color above black is #000001 and this produces\n// a plain Weber contrast of ~45647.\n// So, setting the divide-by-zero result at 50000 is a reasonable\n// max clamp for the plain Weber\nconst max = 50000;\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color1\n * @param {import(\"../types.js\").ColorTypes} color2\n * @returns {number}\n */\nexport default function contrastWeber (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn Y2 === 0 ? max : (Y1 - Y2) / Y2;\n}\n","// CIE Lightness difference, as used by Google Material Design\n// Google HCT Tone is the same as CIE Lightness\n// https://material.io/blog/science-of-color-design\n\nimport getColor from \"../getColor.js\";\nimport get from \"../get.js\";\nimport lab from \"../spaces/lab.js\";\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color1\n * @param {import(\"../types.js\").ColorTypes} color2\n * @returns {number}\n */\nexport default function contrastLstar (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet L1 = get(color1, [lab, \"l\"]);\n\tlet L2 = get(color2, [lab, \"l\"]);\n\n\treturn Math.abs(L1 - L2);\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport { WHITES } from \"../adapt.js\";\nimport xyz_d65 from \"./xyz-d65.js\";\n\n// κ * ε  = 2^3 = 8\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst ε3 = 24 / 116;\nconst κ = 24389 / 27; // 29^3/3^3\n\nlet white = WHITES.D65;\n\nexport default new ColorSpace({\n\tid: \"lab-d65\",\n\tname: \"Lab D65\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125],\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125],\n\t\t},\n\t},\n\n\t// Assuming XYZ is relative to D65, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite,\n\n\tbase: xyz_d65,\n\t// Convert D65-adapted XYZ to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => (value > ε ? Math.cbrt(value) : (κ * value + 16) / 116));\n\n\t\treturn [\n\t\t\t116 * f[1] - 16, // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2]), // b\n\t\t];\n\t},\n\t// Convert Lab to D65-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16) / 116;\n\t\tf[0] = Lab[1] / 500 + f[1];\n\t\tf[2] = f[1] - Lab[2] / 200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0] > ε3 ? Math.pow(f[0], 3) : (116 * f[0] - 16) / κ,\n\t\t\tLab[0] > 8 ? Math.pow((Lab[0] + 16) / 116, 3) : Lab[0] / κ,\n\t\t\tf[2] > ε3 ? Math.pow(f[2], 3) : (116 * f[2] - 16) / κ,\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\n\tformats: {\n\t\t\"lab-d65\": {\n\t\t\tcoords: [\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","// Delta Phi Star perceptual lightness contrast\n// See https://github.com/Myndex/deltaphistar\n// The (difference between two Lstars each raised to phi) raised to (1/phi)\n// Symmetric, does not matter which is foreground and which is background\n\nimport getColor from \"../getColor.js\";\nimport get from \"../get.js\";\nimport lab_d65 from \"../spaces/lab-d65.js\";\n\nconst phi = Math.pow(5, 0.5) * 0.5 + 0.5; // Math.phi can be used if Math.js\n\n/**\n * @param {import(\"../types.js\").ColorTypes} color1\n * @param {import(\"../types.js\").ColorTypes} color2\n * @returns {number}\n */\nexport default function contrastDeltaPhi (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Lstr1 = get(color1, [lab_d65, \"l\"]);\n\tlet Lstr2 = get(color2, [lab_d65, \"l\"]);\n\n\tlet deltaPhiStar = Math.abs(Math.pow(Lstr1, phi) - Math.pow(Lstr2, phi));\n\n\tlet contrast = Math.pow(deltaPhiStar, 1 / phi) * Math.SQRT2 - 40;\n\n\treturn contrast < 7.5 ? 0.0 : contrast;\n}\n","export { default as contrastWCAG21 } from \"./WCAG21.js\";\nexport { default as contrastAPCA } from \"./APCA.js\";\nexport { default as contrastMichelson } from \"./Michelson.js\";\nexport { default as contrastWeber } from \"./Weber.js\";\nexport { default as contrastLstar } from \"./Lstar.js\";\nexport { default as contrastDeltaPhi } from \"./deltaPhi.js\";\n\n/** @typedef {keyof typeof import(\"./index.js\") extends `contrast${infer Alg}` ? Alg : string} Algorithms */\n","import getColor from \"./getColor.js\";\n// import defaults from \"./defaults.js\";\nimport { isString } from \"./util.js\";\nimport * as contrastAlgorithms from \"./contrast/index.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").Algorithms} Algorithms */\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n\n/**\n *\n * @param {ColorTypes} background\n * @param {ColorTypes} foreground\n * @param {Algorithms | ({ algorithm: Algorithms } & Record<string, any>)} o\n * Algorithm to use as well as any other options to pass to the contrast function\n * @returns {number}\n * @throws {TypeError} Unknown or unspecified algorithm\n */\nexport default function contrast (background, foreground, o) {\n\tif (isString(o)) {\n\t\to = { algorithm: o };\n\t}\n\n\tlet { algorithm, ...rest } = o || {};\n\n\tif (!algorithm) {\n\t\tlet algorithms = Object.keys(contrastAlgorithms)\n\t\t\t.map(a => a.replace(/^contrast/, \"\"))\n\t\t\t.join(\", \");\n\t\tthrow new TypeError(\n\t\t\t`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`,\n\t\t);\n\t}\n\n\tbackground = getColor(background);\n\tforeground = getColor(foreground);\n\n\tfor (let a in contrastAlgorithms) {\n\t\tif (\"contrast\" + algorithm.toLowerCase() === a.toLowerCase()) {\n\t\t\treturn contrastAlgorithms[a](background, foreground, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown contrast algorithm: ${algorithm}`);\n}\n","import xyz_d65 from \"./spaces/xyz-d65.js\";\nimport getAll from \"./getAll.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./color.js\").default} Color */\n/** @typedef {import(\"./color.js\").ColorTypes} ColorTypes */\n\n// Chromaticity coordinates\n/**\n * @param {ColorTypes} color\n * @returns {[number, number]}\n */\nexport function uv (color) {\n\t// Assumes getAll() calls getColor() on color\n\tlet [X, Y, Z] = getAll(color, xyz_d65);\n\tlet denom = X + 15 * Y + 3 * Z;\n\treturn [(4 * X) / denom, (9 * Y) / denom];\n}\n\n/**\n * @param {ColorTypes} color\n * @returns {[number, number]}\n */\nexport function xy (color) {\n\t// Assumes getAll() calls getColor() on color\n\tlet [X, Y, Z] = getAll(color, xyz_d65);\n\tlet sum = X + Y + Z;\n\treturn [X / sum, Y / sum];\n}\n\n/**\n * @param {typeof import(\"./color.js\").default} Color\n */\nexport function register (Color) {\n\t// no setters, as lightness information is lost\n\t// when converting color to chromaticity\n\tObject.defineProperty(Color.prototype, \"uv\", {\n\t\tget () {\n\t\t\treturn uv(this);\n\t\t},\n\t});\n\n\tObject.defineProperty(Color.prototype, \"xy\", {\n\t\tget () {\n\t\t\treturn xy(this);\n\t\t},\n\t});\n}\n","import defaults from \"./defaults.js\";\nimport { isString } from \"./util.js\";\nimport deltaEMethods from \"./deltaE/index.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").Methods} Methods */\n\n/**\n *\n * @param {ColorTypes} c1\n * @param {ColorTypes} c2\n * @param {Methods | ({ method?: Methods | undefined } & Record<string, any>)} [o]\n * deltaE method to use as well as any other options to pass to the deltaE function\n * @returns {number}\n * @throws {TypeError} Unknown or unspecified method\n */\nexport default function deltaE (c1, c2, o = {}) {\n\tif (isString(o)) {\n\t\to = { method: o };\n\t}\n\n\tlet { method = defaults.deltaE, ...rest } = o;\n\n\tfor (let m in deltaEMethods) {\n\t\tif (\"deltae\" + method.toLowerCase() === m.toLowerCase()) {\n\t\t\treturn deltaEMethods[m](c1, c2, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown deltaE method: ${method}`);\n}\n","import ColorSpace from \"./ColorSpace.js\";\nimport set from \"./set.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").Ref} Ref */\n\n/**\n * @param {ColorTypes} color\n * @param {number} amount\n * @returns {PlainColorObject}\n */\nexport function lighten (color, amount = 0.25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet /** @type {Ref} */ lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 + amount));\n}\n\n/**\n * @param {ColorTypes} color\n * @param {number} amount\n * @returns {PlainColorObject}\n */\nexport function darken (color, amount = 0.25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet /** @type {Ref} */ lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 - amount));\n}\n\n/** @type {\"color\"} */\nlighten.returns = \"color\";\n\n/** @type {\"color\"} */\ndarken.returns = \"color\";\n","/**\n * Functions related to color interpolation\n */\nimport ColorSpace from \"./ColorSpace.js\";\nimport { type, interpolate, isNone } from \"./util.js\";\nimport getColor from \"./getColor.js\";\nimport clone from \"./clone.js\";\nimport to from \"./to.js\";\nimport toGamut from \"./toGamut.js\";\nimport get from \"./get.js\";\nimport set from \"./set.js\";\nimport defaults from \"./defaults.js\";\nimport * as angles from \"./angles.js\";\nimport deltaE from \"./deltaE.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").ColorTypes} ColorTypes */\n/** @typedef {import(\"./types.js\").MixOptions} MixOptions */\n/** @typedef {import(\"./types.js\").PlainColorObject} PlainColorObject */\n/** @typedef {import(\"./types.js\").Range} Range */\n/** @typedef {import(\"./types.js\").RangeOptions} RangeOptions */\n/** @typedef {import(\"./types.js\").StepsOptions} StepsOptions */\n/** @typedef {import(\"./types.js\").Ref} Ref  */\n\n/**\n * Return an intermediate color between two colors\n * @overload\n * @param {ColorTypes} c1\n * @param {ColorTypes} c2\n * @param {MixOptions} [options]\n * @returns {PlainColorObject}\n */\n/**\n * @overload\n * @param {ColorTypes} c1\n * @param {ColorTypes} c2\n * @param {number} [p=0.5]\n * @param {MixOptions} [options]\n * @returns {PlainColorObject}\n */\nexport function mix (c1, c2, p, o = {}) {\n\t[c1, c2] = [getColor(c1), getColor(c2)];\n\n\tif (type(p) === \"object\") {\n\t\t[p, o] = [0.5, p];\n\t}\n\n\tlet r = range(c1, c2, o);\n\treturn r(p ?? 0.5); // why not give p a default value like we do for options? Overloading doesn't work, and TS complains\n}\n\n/**\n * Get an array of discrete steps\n * @overload\n * @param {ColorTypes} c1\n * @param {ColorTypes} c2\n * @param {StepsOptions} [options]\n * @returns {PlainColorObject[]}\n */\n/**\n * @overload\n * @param {Range} range\n * @param {StepsOptions} [options]\n * @returns {PlainColorObject[]}\n */\nexport function steps (c1, c2, options = {}) {\n\tlet colorRange;\n\n\tif (isRange(c1)) {\n\t\t// Tweaking existing range\n\t\t[colorRange, options] = [c1, c2];\n\t\t[c1, c2] = colorRange.rangeArgs.colors;\n\t}\n\n\tlet { maxDeltaE, deltaEMethod, steps = 2, maxSteps = 1000, ...rangeOptions } = options;\n\n\tif (!colorRange) {\n\t\t[c1, c2] = [getColor(c1), getColor(c2)];\n\t\tcolorRange = range(c1, c2, rangeOptions);\n\t}\n\n\tlet totalDelta = deltaE(c1, c2);\n\tlet actualSteps =\n\t\tmaxDeltaE > 0 ? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\n\tlet ret = [];\n\n\tif (maxSteps !== undefined) {\n\t\tactualSteps = Math.min(actualSteps, maxSteps);\n\t}\n\n\tif (actualSteps === 1) {\n\t\tret = [{ p: 0.5, color: colorRange(0.5) }];\n\t}\n\telse {\n\t\tlet step = 1 / (actualSteps - 1);\n\t\tret = Array.from({ length: actualSteps }, (_, i) => {\n\t\t\tlet p = i * step;\n\t\t\treturn { p, color: colorRange(p) };\n\t\t});\n\t}\n\n\tif (maxDeltaE > 0) {\n\t\t// Iterate over all stops and find max deltaE\n\t\tlet maxDelta = ret.reduce((acc, cur, i) => {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet ΔΕ = deltaE(cur.color, ret[i - 1].color, deltaEMethod);\n\t\t\treturn Math.max(acc, ΔΕ);\n\t\t}, 0);\n\n\t\twhile (maxDelta > maxDeltaE) {\n\t\t\t// Insert intermediate stops and measure maxDelta again\n\t\t\t// We need to do this for all pairs, otherwise the midpoint shifts\n\t\t\tmaxDelta = 0;\n\n\t\t\tfor (let i = 1; i < ret.length && ret.length < maxSteps; i++) {\n\t\t\t\tlet prev = ret[i - 1];\n\t\t\t\tlet cur = ret[i];\n\n\t\t\t\tlet p = (cur.p + prev.p) / 2;\n\t\t\t\tlet color = colorRange(p);\n\t\t\t\tmaxDelta = Math.max(maxDelta, deltaE(color, prev.color), deltaE(color, cur.color));\n\t\t\t\tret.splice(i, 0, { p, color: colorRange(p) });\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\n\tret = ret.map(a => a.color);\n\n\treturn ret;\n}\n\n/**\n * Creates a function that accepts a number and returns a color.\n * For numbers in the range 0 to 1, the function interpolates;\n * for numbers outside that range, the function extrapolates\n * (and thus may not return the results you expect)\n * @overload\n * @param {Range} range\n * @param {RangeOptions} [options]\n * @returns {Range}\n */\n/**\n * @overload\n * @param {ColorTypes} color1\n * @param {ColorTypes} color2\n * @param {RangeOptions & Record<string, any>} [options]\n * @returns {Range}\n */\nexport function range (color1, color2, options = {}) {\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\tlet [r, options] = [color1, color2];\n\n\t\treturn range(...r.rangeArgs.colors, { ...r.rangeArgs.options, ...options });\n\t}\n\n\tlet { space, outputSpace, progression, premultiplied } = options;\n\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\t// Make sure we're working on copies of these colors\n\tcolor1 = clone(color1);\n\tcolor2 = clone(color2);\n\n\tlet rangeArgs = { colors: [color1, color2], options };\n\n\tif (space) {\n\t\tspace = ColorSpace.get(space);\n\t}\n\telse {\n\t\tspace = ColorSpace.registry[defaults.interpolationSpace] || color1.space;\n\t}\n\n\toutputSpace = outputSpace ? ColorSpace.get(outputSpace) : space;\n\n\tcolor1 = to(color1, space);\n\tcolor2 = to(color2, space);\n\n\t// Gamut map to avoid areas of flat color\n\tcolor1 = toGamut(color1);\n\tcolor2 = toGamut(color2);\n\n\t// Handle hue interpolation\n\t// See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\n\tif (space.coords.h && space.coords.h.type === \"angle\") {\n\t\tlet arc = (options.hue = options.hue || \"shorter\");\n\n\t\tlet /** @type {Ref} */ hue = [space, \"h\"];\n\t\tlet [θ1, θ2] = [get(color1, hue), get(color2, hue)];\n\t\t// Undefined hues must be evaluated before hue fix-up to properly\n\t\t// calculate hue arcs between undefined and defined hues.\n\t\t// See https://github.com/w3c/csswg-drafts/issues/9436#issuecomment-1746957545\n\t\tif (isNone(θ1) && !isNone(θ2)) {\n\t\t\tθ1 = θ2;\n\t\t}\n\t\telse if (isNone(θ2) && !isNone(θ1)) {\n\t\t\tθ2 = θ1;\n\t\t}\n\t\t[θ1, θ2] = angles.adjust(arc, [θ1, θ2]);\n\t\tset(color1, hue, θ1);\n\t\tset(color2, hue, θ2);\n\t}\n\n\tif (premultiplied) {\n\t\t// not coping with polar spaces yet\n\t\tcolor1.coords = /** @type {[number, number, number]} */ (\n\t\t\tcolor1.coords.map(c => c * color1.alpha)\n\t\t);\n\t\tcolor2.coords = /** @type {[number, number, number]} */ (\n\t\t\tcolor2.coords.map(c => c * color2.alpha)\n\t\t);\n\t}\n\n\treturn Object.assign(\n\t\tp => {\n\t\t\tp = progression ? progression(p) : p;\n\t\t\tlet coords = color1.coords.map((start, i) => {\n\t\t\t\tlet end = color2.coords[i];\n\t\t\t\treturn interpolate(start, end, p);\n\t\t\t});\n\n\t\t\tlet alpha = interpolate(color1.alpha, color2.alpha, p);\n\t\t\tlet ret = { space, coords, alpha };\n\n\t\t\tif (premultiplied) {\n\t\t\t\t// undo premultiplication\n\t\t\t\tret.coords = ret.coords.map(c => c / alpha);\n\t\t\t}\n\n\t\t\tif (outputSpace !== space) {\n\t\t\t\tret = to(ret, outputSpace);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t},\n\t\t{\n\t\t\trangeArgs,\n\t\t},\n\t);\n}\n\n/**\n * @param {any} val\n * @returns {val is Range}\n */\nexport function isRange (val) {\n\treturn type(val) === \"function\" && !!val.rangeArgs;\n}\n\ndefaults.interpolationSpace = \"lab\";\n\n/**\n * @param {typeof import(\"./color.js\").default} Color\n */\nexport function register (Color) {\n\tColor.defineFunction(\"mix\", mix, { returns: \"color\" });\n\tColor.defineFunction(\"range\", range, { returns: \"function<color>\" });\n\tColor.defineFunction(\"steps\", steps, { returns: \"array<color>\" });\n}\n","import ColorSpace from \"../ColorSpace.js\";\nimport sRGB from \"./srgb.js\";\n\nexport default new ColorSpace({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: sRGB,\n\n\t// Adapted from https://drafts.csswg.org/css-color-4/better-rgbToHsl.js\n\tfromBase: rgb => {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, l] = [null, 0, (min + max) / 2];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\ts = l === 0 || l === 1 ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r:\n\t\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase g:\n\t\t\t\t\th = (b - r) / d + 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase b:\n\t\t\t\t\th = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\t// Very out of gamut colors can produce negative saturation\n\t\t// If so, just rotate the hue by 180 and use a positive saturation\n\t\t// see https://github.com/w3c/csswg-drafts/issues/9222\n\t\tif (s < 0) {\n\t\t\th += 180;\n\t\t\ts = Math.abs(s);\n\t\t}\n\n\t\tif (h >= 360) {\n\t\t\th -= 360;\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t},\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\ttoBase: hsl => {\n\t\tlet [h, s, l] = hsl;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tfunction f (n) {\n\t\t\tlet k = (n + h / 30) % 12;\n\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t}\n\n\t\treturn [f(0), f(8), f(4)];\n\t},\n\n\tformats: {\n\t\thsl: {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t\thsla: {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t\tcommas: true,\n\t\t\talpha: true,\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport sRGB from \"./srgb.js\";\n\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nexport default new ColorSpace({\n\tid: \"hsv\",\n\tname: \"HSV\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tv: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Value\",\n\t\t},\n\t},\n\n\tbase: sRGB,\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Formal_derivation\n\tfromBase (rgb) {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, v] = [null, 0, max];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\tswitch (max) {\n\t\t\t\tcase r:\n\t\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase g:\n\t\t\t\t\th = (b - r) / d + 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase b:\n\t\t\t\t\th = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\tif (v) {\n\t\t\ts = d / v;\n\t\t}\n\n\t\tif (h >= 360) {\n\t\t\th -= 360;\n\t\t}\n\n\t\treturn [h, s * 100, v * 100];\n\t},\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative\n\ttoBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tv /= 100;\n\n\t\tfunction f (n) {\n\t\t\tlet k = (n + h / 60) % 6;\n\t\t\treturn v - v * s * Math.max(0, Math.min(k, 4 - k, 1));\n\t\t}\n\n\t\treturn [f(5), f(3), f(1)];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--hsv\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport HSV from \"./hsv.js\";\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nexport default new ColorSpace({\n\tid: \"hwb\",\n\tname: \"HWB\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\tw: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Whiteness\",\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Blackness\",\n\t\t},\n\t},\n\n\tbase: HSV,\n\tfromBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\treturn [h, (v * (100 - s)) / 100, 100 - v];\n\t},\n\ttoBase (hwb) {\n\t\tlet [h, w, b] = hwb;\n\n\t\t// Now convert percentages to [0..1]\n\t\tw /= 100;\n\t\tb /= 100;\n\n\t\t// Achromatic check (white plus black >= 1)\n\t\tlet sum = w + b;\n\t\tif (sum >= 1) {\n\t\t\tlet gray = w / sum;\n\t\t\treturn [h, 0, gray * 100];\n\t\t}\n\n\t\tlet v = 1 - b;\n\t\tlet s = v === 0 ? 0 : 1 - w / v;\n\t\treturn [h, s * 100, v * 100];\n\t},\n\n\tformats: {\n\t\thwb: {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// convert an array of linear-light a98-rgb values to CIE XYZ\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// has greater numerical precision than section 4.3.5.3 of\n// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n// but the values below were calculated from first principles\n// from the chromaticity coordinates of R G B W\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[ 0.5766690429101305,   0.1855582379065463,   0.1882286462349947  ],\n\t[ 0.29734497525053605,  0.6273635662554661,   0.07529145849399788 ],\n\t[ 0.02703136138641234,  0.07068885253582723,  0.9913375368376388  ],\n];\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst fromXYZ_M = [\n\t[  2.0415879038107465,    -0.5650069742788596,   -0.34473135077832956 ],\n\t[ -0.9692436362808795,     1.8759675015077202,    0.04155505740717557 ],\n\t[  0.013444280632031142,  -0.11836239223101838,   1.0151749943912054  ],\n];\n\nexport default new RGBColorSpace({\n\tid: \"a98rgb-linear\",\n\tcssId: \"--a98-rgb-linear\",\n\tname: \"Linear Adobe® 98 RGB compatible\",\n\twhite: \"D65\",\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport A98Linear from \"./a98rgb-linear.js\";\n\nexport default new RGBColorSpace({\n\tid: \"a98rgb\",\n\tcssId: \"a98-rgb\",\n\tname: \"Adobe® 98 RGB compatible\",\n\tbase: A98Linear,\n\ttoBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 563 / 256) * Math.sign(val)),\n\tfromBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 256 / 563) * Math.sign(val)),\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport XYZ_D50 from \"./xyz-d50.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// convert an array of  prophoto-rgb values to CIE XYZ\n// using  D50 (so no chromatic adaptation needed afterwards)\n// matrix cannot be expressed in rational form, but is calculated to 64 bit accuracy\n// see https://github.com/w3c/csswg-drafts/issues/7675\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[ 0.79776664490064230,  0.13518129740053308,  0.03134773412839220 ],\n\t[ 0.28807482881940130,  0.71183523424187300,  0.00008993693872564 ],\n\t[ 0.00000000000000000,  0.00000000000000000,  0.82510460251046020 ],\n];\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst fromXYZ_M = [\n\t[  1.34578688164715830, -0.25557208737979464, -0.05110186497554526 ],\n\t[ -0.54463070512490190,  1.50824774284514680,  0.02052744743642139 ],\n\t[  0.00000000000000000,  0.00000000000000000,  1.21196754563894520 ],\n];\n\nexport default new RGBColorSpace({\n\tid: \"prophoto-linear\",\n\tcssId: \"--prophoto-rgb-linear\",\n\tname: \"Linear ProPhoto\",\n\twhite: \"D50\",\n\tbase: XYZ_D50,\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport ProPhotoLinear from \"./prophoto-linear.js\";\n\nconst Et = 1 / 512;\nconst Et2 = 16 / 512;\n\nexport default new RGBColorSpace({\n\tid: \"prophoto\",\n\tcssId: \"prophoto-rgb\",\n\tname: \"ProPhoto\",\n\tbase: ProPhotoLinear,\n\ttoBase (RGB) {\n\t\t// Transfer curve is gamma 1.8 with a small linear portion\n\t\treturn RGB.map(v => {\n\t\t\tlet sign = v < 0 ? -1 : 1;\n\t\t\tlet abs = v * sign;\n\n\t\t\tif (abs < Et2) {\n\t\t\t\treturn v / 16;\n\t\t\t}\n\n\t\t\treturn sign * abs ** 1.8;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(v => {\n\t\t\tlet sign = v < 0 ? -1 : 1;\n\t\t\tlet abs = v * sign;\n\n\t\t\tif (abs >= Et) {\n\t\t\t\treturn sign * abs ** (1 / 1.8);\n\t\t\t}\n\n\t\t\treturn 16 * v;\n\t\t});\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport REC2020Linear from \"./rec2020-linear.js\";\n// import sRGB from \"./srgb.js\";\n\nconst α = 1.09929682680944;\nconst β = 0.018053968510807;\n\nexport default new RGBColorSpace({\n\tid: \"--rec2020-oetf\",\n\tname: \"REC.2020_Scene_Referred\",\n\tbase: REC2020Linear,\n\treferred: \"scene\",\n\t// Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n\ttoBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs < β * 4.5) {\n\t\t\t\treturn val / 4.5;\n\t\t\t}\n\n\t\t\treturn sign * Math.pow((abs + α - 1) / α, 1 / 0.45);\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tlet sign = val < 0 ? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs >= β) {\n\t\t\t\treturn sign * (α * Math.pow(abs, 0.45) - (α - 1));\n\t\t\t}\n\n\t\t\treturn 4.5 * val;\n\t\t});\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport OKLab from \"./oklab.js\";\nimport lch from \"./lch.js\";\n\nexport default new ColorSpace({\n\tid: \"oklch\",\n\tname: \"OkLCh\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase: lch.fromBase,\n\ttoBase: lch.toBase,\n\n\tformats: {\n\t\toklch: {\n\t\t\tcoords: [\"<percentage> | <number>\", \"<number> | <percentage>\", \"<number> | <angle>\"],\n\t\t},\n\t},\n});\n","// Okhsl class.\n//\n// ---- License ----\n//\n// Copyright (c) 2021 Björn Ottosson\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n// of the Software, and to permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport ColorSpace from \"../ColorSpace.js\";\nimport Oklab from \"./oklab.js\";\nimport { LabtoLMS_M } from \"./oklab.js\";\nimport { spow, multiply_v3_m3x3 } from \"../util.js\";\nimport { constrain } from \"../angles.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"../types.js\").Vector3} Vector3 */\n/** @typedef {import(\"../types.js\").OKCoeff} OKCoeff */\n\nexport const tau = 2 * Math.PI;\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nexport const toLMS = [\n\t[0.4122214694707629, 0.5363325372617349, 0.0514459932675022],\n\t[0.2119034958178251, 0.6806995506452344, 0.1073969535369405],\n\t[0.0883024591900564, 0.2817188391361215, 0.6299787016738222],\n];\n\n/** @type {Matrix3x3} */\n// prettier-ignore\nexport const toSRGBLinear = [\n\t[ 4.0767416360759583, -3.3077115392580629,  0.2309699031821043],\n\t[-1.2684379732850315,  2.6097573492876882, -0.3413193760026570],\n\t[-0.0041960761386756, -0.7034186179359362,  1.7076146940746117],\n];\n\n/** @type {OKCoeff} */\nexport const RGBCoeff = [\n\t// Red\n\t[\n\t\t// Limit\n\t\t[-1.8817031, -0.80936501],\n\t\t// `Kn` coefficients\n\t\t[1.19086277, 1.76576728, 0.59662641, 0.75515197, 0.56771245],\n\t],\n\t// Green\n\t[\n\t\t// Limit\n\t\t[1.8144408, -1.19445267],\n\t\t// `Kn` coefficients\n\t\t[0.73956515, -0.45954404, 0.08285427, 0.12541073, -0.14503204],\n\t],\n\t// Blue\n\t[\n\t\t// Limit\n\t\t[0.13110758, 1.81333971],\n\t\t// `Kn` coefficients\n\t\t[1.35733652, -0.00915799, -1.1513021, -0.50559606, 0.00692167],\n\t],\n];\n\nconst floatMax = Number.MAX_VALUE;\nconst K1 = 0.206;\nconst K2 = 0.03;\nconst K3 = (1.0 + K1) / (1.0 + K2);\n\nfunction vdot (a, b) {\n\t// Dot two vectors\n\n\tlet l = a.length;\n\tif (l !== b.length) {\n\t\tthrow new Error(`Vectors of size ${l} and ${b.length} are not aligned`);\n\t}\n\n\tlet s = 0.0;\n\ta.forEach((c, i) => {\n\t\ts += c * b[i];\n\t});\n\n\treturn s;\n}\n\n/**\n * Toe function for L_r\n * @param {number} x\n */\nexport function toe (x) {\n\treturn 0.5 * (K3 * x - K1 + Math.sqrt((K3 * x - K1) * (K3 * x - K1) + 4 * K2 * K3 * x));\n}\n\n/**\n * Inverse toe function for L_r\n * @param {number} x\n */\nexport function toeInv (x) {\n\treturn (x ** 2 + K1 * x) / (K3 * (x + K2));\n}\n\n/**\n * @param {readonly [number, number]} cusp\n * @returns {[number, number]}\n */\nexport function toSt (cusp) {\n\t// To ST.\n\n\tlet [l, c] = cusp;\n\treturn [c / l, c / (1 - l)];\n}\n\nfunction getStMid (a, b) {\n\t// Returns a smooth approximation of the location of the cusp.\n\t//\n\t// This polynomial was created by an optimization process.\n\t// It has been designed so that S_mid < S_max and T_mid < T_max.\n\n\t// prettier-ignore\n\tlet s = 0.11516993 + 1.0 / (\n\t\t7.44778970 + 4.15901240 * b +\n\t\ta * (\n\t\t\t-2.19557347 + 1.75198401 * b +\n\t\t\ta * (\n\t\t\t\t-2.13704948 - 10.02301043 * b +\n\t\t\t\ta * (\n\t\t\t\t\t-4.24894561 + 5.38770819 * b + 4.69891013 * a\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\t// prettier-ignore\n\tlet t = 0.11239642 + 1.0 / (\n\t\t1.61320320 - 0.68124379 * b +\n\t\ta * (\n\t\t\t0.40370612 + 0.90148123 * b +\n\t\t\ta * (\n\t\t\t\t-0.27087943 + 0.61223990 * b +\n\t\t\t\ta * (\n\t\t\t\t\t0.00299215 - 0.45399568 * b - 0.14661872 * a\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\treturn [s, t];\n}\n\n/**\n * @param {Vector3} lab\n * @param {Matrix3x3} lmsToRgb\n */\nexport function oklabToLinearRGB (lab, lmsToRgb) {\n\t// Convert from Oklab to linear RGB.\n\t//\n\t// Can be any gamut as long as `lmsToRgb` is a matrix\n\t// that transform the LMS values to the linear RGB space.\n\n\tlet lms = multiply_v3_m3x3(lab, LabtoLMS_M);\n\n\tlms[0] = lms[0] ** 3;\n\tlms[1] = lms[1] ** 3;\n\tlms[2] = lms[2] ** 3;\n\n\treturn multiply_v3_m3x3(lms, lmsToRgb, lms);\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @param {Matrix3x3} lmsToRgb\n * @param {OKCoeff} okCoeff\n * @returns {[number, number]}\n * @todo Could probably make these types more specific/better-documented if desired\n */\nexport function findCusp (a, b, lmsToRgb, okCoeff) {\n\t// Finds L_cusp and C_cusp for a given hue.\n\t//\n\t// `a` and `b` must be normalized so `a^2 + b^2 == 1`.\n\n\t// First, find the maximum saturation (saturation `S = C/L`)\n\tlet sCusp = computeMaxSaturation(a, b, lmsToRgb, okCoeff);\n\n\t// Convert to linear RGB to find the first point where at least one of r, g or b >= 1:\n\tlet rgb = oklabToLinearRGB([1, sCusp * a, sCusp * b], lmsToRgb);\n\tlet lCusp = spow(1.0 / Math.max(...rgb), 1 / 3);\n\tlet cCusp = lCusp * sCusp;\n\n\treturn [lCusp, cCusp];\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @param {number} l1\n * @param {number} c1\n * @param {number} l0\n * @param {Matrix3x3} lmsToRgb\n * @param {OKCoeff} okCoeff\n * @param {[number, number]} cusp\n * @returns {Number}\n * @todo Could probably make these types more specific/better-documented if desired\n */\nexport function findGamutIntersection (a, b, l1, c1, l0, lmsToRgb, okCoeff, cusp) {\n\t// Finds intersection of the line.\n\t//\n\t// Defined by the following:\n\t//\n\t// ```\n\t// L = L0 * (1 - t) + t * L1\n\t// C = t * C1\n\t// ```\n\t//\n\t// `a` and `b` must be normalized so `a^2 + b^2 == 1`.\n\n\tlet t;\n\n\tif (cusp === undefined) {\n\t\tcusp = findCusp(a, b, lmsToRgb, okCoeff);\n\t}\n\n\t// Find the intersection for upper and lower half separately\n\tif ((l1 - l0) * cusp[1] - (cusp[0] - l0) * c1 <= 0.0) {\n\t\t// Lower half\n\t\tt = (cusp[1] * l0) / (c1 * cusp[0] + cusp[1] * (l0 - l1));\n\t}\n\telse {\n\t\t// Upper half\n\n\t\t// First intersect with triangle\n\t\tt = (cusp[1] * (l0 - 1.0)) / (c1 * (cusp[0] - 1.0) + cusp[1] * (l0 - l1));\n\n\t\t// Then one step Halley's method\n\t\tlet dl = l1 - l0;\n\t\tlet dc = c1;\n\n\t\tlet kl = vdot(LabtoLMS_M[0].slice(1), [a, b]);\n\t\tlet km = vdot(LabtoLMS_M[1].slice(1), [a, b]);\n\t\tlet ks = vdot(LabtoLMS_M[2].slice(1), [a, b]);\n\n\t\tlet ldt_ = dl + dc * kl;\n\t\tlet mdt_ = dl + dc * km;\n\t\tlet sdt_ = dl + dc * ks;\n\n\t\t// If higher accuracy is required, 2 or 3 iterations of the following block can be used:\n\t\tlet L = l0 * (1.0 - t) + t * l1;\n\t\tlet C = t * c1;\n\n\t\tlet l_ = L + C * kl;\n\t\tlet m_ = L + C * km;\n\t\tlet s_ = L + C * ks;\n\n\t\tlet l = l_ ** 3;\n\t\tlet m = m_ ** 3;\n\t\tlet s = s_ ** 3;\n\n\t\tlet ldt = 3 * ldt_ * l_ ** 2;\n\t\tlet mdt = 3 * mdt_ * m_ ** 2;\n\t\tlet sdt = 3 * sdt_ * s_ ** 2;\n\n\t\tlet ldt2 = 6 * ldt_ ** 2 * l_;\n\t\tlet mdt2 = 6 * mdt_ ** 2 * m_;\n\t\tlet sdt2 = 6 * sdt_ ** 2 * s_;\n\n\t\tlet r_ = vdot(lmsToRgb[0], [l, m, s]) - 1;\n\t\tlet r1 = vdot(lmsToRgb[0], [ldt, mdt, sdt]);\n\t\tlet r2 = vdot(lmsToRgb[0], [ldt2, mdt2, sdt2]);\n\n\t\tlet ur = r1 / (r1 * r1 - 0.5 * r_ * r2);\n\t\tlet tr = -r_ * ur;\n\n\t\tlet g_ = vdot(lmsToRgb[1], [l, m, s]) - 1;\n\t\tlet g1 = vdot(lmsToRgb[1], [ldt, mdt, sdt]);\n\t\tlet g2 = vdot(lmsToRgb[1], [ldt2, mdt2, sdt2]);\n\n\t\tlet ug = g1 / (g1 * g1 - 0.5 * g_ * g2);\n\t\tlet tg = -g_ * ug;\n\n\t\tlet b_ = vdot(lmsToRgb[2], [l, m, s]) - 1;\n\t\tlet b1 = vdot(lmsToRgb[2], [ldt, mdt, sdt]);\n\t\tlet b2 = vdot(lmsToRgb[2], [ldt2, mdt2, sdt2]);\n\n\t\tlet ub = b1 / (b1 * b1 - 0.5 * b_ * b2);\n\t\tlet tb = -b_ * ub;\n\n\t\ttr = ur >= 0.0 ? tr : floatMax;\n\t\ttg = ug >= 0.0 ? tg : floatMax;\n\t\ttb = ub >= 0.0 ? tb : floatMax;\n\n\t\tt += Math.min(tr, Math.min(tg, tb));\n\t}\n\n\treturn t;\n}\n\nfunction getCs (lab, lmsToRgb, okCoeff) {\n\t// Get Cs\n\n\tlet [l, a, b] = lab;\n\n\tlet cusp = findCusp(a, b, lmsToRgb, okCoeff);\n\n\tlet cMax = findGamutIntersection(a, b, l, 1, l, lmsToRgb, okCoeff, cusp);\n\tlet stMax = toSt(cusp);\n\n\t// Scale factor to compensate for the curved part of gamut shape:\n\tlet k = cMax / Math.min(l * stMax[0], (1 - l) * stMax[1]);\n\n\tlet stMid = getStMid(a, b);\n\n\t// Use a soft minimum function, instead of a sharp triangle shape to get a smooth value for chroma.\n\tlet ca = l * stMid[0];\n\tlet cb = (1.0 - l) * stMid[1];\n\tlet cMid = 0.9 * k * Math.sqrt(Math.sqrt(1.0 / (1.0 / ca ** 4 + 1.0 / cb ** 4)));\n\n\t// For `C_0`, the shape is independent of hue, so `ST` are constant.\n\t// Values picked to roughly be the average values of `ST`.\n\tca = l * 0.4;\n\tcb = (1.0 - l) * 0.8;\n\n\t// Use a soft minimum function, instead of a sharp triangle shape to get a smooth value for chroma.\n\tlet c0 = Math.sqrt(1.0 / (1.0 / ca ** 2 + 1.0 / cb ** 2));\n\n\treturn [c0, cMid, cMax];\n}\n\nfunction computeMaxSaturation (a, b, lmsToRgb, okCoeff) {\n\t// Finds the maximum saturation possible for a given hue that fits in RGB.\n\t//\n\t// Saturation here is defined as `S = C/L`.\n\t// `a` and `b` must be normalized so `a^2 + b^2 == 1`.\n\n\t// Max saturation will be when one of r, g or b goes below zero.\n\n\t// Select different coefficients depending on which component goes below zero first.\n\n\tlet k0, k1, k2, k3, k4, wl, wm, ws;\n\n\tif (vdot(okCoeff[0][0], [a, b]) > 1) {\n\t\t// Red component\n\t\t[k0, k1, k2, k3, k4] = okCoeff[0][1];\n\t\t[wl, wm, ws] = lmsToRgb[0];\n\t}\n\telse if (vdot(okCoeff[1][0], [a, b]) > 1) {\n\t\t// Green component\n\t\t[k0, k1, k2, k3, k4] = okCoeff[1][1];\n\t\t[wl, wm, ws] = lmsToRgb[1];\n\t}\n\telse {\n\t\t// Blue component\n\t\t[k0, k1, k2, k3, k4] = okCoeff[2][1];\n\t\t[wl, wm, ws] = lmsToRgb[2];\n\t}\n\n\t// Approximate max saturation using a polynomial:\n\tlet sat = k0 + k1 * a + k2 * b + k3 * a ** 2 + k4 * a * b;\n\n\t// Do one step Halley's method to get closer.\n\t// This gives an error less than 10e6, except for some blue hues where the `dS/dh` is close to infinite.\n\t// This should be sufficient for most applications, otherwise do two/three steps.\n\n\tlet kl = vdot(LabtoLMS_M[0].slice(1), [a, b]);\n\tlet km = vdot(LabtoLMS_M[1].slice(1), [a, b]);\n\tlet ks = vdot(LabtoLMS_M[2].slice(1), [a, b]);\n\n\tlet l_ = 1.0 + sat * kl;\n\tlet m_ = 1.0 + sat * km;\n\tlet s_ = 1.0 + sat * ks;\n\n\tlet l = l_ ** 3;\n\tlet m = m_ ** 3;\n\tlet s = s_ ** 3;\n\n\tlet lds = 3.0 * kl * l_ ** 2;\n\tlet mds = 3.0 * km * m_ ** 2;\n\tlet sds = 3.0 * ks * s_ ** 2;\n\n\tlet lds2 = 6.0 * kl ** 2 * l_;\n\tlet mds2 = 6.0 * km ** 2 * m_;\n\tlet sds2 = 6.0 * ks ** 2 * s_;\n\n\tlet f = wl * l + wm * m + ws * s;\n\tlet f1 = wl * lds + wm * mds + ws * sds;\n\tlet f2 = wl * lds2 + wm * mds2 + ws * sds2;\n\n\tsat = sat - (f * f1) / (f1 ** 2 - 0.5 * f * f2);\n\n\treturn sat;\n}\n\nfunction okhslToOklab (hsl, lmsToRgb, okCoeff) {\n\t// Convert Okhsl to Oklab.\n\n\tlet [h, s, l] = hsl;\n\tlet L = toeInv(l);\n\tlet a = null;\n\tlet b = null;\n\th = constrain(h) / 360.0;\n\n\tif (L !== 0.0 && L !== 1.0 && s !== 0) {\n\t\tlet a_ = Math.cos(tau * h);\n\t\tlet b_ = Math.sin(tau * h);\n\n\t\tlet [c0, cMid, cMax] = getCs([L, a_, b_], lmsToRgb, okCoeff);\n\n\t\t// Interpolate the three values for C so that:\n\t\t// ```\n\t\t// At s=0: dC/ds = C_0, C=0\n\t\t// At s=0.8: C=C_mid\n\t\t// At s=1.0: C=C_max\n\t\t// ```\n\n\t\tlet mid = 0.8;\n\t\tlet midInv = 1.25;\n\t\tlet t, k0, k1, k2;\n\n\t\tif (s < mid) {\n\t\t\tt = midInv * s;\n\t\t\tk0 = 0.0;\n\t\t\tk1 = mid * c0;\n\t\t\tk2 = 1.0 - k1 / cMid;\n\t\t}\n\t\telse {\n\t\t\tt = 5 * (s - 0.8);\n\t\t\tk0 = cMid;\n\t\t\tk1 = (0.2 * cMid ** 2 * 1.25 ** 2) / c0;\n\t\t\tk2 = 1.0 - k1 / (cMax - cMid);\n\t\t}\n\n\t\tlet c = k0 + (t * k1) / (1.0 - k2 * t);\n\n\t\ta = c * a_;\n\t\tb = c * b_;\n\t}\n\n\treturn [L, a, b];\n}\n\nfunction oklabToOkhsl (lab, lmsToRgb, okCoeff) {\n\t// Oklab to Okhsl.\n\n\t// Epsilon for lightness should approach close to 32 bit lightness\n\t// Epsilon for saturation just needs to be sufficiently close when denoting achromatic\n\tlet εL = 1e-7;\n\tlet εS = 1e-4;\n\tlet L = lab[0];\n\tlet s = 0.0;\n\tlet l = toe(L);\n\n\tlet c = Math.sqrt(lab[1] ** 2 + lab[2] ** 2);\n\tlet h = 0.5 + Math.atan2(-lab[2], -lab[1]) / tau;\n\n\tif (l !== 0.0 && l !== 1.0 && c !== 0) {\n\t\tlet a_ = lab[1] / c;\n\t\tlet b_ = lab[2] / c;\n\n\t\tlet [c0, cMid, cMax] = getCs([L, a_, b_], lmsToRgb, okCoeff);\n\n\t\tlet mid = 0.8;\n\t\tlet midInv = 1.25;\n\t\tlet k0, k1, k2, t;\n\n\t\tif (c < cMid) {\n\t\t\tk1 = mid * c0;\n\t\t\tk2 = 1.0 - k1 / cMid;\n\n\t\t\tt = c / (k1 + k2 * c);\n\t\t\ts = t * mid;\n\t\t}\n\t\telse {\n\t\t\tk0 = cMid;\n\t\t\tk1 = (0.2 * cMid ** 2 * midInv ** 2) / c0;\n\t\t\tk2 = 1.0 - k1 / (cMax - cMid);\n\n\t\t\tt = (c - k0) / (k1 + k2 * (c - k0));\n\t\t\ts = mid + 0.2 * t;\n\t\t}\n\t}\n\n\tconst achromatic = Math.abs(s) < εS;\n\tif (achromatic || l === 0.0 || Math.abs(1 - l) < εL) {\n\t\th = null;\n\t\t// Due to floating point imprecision near lightness of 1, we can end up\n\t\t// with really high around white, this is to provide consistency as\n\t\t// saturation can be really high for white due this imprecision.\n\t\tif (!achromatic) {\n\t\t\ts = 0.0;\n\t\t}\n\t}\n\telse {\n\t\th = constrain(h * 360);\n\t}\n\n\treturn [h, s, l];\n}\n\nexport default new ColorSpace({\n\tid: \"okhsl\",\n\tname: \"Okhsl\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 1],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: Oklab,\n\tgamutSpace: \"self\",\n\n\t// Convert Oklab to Okhsl\n\tfromBase (lab) {\n\t\treturn oklabToOkhsl(lab, toSRGBLinear, RGBCoeff);\n\t},\n\n\t// Convert Okhsl to Oklab\n\ttoBase (hsl) {\n\t\treturn okhslToOklab(hsl, toSRGBLinear, RGBCoeff);\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--okhsl\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport OKLab from \"./oklab.js\";\nimport { toe, toeInv } from \"./okhsl.js\";\n\nexport default new ColorSpace({\n\tid: \"oklrab\",\n\tname: \"Oklrab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-0.4, 0.4],\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-0.4, 0.4],\n\t\t},\n\t},\n\n\t// Note that XYZ is relative to D65\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase (oklab) {\n\t\treturn [toe(oklab[0]), oklab[1], oklab[2]];\n\t},\n\ttoBase (oklrab) {\n\t\treturn [toeInv(oklrab[0]), oklrab[1], oklrab[2]];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>[-1,1]\",\n\t\t\t\t\"<number> | <percentage>[-1,1]\",\n\t\t\t],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport OKLrab from \"./oklrab.js\";\nimport lch from \"./lch.js\";\n\nexport default new ColorSpace({\n\tid: \"oklrch\",\n\tname: \"Oklrch\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLrab,\n\tfromBase: lch.fromBase,\n\ttoBase: lch.toBase,\n\n\tformats: {\n\t\tcolor: {\n\t\t\tcoords: [\n\t\t\t\t\"<percentage> | <number>\",\n\t\t\t\t\"<number> | <percentage>[0,1]\",\n\t\t\t\t\"<number> | <angle>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","// Okhsv class.\n//\n// ---- License ----\n//\n// Copyright (c) 2021 Björn Ottosson\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n// of the Software, and to permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport ColorSpace from \"../ColorSpace.js\";\nimport Oklab from \"./oklab.js\";\nimport { spow, multiply_v3_m3x3 } from \"../util.js\";\nimport { constrain } from \"../angles.js\";\nimport {\n\ttau,\n\ttoe,\n\ttoeInv,\n\tfindCusp,\n\ttoSt,\n\toklabToLinearRGB,\n\ttoSRGBLinear,\n\tRGBCoeff,\n} from \"./okhsl.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n/** @typedef {import(\"../types.js\").Vector3} Vector3 */\n/** @typedef {import(\"../types.js\").Coords} Coords */\n/** @typedef {import(\"../types.js\").OKCoeff} OKCoeff */\n\n/**\n *\n * @param {Vector3} hsv\n * @param {Matrix3x3} lmsToRgb\n * @param {OKCoeff} okCoeff\n * @returns {Coords}\n */\nfunction okhsvToOklab (hsv, lmsToRgb, okCoeff) {\n\t// Convert from Okhsv to Oklab.\"\"\"\n\n\tlet [h, s, v] = hsv;\n\th = constrain(h) / 360.0;\n\n\tlet l = toeInv(v);\n\tlet a = null;\n\tlet b = null;\n\n\t// Avoid processing gray or colors with undefined hues\n\tif (l !== 0.0 && s !== 0.0) {\n\t\tlet a_ = Math.cos(tau * h);\n\t\tlet b_ = Math.sin(tau * h);\n\n\t\tlet cusp = findCusp(a_, b_, lmsToRgb, okCoeff);\n\t\tlet [sMax, tMax] = toSt(cusp);\n\t\tlet s0 = 0.5;\n\t\tlet k = 1 - s0 / sMax;\n\n\t\t// first we compute L and V as if the gamut is a perfect triangle:\n\n\t\t// L, C when v==1:\n\t\tlet lv = 1 - (s * s0) / (s0 + tMax - tMax * k * s);\n\t\tlet cv = (s * tMax * s0) / (s0 + tMax - tMax * k * s);\n\n\t\tl = v * lv;\n\t\tlet c = v * cv;\n\n\t\t// then we compensate for both toe and the curved top part of the triangle:\n\t\tlet lvt = toeInv(lv);\n\t\tlet cvt = (cv * lvt) / lv;\n\n\t\tlet lNew = toeInv(l);\n\t\tc = (c * lNew) / l;\n\t\tl = lNew;\n\n\t\t// RGB scale\n\t\tlet [rs, gs, bs] = oklabToLinearRGB([lvt, a_ * cvt, b_ * cvt], lmsToRgb);\n\t\tlet scaleL = spow(1.0 / Math.max(Math.max(rs, gs), Math.max(bs, 0.0)), 1 / 3);\n\n\t\tl = l * scaleL;\n\t\tc = c * scaleL;\n\n\t\ta = c * a_;\n\t\tb = c * b_;\n\t}\n\n\treturn [l, a, b];\n}\n\n/**\n *\n * @param {Vector3} lab\n * @param {Matrix3x3} lmsToRgb\n * @param {OKCoeff} okCoeff\n * @returns {Coords}\n */\nfunction oklabToOkhsv (lab, lmsToRgb, okCoeff) {\n\t// Oklab to Okhsv.\n\n\t// Epsilon for saturation just needs to be sufficiently close when denoting achromatic\n\tlet ε = 1e-4;\n\tlet l = lab[0];\n\tlet s = 0.0;\n\tlet v = toe(l);\n\tlet c = Math.sqrt(lab[1] ** 2 + lab[2] ** 2);\n\tlet h = 0.5 + Math.atan2(-lab[2], -lab[1]) / tau;\n\n\tif (l !== 0.0 && l !== 1 && c !== 0.0) {\n\t\tlet a_ = lab[1] / c;\n\t\tlet b_ = lab[2] / c;\n\n\t\tlet cusp = findCusp(a_, b_, lmsToRgb, okCoeff);\n\t\tlet [sMax, tMax] = toSt(cusp);\n\t\tlet s0 = 0.5;\n\t\tlet k = 1 - s0 / sMax;\n\n\t\t// first we find `L_v`, `C_v`, `L_vt` and `C_vt`\n\t\tlet t = tMax / (c + l * tMax);\n\t\tlet lv = t * l;\n\t\tlet cv = t * c;\n\n\t\tlet lvt = toeInv(lv);\n\t\tlet cvt = (cv * lvt) / lv;\n\n\t\t// we can then use these to invert the step that compensates\n\t\t// for the toe and the curved top part of the triangle:\n\t\tlet [rs, gs, bs] = oklabToLinearRGB([lvt, a_ * cvt, b_ * cvt], lmsToRgb);\n\t\tlet scaleL = spow(1.0 / Math.max(Math.max(rs, gs), Math.max(bs, 0.0)), 1 / 3);\n\n\t\tl = l / scaleL;\n\t\tc = c / scaleL;\n\n\t\tc = (c * toe(l)) / l;\n\t\tl = toe(l);\n\n\t\t// we can now compute v and s:\n\t\tv = l / lv;\n\t\ts = ((s0 + tMax) * cv) / (tMax * s0 + tMax * k * cv);\n\t}\n\n\tif (Math.abs(s) < ε || v === 0.0) {\n\t\th = null;\n\t}\n\telse {\n\t\th = constrain(h * 360);\n\t}\n\n\treturn [h, s, v];\n}\n\nexport default new ColorSpace({\n\tid: \"okhsv\",\n\tname: \"Okhsv\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 1],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tv: {\n\t\t\trange: [0, 1],\n\t\t\tname: \"Value\",\n\t\t},\n\t},\n\n\tbase: Oklab,\n\tgamutSpace: \"self\",\n\n\t// Convert Oklab to Okhsl\n\tfromBase (lab) {\n\t\treturn oklabToOkhsv(lab, toSRGBLinear, RGBCoeff);\n\t},\n\n\t// Convert Okhsl to Oklab\n\ttoBase (hsl) {\n\t\treturn okhsvToOklab(hsl, toSRGBLinear, RGBCoeff);\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--okhsv\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport { WHITES } from \"../adapt.js\";\nimport xyz_d65 from \"./xyz-d65.js\";\nimport { uv } from \"../chromaticity.js\";\nimport { isNone, skipNone } from \"../util.js\";\n\nlet white = WHITES.D65;\n\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27; // 29^3/3^3\nconst [U_PRIME_WHITE, V_PRIME_WHITE] = uv({ space: xyz_d65, coords: white });\n\nexport default new ColorSpace({\n\tid: \"luv\",\n\tname: \"Luv\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\t// Reference ranges from https://facelessuser.github.io/coloraide/colors/luv/\n\t\tu: {\n\t\t\trefRange: [-215, 215],\n\t\t},\n\t\tv: {\n\t\t\trefRange: [-215, 215],\n\t\t},\n\t},\n\n\twhite: white,\n\tbase: xyz_d65,\n\n\t// Convert D65-adapted XYZ to Luv\n\t// https://en.wikipedia.org/wiki/CIELUV#The_forward_transformation\n\tfromBase (XYZ) {\n\t\tlet xyz = /** @type {[number, number, number]} */ ([\n\t\t\tskipNone(XYZ[0]),\n\t\t\tskipNone(XYZ[1]),\n\t\t\tskipNone(XYZ[2]),\n\t\t]);\n\t\tlet y = xyz[1];\n\n\t\tlet [up, vp] = uv({ space: xyz_d65, coords: xyz });\n\n\t\t// Protect against XYZ of [0, 0, 0]\n\t\tif (!Number.isFinite(up) || !Number.isFinite(vp)) {\n\t\t\treturn [0, 0, 0];\n\t\t}\n\n\t\tlet L = y <= ε ? κ * y : 116 * Math.cbrt(y) - 16;\n\t\treturn [L, 13 * L * (up - U_PRIME_WHITE), 13 * L * (vp - V_PRIME_WHITE)];\n\t},\n\n\t// Convert Luv to D65-adapted XYZ\n\t// https://en.wikipedia.org/wiki/CIELUV#The_reverse_transformation\n\ttoBase (Luv) {\n\t\tlet [L, u, v] = Luv;\n\n\t\t// Protect against division by zero and none Lightness\n\t\tif (L === 0 || isNone(L)) {\n\t\t\treturn [0, 0, 0];\n\t\t}\n\n\t\tu = skipNone(u);\n\t\tv = skipNone(v);\n\n\t\tlet up = u / (13 * L) + U_PRIME_WHITE;\n\t\tlet vp = v / (13 * L) + V_PRIME_WHITE;\n\n\t\tlet y = L <= 8 ? L / κ : Math.pow((L + 16) / 116, 3);\n\n\t\treturn [y * ((9 * up) / (4 * vp)), y, y * ((12 - 3 * up - 20 * vp) / (4 * vp))];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--luv\",\n\t\t\tcoords: [\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t\t\"<number> | <percentage>\",\n\t\t\t],\n\t\t},\n\t},\n});\n","import ColorSpace from \"../ColorSpace.js\";\nimport Luv from \"./luv.js\";\nimport lch from \"./lch.js\";\n\nexport default new ColorSpace({\n\tid: \"lchuv\",\n\tname: \"LChuv\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 220],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t},\n\n\tbase: Luv,\n\tfromBase: lch.fromBase,\n\ttoBase: lch.toBase,\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--lchuv\",\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>\", \"<number> | <angle>\"],\n\t\t},\n\t},\n});\n","/*\nAdapted from: https://github.com/hsluv/hsluv-javascript/blob/14b49e6cf9a9137916096b8487a5372626b57ba4/src/hsluv.ts\n\nCopyright (c) 2012-2022 Alexei Boronine\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport ColorSpace from \"../ColorSpace.js\";\nimport LCHuv from \"./lchuv.js\";\nimport sRGB from \"./srgb.js\";\nimport { fromXYZ_M } from \"./srgb-linear.js\";\nimport { skipNone } from \"../util.js\";\n\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27; // 29^3/3^3\n\nconst m_r0 = fromXYZ_M[0][0];\nconst m_r1 = fromXYZ_M[0][1];\nconst m_r2 = fromXYZ_M[0][2];\nconst m_g0 = fromXYZ_M[1][0];\nconst m_g1 = fromXYZ_M[1][1];\nconst m_g2 = fromXYZ_M[1][2];\nconst m_b0 = fromXYZ_M[2][0];\nconst m_b1 = fromXYZ_M[2][1];\nconst m_b2 = fromXYZ_M[2][2];\n\nfunction distanceFromOriginAngle (slope, intercept, angle) {\n\tconst d = intercept / (Math.sin(angle) - slope * Math.cos(angle));\n\treturn d < 0 ? Infinity : d;\n}\n\n/**\n * @param {number} l\n */\nexport function calculateBoundingLines (l) {\n\tconst sub1 = Math.pow(l + 16, 3) / 1560896;\n\tconst sub2 = sub1 > ε ? sub1 : l / κ;\n\tconst s1r = sub2 * (284517 * m_r0 - 94839 * m_r2);\n\tconst s2r = sub2 * (838422 * m_r2 + 769860 * m_r1 + 731718 * m_r0);\n\tconst s3r = sub2 * (632260 * m_r2 - 126452 * m_r1);\n\tconst s1g = sub2 * (284517 * m_g0 - 94839 * m_g2);\n\tconst s2g = sub2 * (838422 * m_g2 + 769860 * m_g1 + 731718 * m_g0);\n\tconst s3g = sub2 * (632260 * m_g2 - 126452 * m_g1);\n\tconst s1b = sub2 * (284517 * m_b0 - 94839 * m_b2);\n\tconst s2b = sub2 * (838422 * m_b2 + 769860 * m_b1 + 731718 * m_b0);\n\tconst s3b = sub2 * (632260 * m_b2 - 126452 * m_b1);\n\n\treturn {\n\t\tr0s: s1r / s3r,\n\t\tr0i: (s2r * l) / s3r,\n\t\tr1s: s1r / (s3r + 126452),\n\t\tr1i: ((s2r - 769860) * l) / (s3r + 126452),\n\t\tg0s: s1g / s3g,\n\t\tg0i: (s2g * l) / s3g,\n\t\tg1s: s1g / (s3g + 126452),\n\t\tg1i: ((s2g - 769860) * l) / (s3g + 126452),\n\t\tb0s: s1b / s3b,\n\t\tb0i: (s2b * l) / s3b,\n\t\tb1s: s1b / (s3b + 126452),\n\t\tb1i: ((s2b - 769860) * l) / (s3b + 126452),\n\t};\n}\n\nfunction calcMaxChromaHsluv (lines, h) {\n\tconst hueRad = (h / 360) * Math.PI * 2;\n\tconst r0 = distanceFromOriginAngle(lines.r0s, lines.r0i, hueRad);\n\tconst r1 = distanceFromOriginAngle(lines.r1s, lines.r1i, hueRad);\n\tconst g0 = distanceFromOriginAngle(lines.g0s, lines.g0i, hueRad);\n\tconst g1 = distanceFromOriginAngle(lines.g1s, lines.g1i, hueRad);\n\tconst b0 = distanceFromOriginAngle(lines.b0s, lines.b0i, hueRad);\n\tconst b1 = distanceFromOriginAngle(lines.b1s, lines.b1i, hueRad);\n\n\treturn Math.min(r0, r1, g0, g1, b0, b1);\n}\n\nexport default new ColorSpace({\n\tid: \"hsluv\",\n\tname: \"HSLuv\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: LCHuv,\n\tgamutSpace: sRGB,\n\n\t// Convert LCHuv to HSLuv\n\tfromBase (lch) {\n\t\tlet [l, c, h] = [skipNone(lch[0]), skipNone(lch[1]), skipNone(lch[2])];\n\t\tlet s;\n\n\t\tif (l > 99.9999999) {\n\t\t\ts = 0;\n\t\t\tl = 100;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\ts = 0;\n\t\t\tl = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHsluv(lines, h);\n\t\t\ts = (c / max) * 100;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t// Convert HSLuv to LCHuv\n\ttoBase (hsl) {\n\t\tlet [h, s, l] = [skipNone(hsl[0]), skipNone(hsl[1]), skipNone(hsl[2])];\n\t\tlet c;\n\n\t\tif (l > 99.9999999) {\n\t\t\tl = 100;\n\t\t\tc = 0;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\tl = 0;\n\t\t\tc = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHsluv(lines, h);\n\t\t\tc = (max / 100) * s;\n\t\t}\n\n\t\treturn [l, c, h];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--hsluv\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","/*\nAdapted from: https://github.com/hsluv/hsluv-javascript/blob/14b49e6cf9a9137916096b8487a5372626b57ba4/src/hsluv.ts\n\nCopyright (c) 2012-2022 Alexei Boronine\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport ColorSpace from \"../ColorSpace.js\";\nimport LCHuv from \"./lchuv.js\";\nimport { fromXYZ_M } from \"./srgb-linear.js\";\nimport { skipNone } from \"../util.js\";\nimport { calculateBoundingLines } from \"./hsluv.js\";\n\nconst ε = 216 / 24389; // 6^3/29^3 == (24/116)^3\nconst κ = 24389 / 27; // 29^3/3^3\n\nconst m_r0 = fromXYZ_M[0][0];\nconst m_r1 = fromXYZ_M[0][1];\nconst m_r2 = fromXYZ_M[0][2];\nconst m_g0 = fromXYZ_M[1][0];\nconst m_g1 = fromXYZ_M[1][1];\nconst m_g2 = fromXYZ_M[1][2];\nconst m_b0 = fromXYZ_M[2][0];\nconst m_b1 = fromXYZ_M[2][1];\nconst m_b2 = fromXYZ_M[2][2];\n\nfunction distanceFromOrigin (slope, intercept) {\n\treturn Math.abs(intercept) / Math.sqrt(Math.pow(slope, 2) + 1);\n}\n\nfunction calcMaxChromaHpluv (lines) {\n\tlet r0 = distanceFromOrigin(lines.r0s, lines.r0i);\n\tlet r1 = distanceFromOrigin(lines.r1s, lines.r1i);\n\tlet g0 = distanceFromOrigin(lines.g0s, lines.g0i);\n\tlet g1 = distanceFromOrigin(lines.g1s, lines.g1i);\n\tlet b0 = distanceFromOrigin(lines.b0s, lines.b0i);\n\tlet b1 = distanceFromOrigin(lines.b1s, lines.b1i);\n\n\treturn Math.min(r0, r1, g0, g1, b0, b1);\n}\n\nexport default new ColorSpace({\n\tid: \"hpluv\",\n\tname: \"HPLuv\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\",\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\",\n\t\t},\n\t},\n\n\tbase: LCHuv,\n\tgamutSpace: \"self\",\n\n\t// Convert LCHuv to HPLuv\n\tfromBase (lch) {\n\t\tlet [l, c, h] = [skipNone(lch[0]), skipNone(lch[1]), skipNone(lch[2])];\n\t\tlet s;\n\n\t\tif (l > 99.9999999) {\n\t\t\ts = 0;\n\t\t\tl = 100;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\ts = 0;\n\t\t\tl = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHpluv(lines);\n\t\t\ts = (c / max) * 100;\n\t\t}\n\t\treturn [h, s, l];\n\t},\n\n\t// Convert HPLuv to LCHuv\n\ttoBase (hsl) {\n\t\tlet [h, s, l] = [skipNone(hsl[0]), skipNone(hsl[1]), skipNone(hsl[2])];\n\t\tlet c;\n\n\t\tif (l > 99.9999999) {\n\t\t\tl = 100;\n\t\t\tc = 0;\n\t\t}\n\t\telse if (l < 0.00000001) {\n\t\t\tl = 0;\n\t\t\tc = 0;\n\t\t}\n\t\telse {\n\t\t\tlet lines = calculateBoundingLines(l);\n\t\t\tlet max = calcMaxChromaHpluv(lines);\n\t\t\tc = (max / 100) * s;\n\t\t}\n\n\t\treturn [l, c, h];\n\t},\n\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"--hpluv\",\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage> | <number>\", \"<percentage> | <number>\"],\n\t\t},\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport REC_2020_Linear from \"./rec2020-linear.js\";\n\nexport default new RGBColorSpace({\n\tid: \"rec2100-linear\",\n\tname: \"Linear REC.2100\",\n\twhite: \"D65\",\n\ttoBase: REC_2020_Linear.toBase,\n\tfromBase: REC_2020_Linear.fromBase,\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport REC_2100_Linear from \"./rec2100-linear.js\";\n\nconst Yw = 203; // absolute luminance of media white, cd/m²\nconst n = 2610 / 2 ** 14;\nconst ninv = 2 ** 14 / 2610;\nconst m = 2523 / 2 ** 5;\nconst minv = 2 ** 5 / 2523;\nconst c1 = 3424 / 2 ** 12;\nconst c2 = 2413 / 2 ** 7;\nconst c3 = 2392 / 2 ** 7;\n\nexport default new RGBColorSpace({\n\tid: \"rec2100pq\",\n\tcssId: \"rec2100-pq\",\n\tname: \"REC.2100-PQ\",\n\tbase: REC_2100_Linear,\n\ttoBase (RGB) {\n\t\t// given PQ encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = (Math.max(val ** minv - c1, 0) / (c2 - c3 * val ** minv)) ** ninv;\n\t\t\treturn (x * 10000) / Yw; // luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// returnPQ encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = Math.max((val * Yw) / 10000, 0); // absolute luminance of peak white is 10,000 cd/m².\n\t\t\tlet num = c1 + c2 * x ** n;\n\t\t\tlet denom = 1 + c3 * x ** n;\n\n\t\t\treturn (num / denom) ** m;\n\t\t});\n\t},\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport REC_2100_Linear from \"./rec2100-linear.js\";\nimport { spow } from \"../util.js\";\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nconst scale = 3.7743; // Place 18% grey at HLG 0.38, so media white at 0.75\n\nexport default new RGBColorSpace({\n\tid: \"rec2100hlg\",\n\tcssId: \"rec2100-hlg\",\n\tname: \"REC.2100-HLG\",\n\treferred: \"scene\",\n\n\tbase: REC_2100_Linear,\n\ttoBase (RGB) {\n\t\t// given HLG encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\t// first the HLG EOTF\n\t\t\t// ITU-R BT.2390-10 p.30 section\n\t\t\t// 6.3 The hybrid log-gamma electro-optical transfer function (EOTF)\n\t\t\t// Then scale by 3 so media white is 1.0\n\t\t\tif (val <= 0.5) {\n\t\t\t\treturn (val ** 2 / 3) * scale;\n\t\t\t}\n\t\t\treturn ((Math.exp((val - c) / a) + b) / 12) * scale;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// where diffuse white is 1.0,\n\t\t// return HLG encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\t// first scale to put linear-light media white at 1/3\n\t\t\tval /= scale;\n\t\t\t// now the HLG OETF\n\t\t\t// ITU-R BT.2390-10 p.23\n\t\t\t// 6.1 The hybrid log-gamma opto-electronic transfer function (OETF)\n\t\t\tif (val <= 1 / 12) {\n\t\t\t\treturn spow(3 * val, 0.5);\n\t\t\t}\n\t\t\treturn a * Math.log(12 * val - b) + c;\n\t\t});\n\t},\n});\n","import hooks from \"./hooks.js\";\nimport { multiplyMatrices } from \"./util.js\";\nimport { WHITES } from \"./adapt.js\";\n\n// Type \"imports\"\n/** @typedef {import(\"./types.js\").White} White */\n/** @typedef {import(\"./types.js\").CAT} CAT */\n\n/** @type {Record<string, CAT>} */\nexport const CATs = {};\n\nhooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nhooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nexport function defineCAT (/** @type {CAT} */ { id, toCone_M, fromCone_M }) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tCATs[id] = arguments[0];\n}\n\n/**\n *\n * @param {White} W1\n * @param {White} W2\n * @param {string} id\n * @returns {number[][]}\n */\nexport function adapt (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = CATs[id];\n\n\tlet [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\n\tlet [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\t// prettier-ignore\n\tlet scale = [\n\t\t[ρd / ρs,  0,        0      ],\n\t\t[0,        γd / γs,  0      ],\n\t\t[0,        0,        βd / βs],\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M = multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n}\n\n// prettier-ignore\ndefineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ],\n\t],\n\tfromCone_M: [\n\t\t[ 1.8599363874558397, -1.1293816185800916,   0.21989740959619328     ],\n\t\t[ 0.3611914362417676,  0.6388124632850422,  -0.000006370596838649899 ],\n\t\t[ 0,                   0,                    1.0890636230968613      ],\n\t],\n});\n\n// prettier-ignore\ndefineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ],\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929054667121, -0.14705425642099013, 0.15996265166373122  ],\n\t\t[  0.4323052697233945,  0.5183602715367774,  0.049291228212855594 ],\n\t\t[ -0.00852866457517732, 0.04004282165408486, 0.96848669578755     ],\n\t],\n});\n\n// prettier-ignore\ndefineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ],\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238208355142,   -0.27886900021828726, 0.18274517938277307 ],\n\t\t[  0.4543690419753592,    0.4735331543074117,  0.07209780371722911 ],\n\t\t[ -0.009627608738429355, -0.00569803121611342, 1.0153256399545427  ],\n\t],\n});\n\n// prettier-ignore\ndefineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ],\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233,   -1.0112546305316845,  0.14918677544445172  ],\n\t\t[  0.3875265432361372,   0.6214474419314753, -0.008973985167612521 ],\n\t\t[ -0.01584149884933386, -0.03412293802851557, 1.0499644368778496   ],\n\t],\n});\n\n// prettier-ignore\nObject.assign(WHITES, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:   [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent fluorescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport { WHITES } from \"../adapt.js\";\nimport \"../CATs.js\"; // because of the funky whitepoint\n\n// Type \"imports\"\n/** @typedef {import(\"../types.js\").Matrix3x3} Matrix3x3 */\n\n// The ACES whitepoint\n// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\n// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\n// Similar to D60\nWHITES.ACES = [0.32168 / 0.33767, 1.0, (1.0 - 0.32168 - 0.33767) / 0.33767];\n\n// convert an array of linear-light ACEScc values to CIE XYZ\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst toXYZ_M = [\n\t[  0.6624541811085053,   0.13400420645643313,  0.1561876870049078  ],\n\t[  0.27222871678091454,  0.6740817658111484,   0.05368951740793705 ],\n\t[ -0.005574649490394108, 0.004060733528982826, 1.0103391003129971  ],\n];\n/** @type {Matrix3x3} */\n// prettier-ignore\nconst fromXYZ_M = [\n\t[  1.6410233796943257,   -0.32480329418479,    -0.23642469523761225  ],\n\t[ -0.6636628587229829,    1.6153315916573379,   0.016756347685530137 ],\n\t[  0.011721894328375376, -0.008284441996237409, 0.9883948585390215   ],\n];\n\nexport default new RGBColorSpace({\n\tid: \"acescg\",\n\tcssId: \"--acescg\",\n\tname: \"ACEScg\",\n\n\t// ACEScg – A scene-referred, linear-light encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescg/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\tcoords: {\n\t\tr: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Red\",\n\t\t},\n\t\tg: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Green\",\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Blue\",\n\t\t},\n\t},\n\n\treferred: \"scene\",\n\n\twhite: WHITES.ACES,\n\n\ttoXYZ_M,\n\tfromXYZ_M,\n});\n\n// export default Color;\n","import RGBColorSpace from \"../RGBColorSpace.js\";\nimport \"../CATs.js\"; // because of the funky whitepoint\nimport ACEScg from \"./acescg.js\";\n\nconst ε = 2 ** -16;\n\n// the smallest value which, in the 32bit IEEE 754 float encoding,\n// decodes as a non-negative value\nconst ACES_min_nonzero = -0.35828683;\n\n// brightest encoded value, decodes to 65504\nconst ACES_cc_max = (Math.log2(65504) + 9.72) / 17.52; // 1.468\n\nexport default new RGBColorSpace({\n\tid: \"acescc\",\n\tcssId: \"--acescc\",\n\tname: \"ACEScc\",\n\t// see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescc/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\n\t// Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n\t// below 18% middle gray are encoded as negative ACEScc values.\n\t// These values should be preserved per the encoding in Section 4.4\n\t// so that all positive ACES values are maintained.\"\n\tcoords: {\n\t\tr: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Red\",\n\t\t},\n\t\tg: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Green\",\n\t\t},\n\t\tb: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Blue\",\n\t\t},\n\t},\n\treferred: \"scene\",\n\n\tbase: ACEScg,\n\t// from section 4.4.2 Decoding Function\n\ttoBase (RGB) {\n\t\tconst low = (9.72 - 15) / 17.52; // -0.3014\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= low) {\n\t\t\t\treturn (2 ** (val * 17.52 - 9.72) - ε) * 2; // very low values, below -0.3014\n\t\t\t}\n\t\t\telse if (val < ACES_cc_max) {\n\t\t\t\treturn 2 ** (val * 17.52 - 9.72);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// val >= ACES_cc_max\n\t\t\t\treturn 65504;\n\t\t\t}\n\t\t});\n\t},\n\n\t// Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0) {\n\t\t\t\treturn (Math.log2(ε) + 9.72) / 17.52; // -0.3584\n\t\t\t}\n\t\t\telse if (val < ε) {\n\t\t\t\treturn (Math.log2(ε + val * 0.5) + 9.72) / 17.52;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// val >= ε\n\t\t\t\treturn (Math.log2(val) + 9.72) / 17.52;\n\t\t\t}\n\t\t});\n\t},\n\t// encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n\t// encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n});\n","/**\n * @packageDocumentation\n * Re-exports all the spaces built into Color.js.\n */\nexport { default as XYZ_D65 } from \"./xyz-d65.js\";\nexport { default as XYZ_D50 } from \"./xyz-d50.js\";\nexport { default as XYZ_ABS_D65 } from \"./xyz-abs-d65.js\";\nexport { default as Lab_D65 } from \"./lab-d65.js\";\nexport { default as Lab } from \"./lab.js\";\nexport { default as LCH } from \"./lch.js\";\nexport { default as sRGB_Linear } from \"./srgb-linear.js\";\nexport { default as sRGB } from \"./srgb.js\";\nexport { default as HSL } from \"./hsl.js\";\nexport { default as HWB } from \"./hwb.js\";\nexport { default as HSV } from \"./hsv.js\";\nexport { default as P3_Linear } from \"./p3-linear.js\";\nexport { default as P3 } from \"./p3.js\";\nexport { default as A98RGB_Linear } from \"./a98rgb-linear.js\";\nexport { default as A98RGB } from \"./a98rgb.js\";\nexport { default as ProPhoto_Linear } from \"./prophoto-linear.js\";\nexport { default as ProPhoto } from \"./prophoto.js\";\nexport { default as REC_2020_Linear } from \"./rec2020-linear.js\";\nexport { default as REC_2020 } from \"./rec2020.js\";\nexport { default as REC_2020_Scene_Referred } from \"./rec2020-oetf.js\";\nexport { default as OKLab } from \"./oklab.js\";\nexport { default as OKLCH } from \"./oklch.js\";\nexport { default as OKLrab } from \"./oklrab.js\";\nexport { default as OKLrCH } from \"./oklrch.js\";\nexport { default as Okhsl } from \"./okhsl.js\";\nexport { default as Okhsv } from \"./okhsv.js\";\nexport { default as CAM16_JMh } from \"./cam16.js\";\nexport { default as HCT } from \"./hct.js\";\nexport { default as Luv } from \"./luv.js\";\nexport { default as LCHuv } from \"./lchuv.js\";\nexport { default as HSLuv } from \"./hsluv.js\";\nexport { default as HPLuv } from \"./hpluv.js\";\n\nexport * from \"./index-fn-hdr.js\";\n"],"names":["adapt","ε","XYZ_D65","ε3","κ","white","xyz_d50","util.isNone","Lab","constrainAngle","π","d2r","XYZtoLMS_M","LMStoXYZ_M","oklab","Yw","b","n","ninv","c1","c2","c3","m1","tau","deg2rad","viewingConditions","util.isString","util.clamp","inGamut","checkInGamut","util.serializeNumber","toXYZ_M","fromXYZ_M","REC2020Linear","angles.adjust","OKLab"],"mappings":"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"}